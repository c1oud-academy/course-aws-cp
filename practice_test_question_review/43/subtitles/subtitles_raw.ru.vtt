WEBVTT

00:00:00.000 --> 00:00:02.360
Добрый день, уважаемые студенты!

00:00:02.360 --> 00:00:05.960
Я рад вас всех видеть на очередной сессии разбора

00:00:05.960 --> 00:00:07.360
вопросов практистестов.

00:00:07.360 --> 00:00:11.640
Вопросы практистестов являются наиболее приближенными

00:00:11.640 --> 00:00:15.520
к вопросам из реального AWS экзамена.

00:00:15.520 --> 00:00:19.800
Таким образом, потренировавшись на практистестах из нашей

00:00:19.800 --> 00:00:24.120
платформы, а также просмотрев все разборы вопросов практистеста,

00:00:24.120 --> 00:00:27.320
вы максимально увеличите свои шансы для успешной

00:00:27.320 --> 00:00:29.320
сдачи реального AWS экзамена.

00:00:29.320 --> 00:00:35.400
Для разбора мы выбираем самые сложные вопросы, поэтому

00:00:35.400 --> 00:00:38.640
научившись отвечать на эти сложные вопросы, ответить

00:00:38.640 --> 00:00:42.160
на оставшиеся вопросы для вас не составит труда.

00:00:42.160 --> 00:00:47.980
Я бы хотел также отметить, что вам необходимо обратить

00:00:47.980 --> 00:00:52.440
внимание не только на содержание самого вопроса, но и также

00:00:52.440 --> 00:00:55.560
обратить внимание, какие действия мы предпринимаем

00:00:55.560 --> 00:00:57.640
для того, чтобы найти правильный ответ.

00:00:57.640 --> 00:01:00.240
Итак, давайте начнем.

00:01:00.240 --> 00:01:07.680
Вопрос, что из нижеперечисленных является рекомендуемыми

00:01:07.680 --> 00:01:12.600
принципами при построении архитектуры в облаке AWS?

00:01:12.600 --> 00:01:15.480
Этот вопрос является вопросом с несколькими правильными

00:01:15.480 --> 00:01:16.480
ответами.

00:01:16.480 --> 00:01:19.080
В нашем случае нужно выбрать два правильных ответа.

00:01:19.080 --> 00:01:24.720
Хорошо, попробуем ответить на этот вопрос.

00:01:24.720 --> 00:01:29.160
Представим, что мы что-то не помним и пытаемся ответить

00:01:29.160 --> 00:01:33.880
на вопрос, исключив заведомо неверные варианты ответов.

00:01:33.880 --> 00:01:38.000
Обратите внимание на вариант A и вариант B, где они очень

00:01:38.000 --> 00:01:42.400
похожи, отличаются тем, что в первом случае implement

00:01:42.400 --> 00:01:47.800
tight coupling, то есть имплементировать, разрабатывать архитектуру,

00:01:47.800 --> 00:01:49.600
которая сильно связана между собой.

00:01:49.600 --> 00:01:51.880
Второй вариант implement loose coupling.

00:01:51.880 --> 00:01:54.680
Идея в том, что разрабатываем архитектуру и каждую ее

00:01:54.680 --> 00:01:56.440
компонент между собой слабо связаны.

00:01:56.440 --> 00:02:00.960
Здесь идея в том, что когда у вас компоненты вашей

00:02:00.960 --> 00:02:04.240
архитектуры слабо связаны, это говорит о том, что вы

00:02:04.240 --> 00:02:08.440
можете каждый компонент легко заменить и уменьшается

00:02:08.440 --> 00:02:10.600
вероятность того, что вы какую-то связь забудете

00:02:10.600 --> 00:02:13.300
и ваша архитектура сломается.

00:02:13.300 --> 00:02:16.980
Поэтому здесь рекомендация и правильным ответом является

00:02:16.980 --> 00:02:20.160
implement loose coupling.

00:02:20.160 --> 00:02:23.640
Мы нашли один правильный вариант ответа.

00:02:23.640 --> 00:02:27.840
Теперь давайте посмотрим на варианты C, D, E, E.

00:02:27.840 --> 00:02:31.560
Если говорим про C, use monolithic design principles.

00:02:31.560 --> 00:02:37.240
Здесь утверждается, что нам необходимо использовать

00:02:37.240 --> 00:02:42.240
подход монолитного развития продукта, то есть у нас

00:02:42.240 --> 00:02:47.320
есть один большой репозиторий, с которым работают все

00:02:47.320 --> 00:02:48.320
команды.

00:02:48.320 --> 00:02:54.440
Это когда-то давно было верно, но в связи с появлением

00:02:54.440 --> 00:02:59.200
внутри компании малых команд разработки, с получением

00:02:59.200 --> 00:03:03.760
развития и расширения узнаваемости облачных технологий,

00:03:03.760 --> 00:03:06.920
этот вариант себя потихоньку изживает.

00:03:06.920 --> 00:03:10.880
Поэтому на текущий момент использование монолитического

00:03:10.880 --> 00:03:15.960
подхода является неверным, так как создает много проблем

00:03:15.960 --> 00:03:28.200
и запрещает или ограничивает независимое развитие разных

00:03:28.200 --> 00:03:31.360
команд, которые занимаются развитием разных компонентов

00:03:31.360 --> 00:03:33.480
вашей архитектуры.

00:03:33.480 --> 00:03:37.720
Поэтому вариант C мы также исключаем, остается вариант

00:03:37.720 --> 00:03:38.720
D и E.

00:03:38.720 --> 00:03:42.680
Вариант D говорит о том, что scale servers вертикалы.

00:03:42.680 --> 00:03:46.400
Мы с вами проговаривали, что мы можем масштабировать

00:03:46.400 --> 00:03:49.680
наши вычислительные мощности вертикально, горизонтально.

00:03:49.680 --> 00:03:52.840
Вертикально, когда мы один сервер меняем тип инстанца

00:03:52.840 --> 00:03:55.480
со слабого на более мощный.

00:03:55.480 --> 00:04:02.480
А когда мы делаем масштабирование по горизонтали, это говорит

00:04:02.480 --> 00:04:06.480
о том, что мы один сервер, увеличиваем количество

00:04:06.480 --> 00:04:09.320
и вместо одного сервера появляется несколько таких

00:04:09.320 --> 00:04:13.960
же серверов.

00:04:13.960 --> 00:04:18.440
Здесь этот вариант, он может быть спорным, поэтому мы

00:04:18.440 --> 00:04:21.320
можем его отметить желтым и посмотреть на вариант

00:04:21.320 --> 00:04:22.320
E.

00:04:22.320 --> 00:04:26.280
Use disposable resources instead of fixed servers.

00:04:26.280 --> 00:04:30.700
Здесь говорится про том, что мы не должны привязываться

00:04:30.700 --> 00:04:35.200
к конкретному серверу и иметь возможность заменять

00:04:35.200 --> 00:04:37.880
ресурсы, когда это необходимо.

00:04:37.880 --> 00:04:41.880
Это тот подход, который используют облачные технологии,

00:04:41.880 --> 00:04:43.880
в том числе AWS.

00:04:43.880 --> 00:04:49.240
И когда вы разрабатываете ваш продукт, приложение

00:04:49.240 --> 00:04:56.520
и строите свою IT архитектуру, если нет такой необходимости

00:04:56.520 --> 00:05:00.200
привязываться к конкретному серверу, то приложение

00:05:00.200 --> 00:05:03.640
должно разрабатываться таким образом, что оно не

00:05:03.640 --> 00:05:07.520
зависит от этого сервера и замена сервера не должна

00:05:07.520 --> 00:05:10.360
ломать работу вашего приложения.

00:05:10.360 --> 00:05:15.320
Этот подход является одним из принципов при построении

00:05:15.320 --> 00:05:17.400
правильных архитектур в облаке.

00:05:17.400 --> 00:05:20.720
Таким образом, вариант E является вторым правильным

00:05:20.720 --> 00:05:21.720
вариантом ответа.

00:05:21.720 --> 00:05:27.480
На этом мы заканчиваем разбор вопроса практистеста.

00:05:27.480 --> 00:05:31.440
Я надеюсь, вы научились чему-то новому и увидимся

00:05:31.440 --> 00:05:37.920
с вами на следующих наших активностях.