 Добрый день, уважаемые студенты! Я рад вас всех видеть на очередной сессии разбора вопросов практистестов. Вопросы практистестов являются наиболее приближенными к вопросам из реального AWS экзамена. Таким образом, потренировавшись на практистестах из нашей платформы, а также просмотрев все разборы вопросов практистеста, вы максимально увеличите свои шансы для успешной сдачи реального AWS экзамена. Для разбора мы выбираем самые сложные вопросы, поэтому научившись отвечать на эти сложные вопросы, ответить на оставшиеся вопросы для вас не составит труда. Я бы хотел также отметить, что вам необходимо обратить внимание не только на содержание самого вопроса, но и также обратить внимание, какие действия мы предпринимаем для того, чтобы найти правильный ответ. Итак, давайте начнем. Компания использует AWS для того, чтобы хостить все свои картинки. Владельцы компании попросили вас как сотрудника предоставить возможность другим веб-сайтам обращаться к этим картинкам и отдавать пользователям, которые сидят на этих сайтах с веб-браузера. Какой функционал S3 необходимо включить для того, чтобы это все работало корректно? Давайте попробуем ответить на этот вопрос путем исключения заведомо неподходящих вариантов ответа. Начнем с варианта А. Access logs. Access logs говорит за себя это логи. Логи никак не влияют на то, какое поведение есть у ресурса, сервиса, сервера, а лишь записывает, что произошло. Таким образом, вариант А не подходит. Второй вариант это D, lifecycle policy. Lifecycle policy внутри S3 это такой документ, который расписывает какие файлы, какие папки, при каком условии меняют тип хранения в рамках S3. Про типы хранения S3 мы поговорим с вами на лекциях. И типы хранения никак не влияют на то, как ведет себя бакет. Другой вариант, который хотелось бы исключить, это вариант C. То есть SSE C расшифруется как Server side encryption customer provided encryption keys. В этом случае мы говорим про шифрование, ключи шифрования. Так как в вопросе ничего не сказано про шифрование, также мы не видим информацию о том, что выходит какая-то ошибка, что обычно бывает, если ключи не совпадают либо происходит обращение не по защищенному каналу. В этом случае мы вариант C также можем исключить. Остается у нас единственный вариант ответа, это CORS, что является правильным ответом. Касательно CORS хотелось бы также добавить. CORS не является термином никак не связанным с облачными технологиями и никак не связанным с AWS. Это общее понятие в рамках IT и чаще всего используется фронтенд разработчиками. Идея CORS следующая. Представьте есть вебсайт A, есть вебсайт B и вы с браузера как пользователь заходите на вебсайт B. И представим, что вебсайт B для того, чтобы отобразить контент он также использует некоторые материалы, например, картинки, как в этом случае, которые находятся на вебсайте A. Так вот, внутри веббраузера есть встроенный функционал, называется CORS и простыми словами это значит то, что он проверяет в тот момент, когда вы находитесь на сайте B и при этом сайт просит вас обратиться к сайту A, он проверяет CORS policy. Если действительно сайт A разрешил сайту B получать или запрашивать некоторые файлы, то браузер не запрещает этот вызов и показывает, загружает и показывает вам медиа файлы из сайта A внутри сайта B. Если же не прописаны CORS policy, то внутри веббраузера вы получите ошибку. Здесь также следует отметить, что когда вы обращаетесь напрямую к вебсайту A, то проблем с этим не будет. Более того, когда вы обращаетесь не через веббраузер, а программным путем, то CORS тоже не проверяется. Это функционал, который встроен внутри веббраузеров для того, чтобы сделать интернет чуть более безопасным. На этом мы заканчиваем разбор вопроса практистеста. Я надеюсь, вы научились чему-то новому. И увидимся с вами на следующих наших активностях.
