        Добрый день, уважаемые студенты! Я рад вас всех видеть на очередной сессии разбора лабораторной работы. Тема сегодняшней лабораторной работы - это Scale & Load Balance your Architecture. Мы подробнее познакомимся с сервисами ELB - Elastic Load Balancer и Auto Scaling. Итак, давайте начнем. 
        Ожидается, что вы уже находитесь на странице лабораторной работы и инициировали создание временного AWS аккаунта. Сейчас нам необходимо нажать на кнопку AWS для того, чтобы перейти в AWS Management Console. В console первое задание - нам необходимо создать AMI. Для этого нам необходимо в строке поиска ввести EC2 и в выдаче вы видите нужную ссылку. Давайте на нее нажмем и перейдем на сервис Amazon EC2. Далее в левом навигационном меню необходимо выбрать пункт Instances. В отобразившемся списке инстансов необходимо выбрать Web Server 1. Далее нажать на кнопку Actions и в выпадающем меню выбрать пункт Image and templates и нажать на кнопку Create image. Как только вы на нее нажмете, вас перенаправят на новую страницу, в которой необходимо ввести некоторые данные. Первое - это Image name, нужно ввести WebServerAMI. Далее Image description, давайте введем Lab AMI for Web Server. Прокрутим чуть ниже, все остальные настройки оставляем по умолчанию и нажимаем Create image. Как только вы на нее нажмете, вас перенаправят на предыдущую страницу и вы увидите сообщение о том, что AMI с таким ID был успешно создан. Давайте скопируем AMI, он возможно нам понадобится в следующих заданиях. Теперь нам необходимо создать Target group. Target group мы создаем предварительно и эту target group будем использовать при создании Elastic Load Balancer. Итак, нам необходимо в левом навигационном меню выбрать пункт Target Groups. Как только вы на нее нажмете, отобразится список всех существующих Target Group в нашем временном AWS аккаунте. Нам необходимо нажать на кнопку Create target group. Откроется соответствующая страница для ввода некоторых данных. В самом начале как Type необходимо выбрать Instances, т.е. мы работаем с сервисом Amazon EC2. Далее необходимо будет прокрутить чуть ниже и как Target group name нужно ввести LabGroup. Как VPC выбираем Lab VPC, все остальные настройки остаются такими же. В самой нижней части страницы необходимо нажать на кнопку Next. Вас направят на второй шаг создания Target group и здесь необходимо выбрать наши targets. Так как наши targets будут управляться Auto Scaling group, то здесь нам не нужно выбирать инстансы. Достаточно прокрутить чуть ниже страницу и нажать на кнопку Create target group без привязанных таргетов. 
        Следующий шаг - нам необходимо создать сам Load Balancer. Для этого в левом навигационном меню необходимо выбрать опцию Load Balancers и в открывшейся странице нажать на кнопку Create Load Balancer. Мы с вами знаем, что у нас есть три вида Load Balancers. В нашем случае интересует первый, это Application Load Balancer. Давайте нажмем на кнопку Create под этой опцией. Как только вы на нее нажмете, вас перенаправят на страницу для ввода входных данных. Давайте как Load balancer name укажем LabELB. Далее необходимо указать VPC - это Lab VPC. В секции Mappings нам необходимо отметить ту availability zone, в которой ELB будет распределять трафик, а также для каждой availability zone необходимо выбрать subnet. В выпадающем меню для us-east-1a необходимо выбрать Public Subnet 1, для us-east-1b необходимо выбрать Public Subnet 2. Если мы прокрутим чуть ниже, в секции Security groups, в выпадающем меню нам необходимо выбрать Web Security Group. В следующей секции Listeners and routing необходимо удостовериться, что протокол стоит HTTP, а порт 80. Как Default action давайте выберем Forward to Lab Group из выпадающего списка. Теперь нам необходимо прокрутить в самый конец страницы и нажать на кнопку Create load balancer. Как только вы нажмете на Create load balancer, вас направит на страницу с еще одной кнопкой, и по нажатию которой вы можете перейти на непосредственно ваш Load Balancer. Вы можете перейти по ней и посмотреть все детали создания этого ресурса, а мы с вами переходим к следующему заданию, теперь мы будем создавать Auto Scaling group. 
        Для того, чтобы создать Auto Scaling group, первым делом создается Launch config. Для этого в левом навигационном меню необходимо выбрать опцию Launch Configurations, и в открывшейся странице нажать на кнопку Create launch configuration. Вас перенаправит на страницу ввода входных данных, как Name необходимо указать LabConfig, как AMI выбрать WebServerAMI, который мы создавали ранее, как Instance type необходимо выбрать t3.micro, если этот вариант недоступен, здесь вы можете выбрать t2.micro, либо любой другой. В рамках лабораторной работы разницы никакой нет. Прокручиваем чуть ниже, в секции Additional configuration и в подсекции Monitoring, нам необходимо поставить галочку для того, чтобы активировать detailed monitoring. Это когда в CloudWatch отправляются метрики чаще, чем обычно. В секции Security groups необходимо выбрать опцию Select an existing security group, т.е. мы выбираем среди существующих security group, новую создавать не нужно. Для нас есть уже предварительно созданная security group, она называется Web Security Group. Необходимо ее выбрать и мы двигаемся к следующей секции. Самая последняя секция - это Key pair, т.е. мы здесь указываем ключ, по которому можно подключиться к нашим Amazon EC2 инстансам через SSH. В рамках лабораторной работы мы по SSH подключаться не будем, но как best practice мы укажем этот ключ. Необходимо в Key pair options выбрать опцию Choose an existing key pair и далее выбрать существующий ключ - vockey. Также необходимо поставить галочку о том, что мы подтверждаем, что мы будем подключаться к Amazon EC2 инстансам с использованием этого ключа. Это была последняя секция, теперь необходимо нажать в нижней части страницы на кнопку Create launch configuration. Как только она создастся, мы можем переходить к созданию Auto Scaling group. Для этого в списке Launch configurations необходимо выбрать ранее созданный LabConfig, далее нажать на кнопку Actions и в выпадающем меню выбрать опцию Create Auto Scaling group. Вас перенаправит на страницу ввода входных данных. Давайте для поля Auto Scaling group name введем Lab Auto Scaling Group и нажмем на кнопку Next. На следующей странице необходимо ввести параметры Network, т.е. сети. Самым первым делом необходимо указать VPC, в нашем случае это Lab VPC, мы можем его найти в выпадающем списке. Далее нам необходимо указать Availability zones and subnets. Здесь необходимо выбрать из выпадающего списка Private Subnet 1 и Private Subnet 2. Почему мы выбираем именно Private Subnets я объяснял в предыдущем видео, когда мы делали обзор лабораторной работы. Как только мы выбираем необходимые subnets, мы переходим к следующей части, к следующей странице настройки, нажимаем на кнопку Next. 
        На следующей странице есть секция Load balancing, здесь необходимо выбрать опцию Attach to an existing load balancer. В следующей секции необходимо выбрать Choose from your load balancer target groups и выбрать Load Balancer LabGroup из выпадающего списка. Необходимо прокрутить чуть ниже и в секции Additional settings для мониторинга также отметить Enable group metrics collection within CloudWatch. Это говорит о том, что мы все метрики будем агрегировать в сервисе CloudWatch. На этой странице мы вывели все необходимые входные данные, теперь необходимо нажать на кнопку Next. Мы попадаем на страницу конфигурирования размеров группы и scaling policy. Первым делом мы заполняем capacity, есть три опции - это Desired capacity, Minimum capacity и Maximum capacity. Чем отличаются они друг от друга, мы также разбирали в предыдущей активности обзора лабораторной работы. Здесь нам необходимо ввести значение 2, 2 и 6 и мы двигаемся дальше. Следующая секция - это Scaling policies, здесь необходимо выбрать Target tracking scaling policy. Это говорит о том, что Auto Scaling group будет смотреть на некоторую метрику и в зависимости от этой метрики будет увеличиваться либо уменьшаться в своих размерах. Как Scaling policy name давайте введем LabScalingPolicy и как Metric type введем Average CPU utilization, т.е. мы смотрим на нагрузку на наши процессоры в Amazon EC2 инстансах и как Target value укажем 60. На этом мы ввели все необходимые настройки на этой странице. Давайте прокрутим вниз и нажмем на кнопку Next. 
        На следующей странице предлагается ввести различные уведомления. Здесь мы в рамках лабораторной работы это настраивать не будем, двигаемся дальше. Следующий и последний шаг, где мы вводим некоторые входные данные - это шаг с тегами. Давайте добавим Tag Name со значением Lab Instance и оставим галочку в поле Tag new instances. Это говорит о том, что для всех инстансов, которые создаются под Auto Scaling group, будут передаваться теги такие же, которые есть у Auto Scaling group. Мы закончили на этой странице, давайте нажмем на кнопку Next для того, чтобы перейти на самую последнюю страницу. 
        Здесь нет необходимости вводить какие-либо данные, а отображаются все входные данные, которые мы ввели ранее. Если же некоторые данные неточные или вы хотите их изменить, то возле каждой секции есть кнопка Edit для того, чтобы быстро перейти на необходимую страницу. Если же все хорошо, вы можете прокрутить в самый низ страницы и нажать на кнопку Create Auto Scaling group. Вас перенаправит на страницу со всеми Auto Scaling groups, вы увидите статус Updating capacity и количество Instances на текущий момент 0. Если мы подождем некоторое время и обновим страницу еще раз, то количество инстансов приравняется к количеству Desired capacity, т.е. два новых инстанса создастся и статус станет Ready. Вы можете это проделать самостоятельно, а сейчас мы двигаемся дальше, мы хотим проверить, что действительно инстансы создаются. Для этого в левом наигационном меню нам необходимо нажать на пункт Instances и вы увидите список инстансов в этом AWS аккаунте. Появилось два новых инстанса, оба называются Lab Instance и вы видите статус Initializing, т.е. они только начали создаваться. Через некоторое время они также полностью поднимутся, настроятся и пройдут все проверки статуса и примут такое же значение как существующие инстансы. 
        Давайте теперь в левом навигационном меню в нижней части перейдем к вкладке Target Groups для того, чтобы посмотреть какие таргеты у нас есть в созданной нами в Target group. У нас единственная Target group, давайте ее выберем, отобразятся в нижней части экрана дополнительные вкладки с более подробной информацией. Нам необходимо перейти на вкладку Targets и вы увидите, что сейчас у нас как Registered targets значатся два инстанса. Это те два инстанса, которые были созданы Auto Scaling group и вы видите статус healthy, что говорит о том, что Elastic Load Balancer уже готов направлять трафик, а эти инстансы готовы этот трафик принимать. Для того чтобы проверить, действительно ли связка Elastic Load Balancing, Auto Scaling и Amazon EC2 инстансы работает, мы можем перейти в наше приложение. Для этого необходимо в левом навигационном меню выбрать вкладку Load Balancers и когда мы выберем единственный Load Balancer, который мы создали ранее, в нижней части экрана отобразятся дополнительные вкладки. В первой вкладке Description мы можем скопировать DNS name и ввести это значение в новой вкладке в веб-браузере. Вы увидите, что отобразилась некоторая страница, это говорит о том, что ваш запрос был принят Load Balancer. Load Balancer ваш запрос направил на веб-сервер, веб-сервер его обработал и вернул некоторый ответ. Этот ответ вам отображен в виде веб-страницы. Более того, вы видите информацию о том, какой инстанс обработал ваш запрос. Это тот инстанс, который находится на второй availability zone, а именно us-east-1b. Отлично, теперь нам необходимо проверить, что Auto Scaling group работает корректно, что она скейлится, увеличивается и уменьшается в размерах. Для того, чтобы это проверить, первым делом необходимо перейти на сервис CloudWatch. Давайте начнем вводить CloudWatch, либо начнем вводить Watch в строке поиска сервисов и мы увидим нужную нам ссылку. Как только мы переходим к сервису CloudWatch, в левом навигационном меню необходимо выбрать опцию All alarms. Отобразится список всех alarms, существующих на этом AWS аккаунте. В нашем случае будет два alarms. Первый в названии содержит AlarmHigh, второй содержит название AlarmLow. Это противоположные alarms. Идея в том, что AlarmHigh принимает значение in alarm в том случае, если CPU utilization превышает 60% для каждой минуты в течении 3 минут, т.е. это 3 datapoints. Если мы говорим про AlarmLow, в этом случае он принимает значение in alarm, если CPU utilization меньше 54% в течении 15 минут, т.е. он 15 минут мониторит, если в течении 15 минут значение уменьшилось, то он переходит в состояние alarm. Оба alarms триггерят Auto Scaling group в противоположных направлениях. В случае когда у нас срабатывает AlarmHigh, то Auto Scaling group добавляет новый инстанс. В случае когда срабатывает AlarmLow, то Auto Scaling group удаляет лишний инстанс. Если же эти alarms у вас не отображаются, то необходимо проделать следующее действие. Нам необходимо перейти в сервис Amazon EC2, далее в левом навигационном меню выбрать опцию Auto Scaling Groups, в списке выбрать Lab Auto Scaling. И во вкладках с информацией об этой Auto Scaling group необходимо выбрать вкладку Automatic scaling. Здесь будут отображаться все scaling policy. У нас одна единственная scaling policy, необходимо ее выбрать, далее нажать на кнопку Actions и в выпадающем меню нажать на кнопку Edit для того, чтобы ее отредактировать. Здесь для того, чтобы инициировать пересоздание alarms, вам достаточно поменять значение, рекомендуется поставить значение 50 и нажать на кнопку Update. Как только вы это сделаете, вы можете возвращаться обратно в сервис CloudWatch и вы должны увидеть создающийся alarm. Давайте выберем AlarmHigh. Мы перейдем на следующую страницу, где по середине будет список всех существующих alarms и в правой части экрана отображается более подробная информация выбранного alarm. В нашем случае это AlarmHigh, вы видите красную линию, т.е. это threshold 50% и видите текущее значение нагрузки на CPU. Это абсолютно минимальная нагрузка сейчас на наши инстансы. Это очевидно, потому что нагрузка сейчас не идет на наши инстансы. Теперь, что мы сделаем? Мы возвращаемся обратно в наше приложение и в верхней части вы видите, что есть кнопка Load Test. Давайте на нее нажмем. Как только мы на нее нажмем, у нас начнется генерация нагрузки на наши Amazon EC2 инстансы. Страница обновляется каждые 5 минут и отображает текущую нагрузку на процессоры на наших Amazon EC2 инстансах. Эту страницу закрывать нельзя, если вы ее закроете, то скрипты перестанут работать и нагрузка упадет. Нужно держать эту вкладку открытой. Сейчас нам необходимо вернуться обратно и вы видите, что через некоторое время в течении 5 минут вы можете наблюдать как меняются графики и вы увидите, что AlarmHigh перешел в состояние In alarm. Почему? Потому что нагрузка на наши Amazon EC2 инстансы превысила 50 или 60% в зависимости от того, что мы выбрали. А если мы говорим AlarmLow, который ранее принимал значение In Sufficient Data либо In alarm, сейчас он принял значение OK, т.е. противоположное состояние. Теперь нам необходимо перейти в EC2 для того, чтобы удостовериться создала ли дополнительные инстансы наша Auto Scaling group. Для этого необходимо в левом навигационном меню перейти на вкладку Instances и вы увидите 3 либо 4 инстанса, 2 из которых будет в состоянии Initializing. Через какое-то время все 4 инстанса будут принимать трафик и обрабатывать все запросы, которые пришли от Load Balancer. 
        На этом мы завершили все основные задания. Как дополнительный эксперимент я бы хотел вам посоветовать сделать следующее. Вы можете остановить нагрузку на ваши Amazon EC2 инстансы. Как только нагрузка спадет, через какое-то время в течении 15 минут Auto Scaling group начнет терминейтить, т.е. отключать инстансы в Auto Scaling group и придет в исходное состояние, у нас будет 2 Lab Instance. Теперь, что мы можем сделать? Мы можем оба либо один из Lab Instance терминейтнуть вручную и посмотреть, что произойдет. А произойдет следующее. Как только вы удалите один из инстансов, то общее количество таргетов, т.е. инстансы под Auto Scaling group станет меньше чем минимальное значение. Как мы помним минимальное значение было 2. В этом случае Auto Scaling триггерится, видит, что количество инстансов по тем или иным причинам стало меньше чем минимальное и инициирует создание новых инстансов. И через какое-то время она создает необходимое количество новых инстансов, чтобы количество инстансов было равно минимальному количеству инстансов в настройках Auto Scaling groups. 
        Мы добрались до самого последнего задания. Оно достаточно простое, идея ее следующая. Мы ранее создавали AMI от инстанса Web Server 1, который принимал нагрузку, принимал запросы и обслуживал наше приложение. Теперь оно нам не нужно, мы можем ее достаточно безопасно уничтожить, удалить. Для этого необходимо из списка выбрать Web Server 1, убедитесь, что не выбраны другие инстансы. Далее в верхней части необходимо нажать на кнопку Instance state и в выпадающем списке выбрать опцию Terminate instance. Выйдет сообщение о том, что действительно ли вы хотите отключить ваш инстанс, необходимо нажать на Terminate и подтвердить, что вы отключаете инстанс. После того как инстанс будет уничтожен, вы можете перепроверить действительно ли все работает и открыть страницу вашего приложения. Там стоит ссылка на Elastic Load Balancer и приложение будет также продолжать работать. 
        На этом мы завершаем нашу лабораторную работу. Сейчас нам необходимо успешно разлогиниться со всех систем. Первое - это AWS Management Console, необходимо в верхней правой части нажать на название пользователя, в выпадающем списке нажать на кнопку Sign out. Далее необходимо корректно завершить лабораторную работу в AWS Academy, для этого необходимо нажать на кнопку End Lab. Нас попросят подтвердить, что мы действительно хотим завершить лабораторную работу, мы нажимаем "Yes" и в всплывающем окне мы должны дождаться сообщения, что мы можем закрывать это сообщение, удаление всех созданных ресурсов было инициировано. Вы можете закрывать это всплывающее окно, а также закрывать вкладку со страницей AWS Academy. 
        На этом мы подошли к концу нашей лабораторной работы, мы ее разобрали и очень надеюсь, что вы получили более полное представление о сервисах Elastic Load Balancing и Auto Scaling. Это те базовые сервисы, которые позволяют сделать нашу инфраструктуру неким абстрактным организмом, который в зависимости от нагрузки, от внешних факторов может изменяться в размерах, увеличиваться так и уменьшаться. Это дает большие возможности компании, в первую очередь, это обработать все запросы ваших пользователей, пользователей ваших приложений и другой момент это то, что при уменьшении нагрузки на ваше приложение ее размеры автоматически уменьшаются для того, чтобы сократить ваши расходы на IT-инфраструктуру. 
        Я надеюсь, что разбор лабораторной работы был полезен для вас. Спасибо за внимание, и увидимся с вами на следующих наших активностях.
