 Добрый день, уважаемые студенты! Я рад вас всех видеть на очередной сессии демо. Тема сегодняшней сессии – это часто встречающиеся сценарии на реальном экзамене AWS. Мы рассмотрим все популярные и возможные ответы в случае такого сценария. Итак, давайте начнем. Перед тем, как мы начнем, я бы хотел указать источник, что эта информация была взята. Все вы, возможно, слышали, возможно, нет, но есть такой человек Джон Бонса, достаточно яркая личность в сфере подготовки к экзаменам AWS. Все начиналось с того, что этот человек владел сайтом, на котором закидывал гайды по определенным сервисам. То есть берется какой-то сервис AWS Lambda и подготовленная для него тезисная информация о этом сервисе. И эта информация, она часто встречается на экзамене и довольно хорошо помогает повторить большую часть материала, читая эти тезисы. Они достаточно короткие и сжатые, и так было приготовлено для большей части сервисов. Далее проект развивался буквально на глазах, и в какой-то момент появились тесты для подготовки к экзаменам AWS, опубликованные в Udemy. После чего этот проект вырос уже из Udemy и tutorials.dojo.com превратился в некий учебный портал, в котором начали появляться тесты. Есть движок тестирования, который подбирает вопросы, интерфейс улучшился. Через какое-то время наступил следующий шаг, подготовили дополнительный материал и уже появились не только разборы тестовых вопросов, но и целые курсы для подготовки к определенному экзамену AWS. Наряду со всем этим материалом также есть страницы, специально предназначенные для каждого экзамена AWS, которые рассматривают ее с разных сторон. И один кейс, это Common Exam Scenarios, как раз таки по этой ссылке вы можете напрямую перейти, либо в Google написать Bonsu AWS CP, то есть Cloud Practitioner и Common Scenarios, вы попадете на нужную вам страницу. Я достаточно позитивно высказался касательно ресурса, это действительно так, но есть один небольшой нюанс, который достаточно важен. Материала много, материал полезный. Из минусов это то, что он полностью на английском, это первое. И второе, это то, что не все материалы, не вся информация, она актуальная. Поэтому какие-то цифры, точные факты рекомендуется перепроверять на документации AWS. Основные же концепции, они в целом редко меняются и можно сказать, что вот такого рода информацию можно читать и воспринимать как актуальную на вот подобных сайтах. Возвращаемся обратно к нашим слайдам. Слайды организованы следующим образом. Все слайды поделены на четыре направления, это домены, старые домены экзамена AWS Certified Cloud Practitioner, сейчас пять доменов, но это никак не понижает ценность этой информации, а лишь помогает нам сгруппировать все кейсы по четырем различным направлениям. Сами слайды организованы следующим образом. Есть сценарии, там какое-то предложение либо часть предложения, описывающие наш сценарий и соответственно решение. Решением в большинстве случаев является один или несколько сервисов AWS, в каких-то случаях это определенный функционал внутри определенного сервиса, либо какое-то понятие и термин. Я бы здесь хотел особо отметить, что это не является шпаргалкой. Это больше материал для повторения студентам, которые прошли весь теортический материал и здесь как раз таки рассматриваются самые популярные кейсы, а основные моменты, на которые стоит акцентировать, обратить внимание и дополнительно повторить. Поэтому для тех, кто только зашел на курс и сразу перешел на последнее демо, это бесполезный материал, набор непонятных терминов. Для тех, кто планомерно двигался, это достаточно ценный материал, который вам поможет структурировать ваши знания. Более того, эти частые кейсы не только те кейсы, которые встречаются на экзамене AWS. В нашем экзамен построен на том, чтобы помогать вам в будущем, когда вы будете работать с AWS. Поэтому внутри экзамена вопросы взяты из реальной жизни облачного инженера. И те кейсы, которые мы здесь разберем, вы также будете использовать, когда вы будете работать облачным инженером в одной из компаний. Хорошо, давайте начинаем, двигаемся дальше. Первый домен, первая группа сценариев. Это Cloud Concepts, то есть основные понятия облачных технологий. Итак, сценарий. Какие финансовые преимущества получает компания при миграции всех своих систем из локального дата центра в AWS? Ответ. Первым ответом является то, что компания заменяет капитальные расходы на операционные расходы. Что это означает? Мы с вами говорили, что капитальные расходы это, когда мы несем расходы наперед. Одним из ярких примеров это покупка целого сервера. То есть вы покупаете за большую сумму и вне зависимости от того, вы будете использовать пять лет либо три месяца, вы должны оплатить всю сумму. Когда мы говорим операционные расходы и в частности облака AWS, мы можем поднять EC2 instance достаточно мощный, использовать его три часа, оплатить только за три часа и после этого высвободить наши ресурсы для того, чтобы не платить. Таким образом мы можем все или большую часть капитальных расходов, когда мы владеем собственным дата центром, перенести на операционные расходы и оплачивать только за то, что мы используем при переходе на AWS. Третье пример, это reduce the total cost of ownership. То есть идея такая же, когда мы владеем собственным локальным дата центром, то в этом случае нам необходимо все закупать сразу. Возможно у вас очень большие затраты пойдут на покупку помещения либо ежемесячная трата на аренду. Далее у вас есть штат сотрудников, которые поддерживают работу дата центра. Это те расходы, которые постоянные, не меняются. Даже если у вас на вашем сайте не будет ни одного пользователя, то вы все равно будете нести эти расходы. Когда же мы говорим про AWS, мы можем построить инфраструктуру таким образом, что она автомасштабируется и в большую и в меньшую сторону. И в случае, когда мы видим спад трафика, нет ни одного пользователя на нашем сайте, нет нагрузки, в этом случае инфраструктура может автоматически уменьшиться до минимальных размеров. Таким образом мы будем нести также минимальные расходы на нашу инфраструктуру. Сценарий. Укажите принципы построения архитектуры в облаке AWS. Ответы решения. Первое это Design for Failure. Идея в том, что при увеличении размеров вашей инфраструктуры пропорционально также увеличивается вероятность того, что где-то что-то пойдет не так, какой-то из компонентов сломается. И идея этого принципа в том, что необходимо думать наперед, зная какие компоненты могут сломаться, добавлять либо избыточность, либо возможность быстрого авто-восстановления. Второе Decouple your components. Идея в том, что нужно строить архитектуру таким образом, чтобы все компоненты были слабо связаны между собой. Зачем это нужно? При слабой связанности можно легко заменить каждый компонент. Более того, при поломке какого-то компонента оно меньше влияет на соседние компоненты. Таким образом, разрушительное влияние какой-то поломки оно будет уменьшено за счет вот такой архитектуры. Третье, четвертое это связано Implement Elasticity. То есть говорим про гибкость и Think Parallel это про масштабирование. Идея в том, что у нас есть связка сервисов, при правильной настройке архитектура превращается в живой организм. И может в зависимости от некоторых метрик, например нагрузки на ваши сервера, увеличиваться автоматически в размерах как в большую, так и в меньшую сторону. Более подробно вы можете посмотреть наши принципы построения архитектур на лекционном занятии. Сценарий. У нас есть критические нагрузки в облаке AWS, которые должны быть высоко доступны. Что необходимо использовать как частое решение это строить инфраструктуру на нескольких availability зонах. Таким образом, крайне вероятное событие выхода из строя целой одной availability зоны, она будет учтена и в случае, даже если произойдет это событие, ваша инфраструктура продолжит работать, но уже на оставшихся двух либо второй availability зоне. Сценарий. Нам необходимо, чтобы изменение либо поломка одного из компонентов не эскалировало на другие компоненты. То есть не переходило и не влияло, не ломало следующие компоненты, которые по соседству. Как решение строить архитектуру слабосвязную, то есть loose coupling. Если мы говорим сильно связные, то есть соответствующий термин tight coupling. И нам необходимо стремиться строить архитектуру от tight coupling в сторону loose coupling. Сценарий. У вас есть VPC, VPC есть public subnet и внутри EC2 instance. Необходимо, чтобы этот EC2 instance мог выходить в общий интернет. Как решение, нам необходим интернет gateway. Сценарий. У вас есть настроенные VPC, внутри VPC есть private subnet и внутри private subnet EC2 instance. Необходимо, чтобы этот EC2 instance мог выходить в интернет. Так как в вопросе явно указано, что EC2 instance находится внутри private subnet, то ресурс который дает доступ в интернет instance это NAT gateway. NAT gateway настраивается в public subnet и мы настраиваем дополнительный route, чтобы направлять трафик из private subnet в NAT gateway в public subnet. Там далее уже на уровне VPC настраивается интернет gateway, через который и выходят в интернет все ресурсы внутри вашего VPC. Мы с вами переходим к следующему блоку сценариев. Это security и compliance. Укажите инструмент для настройки безопасности, а именно настройки WAV рулов поверх нескольких аккаунтов. Как ответ это сервис AWS Firewall Manager. Сценарий. Компании необходимо загрузить документы, подтверждающие соответствия AWS определенным регуляторным требованиям либо требованиям стандартов. Ответ. Вам необходимо обратиться в сервис AWS Artifact, где загружены все эти документы и вы можете по требованию эти документы скачать. Сценарий. Что необходимо сделать для того, чтобы улучшить безопасность IAM пользователей. Первый ответ это настроить multifactor authentication. Второе это настроить достаточно сложное правило для пароли ваших пользователей. Какая сущность IAM использует аксесс ключи для доступа к ресурсам в облаке AWS через AWS CLI. Ответ IAM user. Сценарий. К какой сущности IAM мы предоставляем временный доступ к нашим AWS ресурсам. Ответ IAM role. Что необходимо использовать для того, чтобы управлять доступами для большого количества IAM пользователей. Ответ IAM группы. Что мы можем использовать для того, чтобы предоставить доступ к нашим ресурсам в бакете S3. Ответ. Мы можем настроить bucket policy, который привязан к бакету. Там вы указываете уже операции и пользователей, которые могут обращаться к вашему бакету. Можно настроить с другой стороны, а именно user policy. Вы для каждого пользователя, для группы, либо для роли прописываете дополнительные полиси о том, что эта полиси дает доступ к определенным операциям, к таким-то ресурсам. Как ресурс мы указываем наши S3 бакеты. Нам необходимо предоставить доступ к AWS через предоставление временных credential для пользователей. И эти пользователи, они авторизованы через социальные медиа, либо совсем могут быть не авторизованы, то есть анонимные гости. Что мы можем использовать для того, чтобы это обеспечить. Как ответ использовать Amazon Cognito Identity Pool. Сценарий. Вы являетесь стартапом и вам необходимо оценить, как работают ваши IAM policy. Для этого необходимо использовать IAM policy simulator. Следующий сценарий. Необходимо указать сервис, который находит, классифицирует и защищает важную информацию, которая относится к PII, то есть это информация, которая может идентифицировать личность, либо относится к интеллектуальной собственности. В этом случае необходимо воспользоваться сервисом Amazon Macie. Укажите сервис, который мониторит весь ваш AWS аккаунт для поиска различных угроз и подозрительной активности. Это сервис Amazon GuardDuty. Вам необходимо запретить не авторизованное удаление объектов внутри S3 пакетов. Для этого необходимо настроить MFA и при удалении объектов доступ будет разрешен только тем сущностям, то есть ролям пользователям, у которых была пройдена MFA проверка. В компании необходимо контролировать трафик между сабнетами VPC. Это относится как к входящим, так и исходящему трафику. Необходимо для этого использовать Network ICO. Укажите, что является неким виртуальным фаерволом и работает для контроля трафика на уровне EC2-инстанца. Ответ – это security-группа. Укажите сервис, который проводит автоматические проверки безопасности для ваших приложений. Это Amazon Inspector. Мы с вами добрались до следующего блока сценариев, связанных с технологиями. В компании необходимо начать использовать глобальную инфраструктуру AWS для того, чтобы улучшить доступность своих приложений, при этом чтобы они были доступны по любому статическому IP-адресу. В этом случае нам необходимо использовать AWS Global Accelerator. Следующий сценарий. Нам необходимо безопасно передать в AWS сотни петабайтов данных. Что для этого можно использовать? Вы видите, что петабайт передавать по сети – это достаточно большой объем информации, это много времени, а много времени, соответственно, компания не всегда может ждать. Поэтому есть решение, когда AWS выгружает кейс, в котором у нас есть жесткие диски, вычислительная мощность и отправляет этот чемоданчик нам в офис. Как только она приезжает, мы подключаем ее к сети и можем в него загрузить большой объем информации по локальной сети, что намного быстрее. И после того, как мы закончили, мы этот чемоданчик возвращаем обратно и как только она доходит до любого дата-центра AWS, они подключают уже к своей локальной сети и быстренько загружают ее с локальной, с быстрой скоростью в инфраструктуру AWS. Есть несколько видов решений Snowball. Есть Snowball Edge, Snowball обычные, которые поменьше. И есть Snowmobile, когда вам отправляет целый прицеп с машиной и она добирается до вас и можно не только сотни петабайтов, а еще больше данных загрузить в этот мобильный дата-центр. Укажите тип инстанция EC2, который позволяет вам перенести лицензии, привязанные к определенному хосту. Это тип dedicated host. Следующий сценарий. Укажите сервис, который мониторит всю активность внутри AWS и фиксирует все вызовы AWS API, будь оно через AWS Management Console, либо через AWS SDK. Этим сервисом является AWS CloudTrail. CloudTrail это аналог черного ящика в самолете. Укажите DNS-веб-сервис внутри AWS, который является достаточно высокодоступным и масштабируемым. Этот сервис Amazon Route 53. Следующий пример. Нам необходимо сохранять результаты сложных SQL-запросов для того, чтобы ускорить производительность наших приложений. Для этого нам необходимо использовать кэш-сервис, это Amazon ElastiCache. Нам необходимо указать связку AWS-сервисов, которые позволяют обслуживать статические файлы с наименьшей задержкой. Это Amazon S3 и Amazon CloudFront. Следующие сценарии. Необходимо указать сервис, который предоставляет автоматическое масштабирование вычислительных мощностей в зависимости от входящего трафика для того, чтобы улучшить доступность ваших приложений и сократить падение ввиду перегрузки ваших вычислительных мощностей. Вот этим является AWS Autoscaling. Нам необходимо перенести базу данных MySQL с локального дата-центра на сервис Amazon RDS. Каким сервисом мы можем для этого воспользоваться? Есть отдельный сервис для миграции баз данных, называется AWS DMS, либо в развернутом виде AWS Database Migration Service. Следующие сценарии. Нам необходимо настроить автоматический перенос на следующий класс хранения нечасто запрашиваемых данных внутри S3-бакета для того, чтобы сэкономить на хранении. Для этого нам необходимо воспользоваться S3 Lifecycle Policy. Вам необходимо загрузить один большой объект в S3 несколькими частями для того, чтобы ускорить ее перенос. Что необходимо для этого сделать? Мы для этого можем воспользоваться функционалом сервиса S3 Multi-Part Upload. Идея ее в том, что наш файл делится на несколько маленьких частей и эти части отправляются по отдельности. В случае, если какая-то часть падает, ее можно отдельно доотправить. Более того, вы можете отправлять все ваши файлы параллельно. Таким образом ускоряется в несколько раз передача ваших файлов в облако AWS. Следующий кейс. Необходимо для компании предоставить выделенные connection между локальным дата-центром и AWS VPC. Для этого нам необходимо воспользоваться сервисом AWS Direct Connect. Укажите сервис машинного обучения, который позволяет нам анализировать медиа-файлы и извлекать полезную информацию. Здесь имеется в виду как медиа-файлы, это картинки и видеоматериалы. И то, что мы можем извлечь, это тексты, различные предметы кастомные и в следующий сценарий необходимо указать сервис, который позволяет делать трансферовку запросов пользователей внутри вашего приложения. Этот сервис AWS X-Ray он часто используется в связке с AWS Lambda. Идея в том, что когда приходит запрос от ваших пользователей, неважно на ваш API либо на ваш сайт, вы можете добавить к этому запросу некоторое уникальное значение. С этим уникальным значением этот запрос будет передаваться внутри всей вашей инфраструктуры и обрабатываться. Таким образом, отслеживая этот уникальный ID, вы можете видеть как и куда проходят ваши запросы, визуально увидеть где какие задержки и попробовать улучшить ваше приложение. В следующий кейс компании необходимо получить информацию о Instance ID, публичных ключах, публичном IP адресе вашего EC2 Instance, где эту информацию можно получить. И эту информацию можно получить в AWS Management Console. Если открыть ваш EC2 Instance, внизу откроется набор вкладок и выбрать вкладку Instance metadata. Там вся эта информация доступна. Сценарий. Возникли ли возможно ускорить доставку нашего контента по всему миру наших статических файлов? Ответ это воспользуется сервисом Amazon CloudFront. Следующий сценарий. Сервис, который позволяет нам создавать и деплоить инфраструктуру как код. Ответ очевиден. Это AWS CloudFormation. Нам необходимо настроить шифрование наших логов в AWS CloudTrail. Для этого необходимо воспользоваться специальным сервисом AWS Key Management Service. Чаще вы его будете встречать как AWS KeyMS. Следующий пример сценарий. Необходимо выбрать сервис, который предоставляет базы данных для работы с JSON документами. То есть это NoSQL базы данных, не структурированные данные. Ответ Amazon DynamoDB. На этом мы добрались к следующему блоку и поговорим про сценарии, связанные с биллингом и прайсингом. Сценарий. Нам необходимо выбрать опцию, где подразумевается выделенный человек от AWS, который дополнительно помогает нам сопровождать нашу инфраструктуру в облаке. Ответ это там либо развернутый вариант Technical Account Manager. Следующий сценарий. Нам необходимо выбрать из выбранных сценарий, нам необходимо выбрать инструмент, который периодически проверяет наш AWS Account и дает рекомендации, чтобы следовать best practice AWS. Это сервис AWS Trusted Advisor. Следующий сценарий. Мы являемся стартапом и нам необходимо рассчитать стоимость переноса наших приложений с бокального дата центра на AWS. Для этого мы можем воспользоваться отдельным приложением, инструментом, который называется AWS Total Cost of Ownership. Следующий сценарий. Нам необходимо выбрать тип Reserved Instances, которые позволяют менять семейство инстанца, тип инстанца и другие свойства наших EC2 инстанцев. Правильный ответ Convertible RI. Сценарий. Нам необходимо выбрать тип EC2 инстанцев, который позволяет получить скидку до 90%. Это spot инстанции. Здесь многие допускают ошибку и выбирают вариант либо savings plans либо reserved instances. И тот и другой вариант они предлагают скидку от 60 до 70%. В случае с spot инстанциями мы можем получить до 90% скидки и это самый дешевый вариант EC2 инстанцев. Есть определенные нюансы, про которых мы говорили на наших лекциях. Сценарий. Нам необходимо выбрать приложение, которое позволяет нам управлять всеми нашими полисами из одного места, а также получать совокупный счет за оплату за услуги AWS по всем нашим AWS аккаунтам. Правильный ответ это Service AWS Organizations. Следующий сценарий. Нам необходимо выбрать самый дешевый вариант хранения внутри S3, а именно мы говорим про копии баз данных, которые могут быть запрошены изредка и при этом мы можем подождать несколько минут. Идеальным вариантом для этого кейса является Amazon Glacier. Сценарий. Необходимо выбрать сервис, который предоставляет нам прогнозные будущие расходы на базе наших текущих данных на базе текущего использования сервисов AWS. Ответом является Service AWS Cost Explorer. Следующий сценарий. Нам необходимо категоризировать и отслеживать наши расходы на AWS на более подробном уровне. Для этого нам необходимо воспользоваться функционалом, который называется Cost Allocation Tags. Идея ее в том, что мы можем тегировать все наши ресурсы AWS. В специально отведенном месте мы указываем, какие теги являются Cost Allocation Tags, после чего мы можем группировать и видеть наши расходы по выбранным нами тегам в сервисы AWS Cost Explorer, а также в любых других сервисах, которые работают с расходами на облако. Сценарий. Что необходимо сделать компании, если нам нужно запустить VPC, который не входит в сервисные лимиты по умолчанию? Ответ. Необходимо создать тикет в техподдержку и запросить увеличение этого лимита, если оно является софт-лимитом. В следующий сценарий нам необходимо выбрать самый выгодный вариант покупки Reserved Instances на один год. Ответом является All Upfront. Как мы с вами помним, мы можем выбрать три варианта оплаты, когда No Upfront мы не вносим никакую оплату, лишь подписываем договор и ежемесячно продолжаем платить за использование наших ресурсов со скидкой. Следующий вариант это Partial Upfront. Какая-то часть со скидкой оплачивается сразу за один год либо за три года, в зависимости от того, какой договор подписываем. И оставшаяся часть оплачивается дальше ежемесячно также со скидкой. И третий вариант, который дает наибольшее количество скидок это All Upfront. Когда делается расчет на выбранный период, рассчитывается скидка и та оставшаяся сумма к оплате, она должна быть переведена сразу, после чего ежемесячной оплаты уже не будет за выбранные нами Reserved Instances. Вам необходимо объединить использование определенного ресурса для того, чтобы добраться до скидок по объемам. Для того, чтобы получить эти скидки и объединить ваше использование необходимо использовать consolidated billing. Его мы можем включить в сервисы AWS Organizations. Следующий сценарий представим, что вы подготовили собственный кастомный AMI и хотите ее продавать внутри AWS для других клиентов AWS. Для этого вы можете воспользоваться сервисом AWS Marketplace. Это место, где вы можете продавать различные кастомные ресурсы для других клиентов, в том числе ваши кастомные AMI. На этом мы подошли к концу нашей демо сессии. Я очень надеюсь, что вы узнали что-то новое сегодня. Еще раз напоминаю, что все то, что мы разобрали, все сценарии не являются стопроцентным ответом на вопросы из реального экзамена AWS, а лишь удобным форматом для повторения всего того материала, который вы прошли, для перепроверки себя. И помните, что каждый вопрос, который придет на экзамене AWS, должен быть вами индивидуально рассмотрен. И не всегда бывает, что тот ответ, который указан здесь, он является правильным ответом, потому как формулировка вопросов, она может меняться. Мы с вами помним, что достаточно большое количество новых вопросов добавляется в каждый экзамен AWS, и они не идут в зачет. Таким образом, у AWS есть возможность очень часто в больших объемах добавлять новые вопросы, и могут появиться вопросы с небольшим подвохом. А в целом, идея этих сценариев была в том, чтобы закрепить основные моменты, сделать акценты на популярных сценариях для того, чтобы не только помочь вам при сдаче экзамена AWS, но и дать вам те знания, освежить те моменты, которые пригодятся вам во время работы облачным инженером. Спасибо за внимание. Увидимся с вами на следующих наших активностях.
