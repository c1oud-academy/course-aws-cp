Добрый день, уважаемые студенты! Я рад вас всех видеть на очередной сессии вопросов и ответов. Мы получили от вас очередной набор вопросов, которые вас интересуют. На этой сессии мы каждый вопрос детально рассмотрим и разберем. Итак, давайте начнем.
Вопрос: «Что означает термин «инфраструктура виртуализации»?» Отвечаю. Начнем с того, что как такого термина «инфраструктура виртуализации» не существует. Это два отдельно стоящих термина сами по себе. Что такое инфраструктура мы с вами уже разобрали. Что такое виртуализация я сейчас вам объясню. Для того чтобы объяснить, что такое виртуализация, давайте вспомним, что такое дата-центр <span translate="no">AWS</span>. Как мы с вами помним, дата-центр <span translate="no">AWS</span> – это достаточно большое помещение, в котором расположены серверы. Каждый сервер расположен следующим образом: в виде шкафа, на каждой полке этого шкафа находится каждый отдельно взятый сервер. <span translate="no">AWS</span> стремится поместить в один шкаф наибольшее количество вычислительных мощностей для того, чтобы оптимально использовать физическое пространство. Таким образом, каждый сервер внутри этого шкафа серверов он в десятки раз мощнее наших самых продвинутых персональных компьютеров и ноутбуков. Теперь двигаемся дальше. Мы с вами помним, что внутри <span translate="no">AWS</span> у вас есть возможность выбрать несколько разных типов инстансов, т.е. вы можете выбрать самый слабый с одним ядром процессора, с двумя гигабайтами оперативной памяти и дальше мощнее и мощнее можно выбрать очень мощный сервер, который несколько десятков процессорных мощностей, а также несколько сотен гигабайтов оперативной памяти. Теперь для того, чтобы предоставить возможность вот так делить и выбирать что большой, что маленький сервер, была разработана технология виртуализации. Что она означает? Она означает, простыми словами, есть определенный физический сервер со своими мощностями. Это количество процессоров, а также количество оперативной памяти. Виртуализация позволяет нам разделить вот эти мощности одного сервера и виртуально получить отдельные независимые друг от друга сервера меньшей мощности. Таким образом, мы можем, например, сервер, в котором два процессора и четыре оперативной памяти, через технологию виртуализации поделить на два. Таким образом получить два отдельных, отдельно работающих независимых друг от друга сервера по одному процессору и два гигабайта оперативной памяти. Теперь, если мы возвращаемся к инфраструктуре виртуализации, в этом случае подразумевается все то железо, программное обеспечение и другое оборудование, будь то физическое, либо виртуальное, которое помогает поддерживать процесс виртуализации физических серверов <span translate="no">AWS</span>, подразделять, делить на несколько маленьких частей и нам как клиентам <span translate="no">AWS</span> предоставлять возможность выбирать от самого маленького сервера отдельно стоящего до супермощного.
Вопрос: «Можете ли объяснить суть <span translate="no">implicit allow</span> и <span translate="no">implicit deny</span> на конкретном примере?» Отвечаю. Следует понимать, что такое <span translate="no">implicit</span>. <span translate="no">Implicit</span> – это что-то, что есть по умолчанию изначально. Таким образом, когда мы говорим <span translate="no">implicit allow</span>, это значит по умолчанию разрешено. Когда мы говорим <span translate="no">implicit deny</span>, это значит по умолчанию запрещено. Если мы говорим про <span translate="no">AWS</span>, то все то, что связано с доступами изначально по умолчанию запрещено. Таким образом, есть только <span translate="no">implicit deny</span>. <span translate="no">Implicit allow</span> в рамках <span translate="no">AWS</span> такого не существует. Таким образом, если приводить пример, вы создаете нового пользователя и у этого пользователя нет никаких прописанных <span translate="no">policy</span>, будь то <span translate="no">inline</span> прописанное для конкретного пользователя, будь то привязанное к нему отдельно стоящее <span translate="no">policy</span>. Если таковых не имеется, то у этого пользователя по умолчанию никаких доступов ни на какой сервис не будет. Так как у нас внутри <span translate="no">AWS implicit deny</span>.
Вопрос: «Можете ли объяснить суть <span translate="no">explicit allow</span> и <span translate="no">explicit deny</span> на конкретном примере?» Отвечаю: Когда мы говорим про <span translate="no">explicit allow</span> и <span translate="no">explicit deny</span>, подразумевается что-то явно прописанное, т.е. мы явно либо разрешаем пользователю какое-то действие на какие-то ресурсы, либо явно запрещаем. Есть третий вариант <span translate="no">implicit deny</span>. Это что-то, что по умолчанию. По умолчанию, если явно ничего не прописано, то в этом случае доступ запрещается. Теперь давайте на примере разберем, какие шаги предпринимает <span translate="no">AWS</span> для того, чтобы понять разрешен или запрещен доступ к конкретному <span translate="no">identity</span> на определенную операцию и на определенные <span translate="no">AWS</span> ресурсы. Представим, что мой пользователь, <span translate="no">user Yelzhan</span>, хочет открыть список объектов внутри бакета, там, <span translate="no">bucket01</span>. В этом случае пользователь <span translate="no">user Yelzhan</span>, операция, которую я хочу произвести это <span translate="no">list objects</span> и ресурс, над которыми происходит эта операция это <span translate="no">bucket01</span>. То есть <span translate="no">ARN</span> конкретного ресурса. Теперь, как действует <span translate="no">AWS</span>. Как только он получает вот это действие, то он начинает проверять наличие <span translate="no">explicit deny</span>. То есть, есть ли хотя бы одна <span translate="no">policy</span>, которая явно запрещает конкретное действие. Если <span translate="no">explicit deny</span> находится, то в этом случае любое количество <span translate="no">explicit allow</span> перечеркивается и доступ не предоставляется. В другом случае, если <span translate="no">AWS</span> не находит <span translate="no">explicit deny</span>, то есть явно вот это действие не запрещено, в этом случае он переходит на следующий этап. Второй этап – это проверка на наличие <span translate="no">explicit allow</span>. То есть, есть ли хотя бы одна <span translate="no">policy</span>, которое явно предоставляет доступ к нашей операции. Если он находит эту <span translate="no">policy</span>, то доступ моему пользователю посмотреть список объектов внутри <span translate="no">bucket01</span> предоставляется. В случае, если <span translate="no">AWS</span> не находит <span translate="no">policy</span>, которые явно предоставляют доступ к конкретной операции, в этом случае конкретная операция <span translate="no">case</span> не прописана для этого пользователя во всех его <span translate="no">policy</span>. В этом случае срабатывает поведение по умолчанию, это <span translate="no">implicit deny</span>, в этом случае доступ по умолчанию не предоставляется.
Вопрос: «Насколько <span translate="no">AWS</span> подвержен атакам злоумышленников?» Отвечаю. Мы с вами на лекции разобрали, что такое <span translate="no">Shared Responsibility Model</span>. Это такая модель, которая в зависимости от модели предоставления сервиса определяет за какую часть инфраструктуры отвечает <span translate="no">AWS</span> и пользователи <span translate="no">AWS</span>, т.е. мы. Под моделью предоставления сервиса имеются в виду три опции: это <span translate="no">IaaS</span> – <span translate="no">Infrastructure as a service</span>, когда у нас есть полный контроль над ресурсами. <span translate="no">PaaS</span> – <span translate="no">Platform as a service</span>, когда у нас за часть отвечает <span translate="no">AWS</span>, за часть отвечаем мы. И третий <span translate="no">SaaS</span> – <span translate="no">Software as a service</span>, когда сервис предоставляется как готовый продукт и за большую часть как сервиса, так и с точки зрения безопасности ответственность лежит на стороне <span translate="no">AWS</span>. Мы можем только на уровне настроек менять это ПО сервис и ровно только за эту часть ответственность с точки зрения безопасности. То есть, мы должны ответственно сделать настройку этого сервиса таким образом, чтобы не открывать потенциальные места угрозы злоумышленникам. Вне зависимости от того, по какой модели предоставляется сервис и то, что относится к физической составляющей, начиная от одного сервера, заканчивая дата-центром и глобальной инфраструктурой <span translate="no">AWS</span>, ответственность лежит на облачном провайдере. Если мы говорим возможные места атаки злоумышленников, то подразделяются соответственно на два. Это те места, где ответственны мы и те места, за которые ответственны <span translate="no">AWS</span>. Насколько я понял из вопроса, подразумевается, что мы, как пользователи <span translate="no">AWS</span>, максимально все правильно настроили и обезопасили свою <span translate="no">IT</span>-инфраструктуру в облаке и имеется в виду тот случай, когда место, где было проникновение и проведена соответствующая злоумышленническая операция, она прошла в том месте, где ответственен сам <span translate="no">AWS</span>. В этом случае необходимо вспомнить, что на постоянной основе <span translate="no">AWS</span> проходит процедуры сертификации соответствии стандартам качества, регуляторным требованиям и положениям. И все полученные подтвержденные сертификаты публикуют в сервисе <span translate="no">AWS Artifact</span>, где вы можете на бесплатной основе по требованию эти сертификаты и эти документы скачать к себе. Наличие различных сертификатов качества, соответствия различным регуляторным требованиям у <span translate="no">AWS</span> дают несколько возможностей. Две самые очевидные: это первое – вам уже нет необходимости получать этот сертификат, так как за вас этот сертификат получил <span translate="no">AWS</span>. И если вы разворачиваете свою инфраструктуру в облаке <span translate="no">AWS</span>, то вы можете эти сертификаты предоставлять по требованию в соответствующие органы и они будут валидными. Второе – это то, что каждый этот сертификат для того, чтобы успешно пройти, необходимо в зависимости от готовности компании от нескольких месяцев до нескольких лет. Таким образом, во время прохождения внутри компании многие процессы, аспекты функционирования этой компании меняются и большинство потенциальных мест атаки злоумышленников исключаются либо настраиваются верным образом и риск того, что злоумышленник успешно произведет эту атаку минимизируется. Из всего этого следует, что наличие этих сертификатов дает некоторую гарантию и уверенность в том, что в частности <span translate="no">AWS</span> минимально подвержен атакам злоумышленников по сравнению с любыми другими компаниями, у которых этих сертификатов соответствия качеству не имеется.
Вопрос: «Что такое ключи шифрования?» Отвечаю: что такое ключи шифрования более подробно вы познакомитесь в отдельной дисциплине внутри вашего университета по безопасности, я лишь объясню основные моменты, которые достаточно вам знать для работы в облаке <span translate="no">AWS</span>. Давайте рассмотрим пример самого простейшего метода шифрования. Представим, у нас есть слово папа и нам необходимо этот текст зашифровать. Наш метод шифрования – это сдвиг по алфавиту на следующую букву. Таким образом, в слове папа, п становится р, а становится б. И на выходе мы получаем зашифрованный текст, который рбрб. Таким образом, вы получили общее понимание, что такое шифрование. В случае, когда мы говорим, что у нас есть текст определенной длины, который тем или иным способом применяется для того, чтобы входной незашифрованный текст привести в выходной зашифрованный текст, то этот текст мы говорим ключом шифрования. С этим ключом шифрования вы можете зашифрованный текст обратно расшифровать и прочитать исходное сообщение. Без этого ключа вы даже при наличии зашифрованного текста ничего с ним сделать и никакую полезную информацию от него получить не сможете. Так вот, <span translate="no">encryption keys</span> у нас встречается в сервисе <span translate="no">KMS</span>, то есть <span translate="no">Key Management Service</span>, в котором мы более подробно поговорим, какие методы шифрования используются и как он управляет всеми этими ключами шифрования.
Вопрос: «Какая организация верифицирует соответствие сертификатам облачного провайдера <span translate="no">AWS</span> или в целом любого облачного провайдера?» Отвечаю, когда мы говорим про сертификаты, будь то сертификат соответствия стандартам качества, либо соответствия некоторым регуляторным требованиям, то за каждым этим сертификатом стоит некоторая компания или организация, которая узконаправленно занимается разработкой этих требований и верифицирует компании, которым необходим этот сертификат, после чего выдает этот сертификат. Ценность отдельного сертификата зависит от того, насколько популярна и важна эта организация. Когда мы говорим про <span translate="no">AWS</span>, и в частности, экзамен <span translate="no">AWS Certified Cloud Practitioner</span>, чаще всего упоминаются три сертификата. Первый сертификат – это <span translate="no">HIPAA</span>, два А в конце. Это сертификат, который прописывает стандарты качества для <span translate="no">IT</span>-компаний, которые работают в сфере медицины. Второе – это <span translate="no">GDPR</span>. Это тот документ, который регулирует хранение, обработку и передачу персональных данных пользователей, людей, которые находятся в ЕС в Европе. И третий, который также часто приходит, это <span translate="no">ISO</span> 27001. Это общеизвестный стандарт качества. Он состоит из нескольких различных разделов, относящихся к различным аспектам функционирования компании, является достаточно общим. И при наличии этого сертификата стандарта качества, говорят, что процессы внутри компании максимально правильно выстроены для того, чтобы эффективно работать и делать свою работу.
На этом мы рассмотрели все вопросы, полученные от вас. Я надеюсь, вы получили ответы. На этом мы завершаем сессию вопросов и ответов. Увидимся с вами на следующих наших активностях. До встречи!

