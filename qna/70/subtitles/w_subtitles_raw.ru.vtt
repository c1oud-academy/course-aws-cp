1
0:00:00.000 --> 0:00:05.500
Добрый день, уважаемые студенты! Я рад вас видеть на очередной сессии вопросов и ответов.

2
0:00:05.500 --> 0:00:09.500
Спасибо за ваши вопросы. Давайте перейдем к ним и попробуем на них ответить.

3
0:00:11.500 --> 0:00:15.500
Вопрос. Что такое Proxy Server и как оно работает?

4
0:00:15.500 --> 0:00:22.500
Отвечаю. Proxy Server это общий IT термин, который не привязан к облачным технологиям.

5
0:00:22.500 --> 0:00:27.500
В любом случае я вам дам ответ простыми словами, чтобы у вас сложилось общее понимание.

6
0:00:27.500 --> 0:00:38.500
Когда вы подключаетесь через браузер к некому веб-сайту, в этом случае при подключении этот веб-сайт видит ваш IP-адрес в интернете.

7
0:00:38.500 --> 0:00:45.500
Также может получить дополнительную информацию, в том числе информацию по вашей стороне нахождения.

8
0:00:45.500 --> 0:00:53.500
В случае, когда мы говорим про Proxy Server, это некое промежуточное звено между пользователями интернета и сайтами.

9
0:00:53.500 --> 0:01:01.500
Таким образом вы как пользователь интернета вначале подключаетесь к Proxy Server со своим IP-адресом.

10
0:01:01.500 --> 0:01:12.500
Дальше ваш запрос транслируется в таком же виде уже на конечный веб-сайт, но при этом подключение идет от Proxy Server.

11
0:01:12.500 --> 0:01:17.500
Таким образом веб-сайт видит не ваш IP-адрес, а IP-адрес Proxy Server.

12
0:01:17.500 --> 0:01:24.500
В том числе и дополнительную информацию он видит ту страну, где находится этот Proxy Server.

13
0:01:24.500 --> 0:01:32.500
Когда обычно используют Proxy Server, это представим вы находитесь в стране А, вам нужно подключиться к какому-то сайту,

14
0:01:32.500 --> 0:01:37.500
но у вас доступа прямого нет, он заблокирован интернет-провайдерами.

15
0:01:37.500 --> 0:01:45.500
Для того, чтобы получить доступ к этому сайту, вам необходимо отправить запрос через Proxy Server.

16
0:01:45.500 --> 0:01:48.500
Таким образом вы подключаетесь к Proxy Server.

17
0:01:48.500 --> 0:01:55.500
Дальше Proxy Server уже подключается ваш запрос от своего имени к веб-сайту.

18
0:01:55.500 --> 0:02:00.500
Там уже будет скорее всего другая страна, страна С.

19
0:02:00.500 --> 0:02:12.500
И в случае, если веб-сайт не заблокировал себе доступ к стране B, так же как и к вашей стране A, то в этом случае доступ будет предоставлен.

20
0:02:12.500 --> 0:02:19.500
Касательно того, как работает Proxy Server, это тот ресурс в интернете, который принимает ваш запрос,

21
0:02:19.500 --> 0:02:25.500
и ваш запрос в том же виде отправляет на конечный ресурс в интернете.

22
0:02:25.500 --> 0:02:35.500
То есть ничего сложного в нем нет, это обычное перенаправление запросов пользователей.

23
0:02:35.500 --> 0:02:42.500
Вопрос, какое количество Amazon EC2 инстанцев вы можете запускать в вашем AWS аккаунте?

24
0:02:42.500 --> 0:02:45.500
А также есть ли эти лимиты?

25
0:02:45.500 --> 0:02:47.500
Да, лимиты существуют.

26
0:02:47.500 --> 0:02:53.500
Есть HART лимиты, которые нельзя изменить, есть SOFT лимиты, которые можно поднимать.

27
0:02:53.500 --> 0:02:59.500
И те, и другие варианты вы видите в соответствующей вкладке.

28
0:02:59.500 --> 0:03:07.500
Если вы откроете AWS Management Console, сервис Amazon EC2, там в левом навигационном меню будет вкладка Limits.

29
0:03:07.500 --> 0:03:13.500
Мы с вами проделаем это в наших лабораторных работах, подробнее посмотрите.

30
0:03:13.500 --> 0:03:21.500
Как только вы попадаете в эту вкладку Limits, вы видите все те ограничения, которые есть в рамках сервиса Amazon EC2.

31
0:03:21.500 --> 0:03:30.500
Если есть необходимость или вы на текущий момент используете такое значение ресурсов, либо чего бы ни было близко к Limit,

32
0:03:30.500 --> 0:03:34.500
вы всегда можете через Support увеличить эти SOFT Limits.

33
0:03:34.500 --> 0:03:39.500
Вопрос, что такое Эфермал Волюм?

34
0:03:39.500 --> 0:03:43.500
Отвечаю, Эфермал Волюм это временный жесткий диск.

35
0:03:43.500 --> 0:03:49.500
Он доступен для вас, когда вы используете фичу Instant Store сервиса Amazon EC2.

36
0:03:49.500 --> 0:03:59.500
Этот Эфермал Волюм, он есть физически жесткий диск, который находится на том же сервере,

37
0:03:59.500 --> 0:04:09.500
а на этом сервере в рамках сервиса Amazon EC2 вы получаете какую-то часть оперативной памяти и количество ядер процессора.

38
0:04:09.500 --> 0:04:20.500
Это самый первый вариант хранилища, куда устанавливались операционные системы в рамках сервиса Amazon EC2.

39
0:04:20.500 --> 0:04:27.500
Далее через какое-то время вышел новый сервис Amazon EBS, который предоставляет значительное улучшение,

40
0:04:27.500 --> 0:04:33.500
является best practice и рекомендуемым вариантом от AWS для ваших Root Volumes.

41
0:04:33.500 --> 0:04:37.500
Root Volumes это тот жесткий диск, на который вы устанавливаете операционную систему.

42
0:04:37.500 --> 0:04:42.500
Чем они отличаются, вы всегда можете посмотреть в наших лекциях,

43
0:04:42.500 --> 0:04:51.500
а также дополнительную информацию сможете одним запросом в поисковик выйти на необходимую страницу и подробнее ознакомиться.

44
0:04:51.500 --> 0:04:57.500
Вопрос, что обозначает слово Elastic в контексте AWS или облачных технологий?

45
0:04:57.500 --> 0:05:06.500
Отвечаю, Elastic, прямой перевод означает гибкий, в контексте облачных технологий и AWS получает тот же смысл.

46
0:05:06.500 --> 0:05:10.500
Идея в том, что вам предоставляются IT ресурсы гибкими.

47
0:05:10.500 --> 0:05:21.500
Гибкими, значит, вы можете выбирать конфигурацию, а также вы оплачиваете только за то время и тот объем, который вы фактически использовали, то есть pay as you go pricing.

48
0:05:21.500 --> 0:05:32.500
Вопрос, что произойдет с метриками Amazon EC2 Instance, если отключить передачу этих данных в CloudWatch?

49
0:05:32.500 --> 0:05:46.500
Они будут сохранены или утеряны? Отвечаю, если вы не будете передавать в рамках сервиса EC2 метрики в CloudWatch, то этих данных там не окажется, вы не сможете с этими данными работать.

50
0:05:46.500 --> 0:05:57.500
В этом случае у вас есть два варианта, либо не использовать, не генерировать метрики и не настраивать мониторинг, это очень плохой совет.

51
0:05:57.500 --> 0:06:13.500
Так можно делать только для тестовых либо нагрузок, которые относятся к Dev среде, но Production среда, она всегда должна быть настроена с мониторингом, вы должны отслеживать и видеть состояние своих инстанцев.

52
0:06:13.500 --> 0:06:22.500
Другой вариант, если по тем или иным причинам использование сервиса CloudWatch вам не подошло, то вы можете настроить свой мониторинг.

53
0:06:22.500 --> 0:06:37.500
Этот мониторинг будет хранить данные скорее всего внутри этого инстанца и вы сможете настроить программу, чтобы эти метрики подтягивались и отображались вам в какой-то другой программе в Po.

54
0:06:37.500 --> 0:06:59.500
Минус такого подхода в том, что в случае, если что-то произойдет с вашим инстанцем, а вы потеряете доступ к этому инстанцу, то соответственно вы не сможете добраться до данных ваших метрик и не сможете проделать некий troubleshooting, то есть какое-то исследование для того, чтобы понять, где возникла проблема, что явилось причиной.

55
0:06:59.500 --> 0:07:16.500
В случае с CloudWatch ваши данные по метрикам централизованно собираются со всех инстанцев и в случае возникновения какой-то проблемы с вашим инстанцем, потерей доступа, любой проблемы, которая произошла с вашим инстанцем,

56
0:07:16.500 --> 0:07:29.500
логи они не потеряются с вашим инстанцем, они централизованно будут храниться в сервисе CloudWatch и вы можете отфильтровать по необходимому инстанцу и посмотреть необходимые для вас метрики.

57
0:07:29.500 --> 0:07:43.500
Использование сервиса CloudWatch является best practice и рекомендуемым подходом для хранения метрик и дальнейшего мониторинга в состоянии ваших инстанцев и других сервисов.

58
0:07:43.500 --> 0:07:47.500
Здесь я бы хотел также внести небольшое уточнение.

59
0:07:47.500 --> 0:08:13.500
Сервис CloudWatch может использоваться для хранения как метрик, так и логов. Логи также у вас могут быть системными и логи вашего аппликация. То есть пройдемся более подробно. Метрики это когда вы информацию по состоянию показателей вашего инстанца передаете в сервис CloudWatch.

60
0:08:13.500 --> 0:08:29.500
Какой у вас загружен процессор, какое количество оперативной памяти используется, какое количество свободно, какое количество записей на жесткий диск сейчас происходит, какое количество операций на чтение у вас происходит в вашем жестком диске.

61
0:08:29.500 --> 0:08:49.500
Эта информация передается в виде метрик и вы можете в виде графиков видеть изменения этих показателей. Когда мы говорим про логи, логи это выходная информация после запуска тех или иных команд для отработки тех или иных процессов.

62
0:08:49.500 --> 0:09:05.500
Когда мы говорим системные логи, то скорее всего сюда относятся логи, которые генерируют ваш EC2 Instance во время первоначального запуска, когда вы устанавливаете различные обновления, программы и так далее.

63
0:09:05.500 --> 0:09:32.500
Когда мы говорим логи приложения, то есть ваше приложение работает внутри вашего инстанца и генерирует некоторые логи. Например, это могут быть логи такие, пришел запрос на ваш веб-сайт и вы логируете у себя в приложении, что пришел запрос от такого-то IP адреса на такой-то API, например, get users с такими-то параметрами.

64
0:09:32.500 --> 0:09:50.500
В этом случае вот эта запись сохранится в логах приложения. Эти логи, что системные, что application логи вы также можете хранить в сервисе CloudWatch. Но в этом случае используется под сервис внутри CloudWatch есть CloudWatch Locks, а есть CloudWatch Matrix.

65
0:09:50.500 --> 0:10:17.500
Вопрос. Отличается ли оплата за monitoring CloudWatch в зависимости от типа инстанца? Отвечаю. Нет, не зависит от типа инстанца. Если мы говорим CloudWatch Matrix под сервис в рамках CloudWatch, который работает с метриками, этими показателями,

66
0:10:17.500 --> 0:10:36.500
то там вы оплачиваете за каждую метрику. Если мы говорим про CloudWatch Locks, который хранит системные либо логи ваших приложений, то здесь вы оплачиваете за объем ваших логов, то есть за гигабайт оплачиваете определенную сумму. Более подробнее вы можете посмотреть на странице CloudWatch Pricing.

67
0:10:36.500 --> 0:10:59.500
Вопрос. Почему AWS приостановил модель оплаты Scheduled Reserved Instances для сервиса Amazon EC2? Отвечаю. Так как я не являюсь сотрудником AWS, не Amazon, я не владею официальным ответом на этот вопрос.

68
0:10:59.500 --> 0:11:20.500
Мы лишь можем предположить, что затраты на обслуживание и поддержку модели Scheduled Reserved Instances себя не окупили, и в связи с этим эта фича была свернута и более не предоставляется.

69
0:11:20.500 --> 0:11:41.500
Есть очень много примеров внутри AWS, когда либо сервис, либо какая-то фича перестает быть доступной, но взамен в той же новости о прекращении того или иного сервиса также пишется о том, что вышел следующий сервис, который вы можете использовать как альтернативу старому.

70
0:11:41.500 --> 0:11:59.500
В случае со Scheduled Reserved Instances ничего подобного я, к сожалению, не находил, и предполагаю, что в целом эта идея с Scheduled Reserved Instances является не очень удачной и прибыльной для облачного провайдера, поэтому этой варианта нет.

71
0:11:59.500 --> 0:12:17.500
Но при этом я нисколько не разочарован, потому что мы с вами рассмотрели на лекции, еще есть более трех различных вариантов моделей оплаты сервиса Amazon EC2.

72
0:12:17.500 --> 0:12:38.500
Более того, есть также подход Serverless, вы можете использовать контейнеры, таким образом в зависимости от вашей бизнес-задачи вы всегда можете найти подходящий для вас сервис, связку сервисов, которые предоставят вам максимальную выгоду и позволят компании, бизнесу увеличить свою прибыль.

73
0:12:38.500 --> 0:12:54.500
Вопрос. Представим такой случай. Компания приобрела определенный объем Instances EC2 по модели оплаты Reserved Instances, а именно AURI, то есть All Upfront Reserved Instances на 3 года.

74
0:12:54.500 --> 0:13:12.500
То есть на 3 года наперед с учетом скидки оплатила этот объем Instances. Далее, через год эта компания обанкротилась и что произойдет с оставшейся частью? Будет ли она пропорционально возвращена? Будет ли какая-либо компенсация от AWS?

75
0:13:12.500 --> 0:13:38.500
Отвечаю. Reserved Instances это та модель оплаты за сервисы EC2, которая предоставляет Amazon некоторую полезную информацию. А это та информация, которая означает, что вы как клиент будете год либо 3 года гарантированно использовать некоторую часть Instances EC2.

76
0:13:38.500 --> 0:13:46.500
С этой информацией AWS может планировать наперед развитие своей глобальной инфраструктуры, а также развитие своих дата-центров.

77
0:13:46.500 --> 0:14:08.500
Amazon не будет компенсировать вам оставшуюся, неиспользованную часть Reserved Instances, а иначе бы сломалась вся идея Reserved Instances. Поэтому есть один вариант с некоторой долей вероятности компенсировать свои затраты. Это продать ваши Reserved Instances в AWS Marketplace.

78
0:14:08.500 --> 0:14:26.500
AWS Marketplace это некий виртуальный рынок, где вы можете продавать или покупать IT ресурсы. Там же вы можете продать или купить Reserved Instances. В случае если находится покупатель, вы возвращаете ваши расходы.

79
0:14:26.500 --> 0:14:48.500
В случае если не находится, то с каждым днем у вас будет впустую отрабатывать ваши Instances. Таким образом пройдет срок покупки Reserved Instances и какая-то часть ваших вложений уйдет впустую.

80
0:14:48.500 --> 0:15:10.500
Поэтому общая рекомендация перед тем как вы будете покупать Reserved Instances, необходимо максимально проработать этот вопрос и исключить тот случай, когда часть Reserved Instances перестанет быть нужной.

81
0:15:10.500 --> 0:15:22.500
Эти кейсы максимально нужно исключить. В тот момент, когда вы будете максимально в этом уверены, покупка Reserved Instances является оправданным и правильным решением.

82
0:15:22.500 --> 0:15:31.500
На этом мы закончили разбор всех вопросов, полученных от вас. Еще раз спасибо за отправленные вами вопросы. Ждем новых.

83
0:15:31.500 --> 0:15:41.500
На этом мы закрываем сессию вопросов и ответов и увидимся с вами на следующих наших активностях.