WEBVTT

00:00:00.990 --> 00:00:05.880
Добрый день уважаемые студенты! Мы с вами
на очередной сессии вопросов и ответов.

00:00:06.000 --> 00:00:08.310
Давайте разберём те вопросы,
которые у вас возникли.

00:00:11.760 --> 00:00:17.940
Вопрос:
«Что делать, если у некоторой активности
нет субтитров на нужном вам языке?»

00:00:18.480 --> 00:00:24.600
В этом случае, воспользуйтесь групповым
Telegram чатом, который мы создали для вас

00:00:24.990 --> 00:00:30.330
и напишите, что для конкретной активности
нет субтитров на таком-то языке.

00:00:30.600 --> 00:00:36.120
Мы обязательно посмотрим и добавим субтитры,
после чего оповестим вас в групповом чате.

00:00:38.610 --> 00:00:42.780
Вопрос:
«Что делать, если субтитры от другого видео?»

00:00:43.770 --> 00:00:47.520
В этом случае, также напишите в
групповом чате о проблеме,

00:00:47.850 --> 00:00:52.560
что с такой-то активностью проблема
субтитров такого-то языка.

00:00:52.800 --> 00:00:56.640
Мы обязательно посмотрим, поправим
и оповестим вас в Telegram чате.

00:00:58.590 --> 00:01:02.100
Вопрос:
«Что делать, если бот перестал отвечать?»

00:01:03.300 --> 00:01:06.960
Первое, что нужно сделать, это попробовать
воспроизвести вот эту проблему,

00:01:07.140 --> 00:01:12.660
если она постоянно воспроизводится,
то есть смысл сообщить в Telegram чате.

00:01:13.380 --> 00:01:19.352
Обязательно отметьте либо меня, либо
представителя C1oud academy, для того чтобы это

00:01:19.376 --> 00:01:26.140
сообщение точно дошло и этот человек посмотрел.
Теперь, касательно того, как действовать вам.

00:01:26.490 --> 00:01:33.070
Вам нужно, как только появляется проблема,
попробовать очистить историю чата.

00:01:33.120 --> 00:01:38.727
Для этого вам нужно в чате,
в верхней правой части экрана

00:01:38.751 --> 00:01:45.060
нажать на кнопку с тремя точками
и отобразятся настройки чата.

00:01:45.930 --> 00:01:50.585
Там выбрать пункт «Очистить чат»,
чат удалять не нужно, потому что

00:01:50.609 --> 00:01:55.193
вам ещё раз нужно будет находить
бота. Достаточно очистить чат.

00:01:55.217 --> 00:02:02.730
Там отобразится обратный отсчёт с пяти секунд
для того, чтобы вы могли отменить действие.

00:02:02.880 --> 00:02:06.916
Это нормально, подождите немножко. Как
только это пройдёт, в нижней части отобразится

00:02:06.940 --> 00:02:10.440
кнопка Start. Вот вы можете
начать общение с ботом сначала

00:02:10.560 --> 00:02:17.820
и попробовать вот эту ошибку воспроизвести.
Вот эта очистка чата является безопасной.

00:02:18.240 --> 00:02:25.980
Даже если все без проблем работает и вам
нужно освободить место на вашем устройстве

00:02:26.100 --> 00:02:29.790
удалив эти чаты, то вы можете
это делать в любое время.

00:02:30.030 --> 00:02:33.480
Не надо накапливать эту
историю, она практически не нужна.

00:02:34.320 --> 00:02:39.273
Вы можете периодически это
проделывать, весь ваш прогресс

00:02:39.297 --> 00:02:44.250
внутри платформы C1oud academy
сохраняется не в вашем чате,

00:02:44.520 --> 00:02:48.810
а сохраняется в специальной базе
данных, поэтому прогресс не потеряется.

00:02:50.550 --> 00:02:57.870
Вопрос:
«Что делать, если вы нашли ошибку или
баг внутри telegram-бота или внутри видеоплеера?»

00:02:58.440 --> 00:03:02.256
В этом случае соберите подробнее,
как вы дошли до этой ошибки, как

00:03:02.280 --> 00:03:06.450
она воспроизводится, и эти детали
напишите в групповой чат в Telegram.

00:03:07.260 --> 00:03:10.428
Если есть возможность,
обязательно тегните меня,

00:03:10.452 --> 00:03:13.620
если я буду там, либо
представителя C1oud academy,

00:03:13.770 --> 00:03:18.473
для того чтобы ваше сообщение
оперативнее дошло до нас

00:03:18.497 --> 00:03:23.200
и мы смогли подключиться и
решить эту проблему, спасибо.

00:03:24.930 --> 00:03:28.768
Вопрос:
«Почему мой общий прогресс
внутри telegram-бота уменьшился?»

00:03:28.792 --> 00:03:33.491
Отвечаю: это нормально, не переживайте.
Ваши набранные баллы, ваши

00:03:33.515 --> 00:03:38.070
выполненные активности все
это сохраняется и никуда не уходит.

00:03:39.510 --> 00:03:47.817
Так как мы отображаем вам общий прогресс в процентном
соотношении, и второе, так как мы динамически можем

00:03:47.841 --> 00:03:55.908
пополнять курсы новыми, свежими материалами, то
общий пул баллов, который вы можете набрать в рамках

00:03:55.932 --> 00:04:04.199
нашего курса он постоянно будет меняться. В тот момент,
когда он увеличивается, а вы в этот момент ничего

00:04:04.223 --> 00:04:12.330
не прошли, в процентном соотношении ваш прогресс
может уменьшиться. Это нормально, имейте это в виду.

00:04:13.590 --> 00:04:16.777
Как только вы видите, что ваш
прогресс уменьшился, это говорит

00:04:16.801 --> 00:04:19.830
о том, что есть новый материал,
который вы можете пройти.

00:04:21.570 --> 00:04:24.330
Вопрос:
«Что такое IT-ресурс, приведите примеры?»

00:04:24.720 --> 00:04:30.510
Это хороший вопрос, более подробно про это будем
говорить на лекциях. Давайте, вкратце, расскажу.

00:04:31.140 --> 00:04:35.535
Когда мы говорим ресурс
в облаке – в облаке AWS, то

00:04:35.559 --> 00:04:41.100
подразумевается некий ресурс,
привязанный к какому-то сервису.

00:04:41.760 --> 00:04:46.100
У этого ресурса есть
уникальный ID, этот уникальный ID

00:04:46.124 --> 00:04:51.120
называется ARN, т.е. Amazon
Resource Name. Это такая строчка

00:04:51.480 --> 00:04:54.403
определённого формата,
в котором написано в каком

00:04:54.427 --> 00:04:57.840
регионе, в каком аккаунте,
к какому сервису относится,

00:04:58.050 --> 00:05:03.010
какой именно ресурс, вид ресурса
в рамках этого сервиса и ID,

00:05:03.150 --> 00:05:10.240
либо имя этого ресурса и вся эта строчка является
уникальной. Теперь, когда мы говорим ресурс,

00:05:10.290 --> 00:05:15.610
то у каждого ресурса есть
уникальный ARN, то есть ID.

00:05:15.660 --> 00:05:19.840
Давайте рассмотрим, как
пример, сервис Amazon EC2,

00:05:19.980 --> 00:05:24.960
который предоставляет нам виртуальные
серверы. Один виртуальный сервер

00:05:25.110 --> 00:05:28.230
– это один ресурс, два виртуальных
сервера – значит два ресурса.

00:05:28.440 --> 00:05:31.800
У каждого этого ресурса уникальный
ID, т.е. уникальный ARN.

00:05:32.940 --> 00:05:36.570
Если мы говорим про сервис Amazon
RDS (Amazon Relational Database Service),

00:05:36.690 --> 00:05:39.300
который предоставляет нам
инстансы базы данных.

00:05:41.040 --> 00:05:45.690
Что такое инстанс? Это представьте единицу,
т.е. одна единица базы данных.

00:05:46.170 --> 00:05:52.050
Если мы создаём другой инстанс – другую
единицу базы данных в рамках этого сервиса,

00:05:52.230 --> 00:05:59.250
то у неё уже будет свой уникальный ARN. Таким
образом, у нас два ресурса внутри этого сервиса.

00:06:02.250 --> 00:06:04.110
Вопрос:
«Что такое вычислительные мощности?»

00:06:04.860 --> 00:06:09.480
Когда мы говорим про вычислительные мощности,
имеется в виду мощность суперкомпьютера,

00:06:10.230 --> 00:06:14.760
какое количество операций он может
выполнить в секунду, но в нашем случае,

00:06:15.390 --> 00:06:20.130
в контексте IT-инфраструктуры, когда мы
говорим про вычислительные мощности,

00:06:20.310 --> 00:06:27.820
имеем в виду cумму ОЗУ,
RAM и CPU процессоров

00:06:27.900 --> 00:06:31.710
– всех наших виртуальных серверов,
которые у нас имеются на данный момент.

00:06:34.710 --> 00:06:37.990
Вопрос:
«Что такое  IT-инфраструктура?»

00:06:38.590 --> 00:06:44.790
IT-инфраструктура – это некая система, состоящая
из IT-ресурсов, связанных между собой,

00:06:45.060 --> 00:06:47.820
которая выполняет ту
или иную задачу совместно.

00:06:51.330 --> 00:06:55.200
Вопрос:
«Что такое облачные вычисления?»

00:06:55.620 --> 00:06:59.688
Облачные вычисления – это модель
предоставления IT-ресурсов удалённо по

00:06:59.712 --> 00:07:03.780
требованию в нужном объёме
от облачного провайдера.

00:07:06.060 --> 00:07:09.480
Отличается тем, что мы можем
высвободить ресурсы в тот момент,

00:07:09.690 --> 00:07:13.740
когда они нам уже не нужны, и оплачиваем
только за то, что мы использовали.

00:07:14.190 --> 00:07:19.860
Более подробно мы с вами проговорим
на наших лекционных занятиях.

00:07:22.680 --> 00:07:24.210
Вопрос:
«Приведите примеры IaaS»

00:07:25.020 --> 00:07:30.000
Самый популярный пример, который вы можете
встретить в интернете – это Amazon EC2

00:07:30.120 --> 00:07:34.440
– это правильный пример.
Amazon EC2 – это тот сервис,

00:07:34.770 --> 00:07:40.770
который помогает вам арендовать
виртуальные серверы. Это означает, что

00:07:41.490 --> 00:07:45.360
все обслуживание начиная от
установки операционной системы,

00:07:45.480 --> 00:07:49.892
установки необходимых
приложений и в целом обслуживания

00:07:49.916 --> 00:07:54.000
работы этого виртуального
сервера ложится на вас.

00:07:54.150 --> 00:07:57.344
У вас полный контроль
над этим сервером, вы что

00:07:57.368 --> 00:08:01.050
хотите на нём можете
делать. В этом случае это IaaS.

00:08:01.290 --> 00:08:04.200
Другой пример IaaS, это тоже
фундаментальный сервис

00:08:04.350 --> 00:08:07.080
– это Amazon VPC, которая
предоставляет возможность

00:08:07.235 --> 00:08:15.180
построить локальную сеть в вашем облаке и
связать все ваши компоненты между собой.

00:08:18.900 --> 00:08:22.560
Вопрос:
«Приведите пример PaaS»

00:08:22.680 --> 00:08:25.651
PaaS – это следующий шаг,
от IaaS, PaaS  до SaaS, когда

00:08:25.675 --> 00:08:28.590
у вас контроля над IT-ресурсами
всё меньше и меньше.

00:08:29.550 --> 00:08:33.720
То, что контроля у вас меньше, не говорит о
том, что это плохо, а наоборот, в некоторых

00:08:33.720 --> 00:08:37.363
случаях, это является большим
плюсом и позволяет вам,

00:08:37.387 --> 00:08:40.960
себя же разгрузить от
некоторых рутинных IT работ,

00:08:41.520 --> 00:08:44.418
передать это облачному
провайдеру, а самому,

00:08:44.442 --> 00:08:47.340
своей команде, компании
сконцентрироваться на

00:08:47.610 --> 00:08:52.230
решении задач, связанных
непосредственно с вашим бизнесом.

00:08:52.980 --> 00:08:57.700
Когда мы говорим PaaS, можно привести
пример Amazon RDS – это сервис

00:08:57.900 --> 00:09:05.130
предоставления реляционной базы данных. В
этом случае, вам нет необходимости настраивать

00:09:05.880 --> 00:09:10.140
операционную систему, устанавливать
систему управления базами данных,

00:09:10.350 --> 00:09:14.790
уже все готово, настроено для вас. Вы можете
провести некоторые небольшие настройки

00:09:15.750 --> 00:09:20.430
в уже установленной базе данных
и уже начать с ней работать.

00:09:21.120 --> 00:09:26.670
Все то, что связано с операционной системой,
самим приложением баз данных,

00:09:26.880 --> 00:09:32.400
к вам не относится и полностью обслуживается
облачным провайдером, т.е. контроля меньше.

00:09:32.730 --> 00:09:37.690
Есть плюсы и есть минусы. Плюсы –
это то, что вы не отвлекаетесь,

00:09:37.800 --> 00:09:43.830
минусы – это то, что если вам нужна более тонкая
настройка, а этой настройки нет в этом сервисе,

00:09:44.040 --> 00:09:48.990
то вам нужно подняться выше до IaaS,
где у вас полный контроль над ресурсами,

00:09:49.140 --> 00:09:54.660
да, вам нужно потратить своё личное
время на необходимую настройку,

00:09:55.590 --> 00:10:01.290
но при этом вы получите, то, что вам нужно
для ваших бизнес нагрузок. Поэтому выбор

00:10:01.400 --> 00:10:05.780
сервиса IaaS, PaaS либо SaaS – это
полностью зависит от вашей бизнес задачи,

00:10:08.128 --> 00:10:14.828
поэтому нужно выбирать с умом, с учётом всех
тех условий и ограничений, которые у вас есть.

00:10:17.878 --> 00:10:24.958
Вопрос:
«Приведите пример и объясните, чем отличается
объектное хранилище от блочного хранилища?»

00:10:26.128 --> 00:10:31.588
Про это мы более подробно проговорим на
лекции. Давайте, я вкратце попробую объяснить.

00:10:31.888 --> 00:10:35.908
Блочное хранилище – это сервис Amazon
EBS, т.е. Amazon Elastic Block Storage,

00:10:36.208 --> 00:10:41.098
а объектное хранилище – это Amazon S3,
т.е. Amazon Simple Storage Service,

00:10:41.268 --> 00:10:49.548
мы храним объекты как один объект, ведётся
его учёт. Когда мы говорим про Amazon EBS

00:10:49.828 --> 00:10:52.358
– это тот сервис, который фактически
является файловой системой,

00:10:55.138 --> 00:11:00.628
и вы на неё можете установить операционную
систему. Более того, сервис Amazon EBS используется

00:11:01.108 --> 00:11:09.538
для того, чтобы создать корневой диск и
привязать её к инстансу Amazon EC2

00:11:10.768 --> 00:11:14.878
и чтобы этот виртуальный сервер
полноценно включился, начал работать.

00:11:15.688 --> 00:11:19.588
Когда мы говорим про объектное хранилище, там
операционную систему установить не можете,

00:11:19.798 --> 00:11:25.528
но это тот сервис, который работает
именно с объектами как единое целое.

00:11:26.248 --> 00:11:30.058
Вы передаете туда объект, с этим работаете,
если вам этот объект нужно изменить,

00:11:30.251 --> 00:11:34.198
в этом случае вы его скачиваете и загружаете
уже новую версию вашего объекта.

00:11:34.498 --> 00:11:38.668
Для некоторых типов нагрузок это
приемлемо и это даже лучше.

00:11:38.968 --> 00:11:44.038
Когда мы говорим про блочное хранилище, то
объект хранится в виде блоков несколько

00:11:44.218 --> 00:11:54.898
килобайтов. Объект это не есть какая-то цельная
сущность, а она размазана по вашей файловой системе,

00:11:55.078 --> 00:12:00.718
хранится в разных частях вашего жёсткого
диска, в соответствующих ячейках.

00:12:01.048 --> 00:12:06.928
Совокупность всего этого позволяет целый файл
хранить и работать с ним в блочном хранилище.

00:12:07.858 --> 00:12:14.368
Основное отличие, ещё раз повторюсь, это то, что
блочное хранилище – это там, где мы настраиваем,

00:12:14.638 --> 00:12:20.963
устанавливаем операционную систему.
Объектное хранилище, когда мы с объектами

00:12:20.987 --> 00:12:26.728
работаем, как одна цельная сущность
для определённых видов нагрузок.

00:12:28.528 --> 00:12:33.148
Следующий вопрос гипотетически:
«Представим, что в какой-то момент
большинство компаний захотят перейти в облако

00:12:33.508 --> 00:12:39.496
и с учётом всех тех преимуществ,
которые даёт облако, может ли

00:12:39.520 --> 00:12:45.508
получится так, что облако будет
перегружено и возможно ли это?»

00:12:47.038 --> 00:12:49.711
Для того чтобы ответить на этот
вопрос, давайте порассуждаем.

00:12:49.735 --> 00:12:52.408
Мы с вами знаем, что есть у нас
глобальная инфраструктура AWS,

00:12:52.858 --> 00:12:58.118
которая состоит из десятка регионов,
разбросанных по всему земному шару.

00:12:58.678 --> 00:13:01.798
Каждый регион состоит из
нескольких Availability zone.

00:13:02.908 --> 00:13:10.738
Каждая Availability zone состоит из нескольких
дата-центров. Когда мы говорим про дата-центр – это

00:13:11.968 --> 00:13:21.328
крупное помещение, которое вмещает в
себе сотни тысяч физических серверов

00:13:21.868 --> 00:13:33.778
и каждый сервер максимально мощный для
физического места, который он занимает.

00:13:34.258 --> 00:13:40.528
Потом вот этот каждый сервер делится виртуально и
уже нам предоставляется возможность выбрать

00:13:40.708 --> 00:13:49.738
менее мощные виртуальные сервера, по крайней
мере, разного типа. Исходя из всего этого

00:13:52.708 --> 00:13:59.218
мы видим, что все дата-центры, все вот эти
вычислительные мощности облачного провайдера AWS

00:13:59.428 --> 00:14:07.018
разбросаны по всему земному шару. Если мы
говорим, что с разных уголков планеты

00:14:07.228 --> 00:14:15.148
какая-то часть компании решится переходить в
облако, то с учётом тех мощностей, которые есть,

00:14:16.588 --> 00:14:21.028
AWS почувствует какой-то всплеск, но в
целом проблем, возможно, не будет.

00:14:21.598 --> 00:14:26.116
Если мы ещё дальше усложняем
вопрос, этот кейс и говорим,

00:14:26.140 --> 00:14:30.658
что большинство компаний
находятся в рамках одного региона.

00:14:31.798 --> 00:14:36.810
то в этом случае, давайте
теперь рассуждать дальше.

00:14:36.834 --> 00:14:42.448
Проговорим про два момента.
Первый момент – это то, что

00:14:44.128 --> 00:14:58.438
когда вы регистрируете свой AWS аккаунт, то
для вас происходит рандомный выбор и привязка

00:14:58.618 --> 00:15:07.138
реальных Availability zone с названиями, которые
отображаются в AWS. Таким образом, когда мы говорим

00:15:07.618 --> 00:15:20.228
регион North Virginia, например, первая
Availability zone A – это us-east-1a, то оно

00:15:20.488 --> 00:15:25.138
привязывается к одной географически
расположенной в одном месте Availability zone.

00:15:25.888 --> 00:15:33.568
Когда регистрируется другой аккаунт, то у
него уже в консолe us-east-1a тот же,

00:15:33.748 --> 00:15:40.148
он уже привязывается географически к другой
Availability zone. Таким образом, нагрузки

00:15:40.228 --> 00:15:46.948
в рамках региона максимально рандомно
распределяются по Availability zone.

00:15:49.378 --> 00:15:56.518
Теперь дальше, когда мы говорим про конкретную одну
Availability zone представим, что я, например, выбрал,

00:15:58.108 --> 00:16:05.998
как основным местом для своих ресурсов Availability
zone А. А другая компания выбрала Availability zone C.

00:16:06.448 --> 00:16:11.578
Так получилось, что географически они
ссылаются на одну и ту же Availability zone.

00:16:11.698 --> 00:16:18.628
При этом наши нагрузки все в одно место идут.
Хорошо, допустим так. В этом случае у нас,

00:16:19.558 --> 00:16:28.328
что спасёт инфраструктуру AWS от перегруза так
это то, что внутри одной Availability zone

00:16:28.498 --> 00:16:34.528
несколько дата-центров. Каждый дата-центр, я уже
рассказывал про его вычислительные мощности,

00:16:34.858 --> 00:16:39.868
они связаны между собой,
как локальная сеть, т.е.

00:16:40.528 --> 00:16:45.958
передача информации происходит так же
быстро между этими дата-центрами, как между

00:16:47.068 --> 00:16:52.048
серверами внутри одного дата-центра.
Таким образом, ваши нагрузки

00:16:52.288 --> 00:16:57.568
распределяются, даже если они попали на одну
и ту же географическую Availability zone,

00:16:57.928 --> 00:17:01.978
то она распределяется уже там,
между несколькими дата-центрами.

00:17:02.188 --> 00:17:08.548
Таким образом, все те нагрузки, которые идут
в облако, максимально на всех уровнях

00:17:08.908 --> 00:17:17.428
пытаются размазаться. Таким образом, исключить
кейсы, когда либо какой-то дата-центр,

00:17:17.668 --> 00:17:21.268
либо какая-то Availability zone
перегружается больше остальных.

00:17:24.388 --> 00:17:31.268
Какое-то время вам, возможно, показалось,
что я рекламирую AWS, защищая его,

00:17:31.378 --> 00:17:34.278
на самом деле цель была
не такой. Цель была в том,

00:17:34.302 --> 00:17:37.558
чтобы показать насколько
хорошо облачный провайдер AWS

00:17:37.738 --> 00:17:43.108
подготовился к подобным случаям, как он это
решает и делает максимально все

00:17:43.378 --> 00:17:47.966
для того, чтобы быть
доступным для его пользователей.

00:17:47.990 --> 00:17:51.958
Теперь хотел бы
рассказать обратную сторону,

00:17:53.068 --> 00:17:56.908
когда действительно не хватает
вычислительных мощностей – это реальный кейс.

00:17:57.448 --> 00:18:03.058
За все время работы с облачными технологиями
со мной это было два раза. Когда я хотел создать

00:18:03.298 --> 00:18:08.548
определённый тип инстанса Amazon EC2 в
определённом регионе, либо в Availability zone

00:18:08.818 --> 00:18:12.406
и вышла соответствующая
ошибка о том, что на данный

00:18:12.430 --> 00:18:16.018
момент нет свободных
ресурсов, пожалуйста, подождите.

00:18:16.648 --> 00:18:22.618
Мы можем подождать в этом случае. Другой вариант –
это выбрать другой тип сервера,

00:18:22.798 --> 00:18:28.118
не всегда это возможно, но в большинстве случаев
можно, как альтернативу выбрать что-то слабее,

00:18:28.288 --> 00:18:37.288
либо что-то немного мощнее. Другой вариант – это
попробовать изменить Availability zone, либо регион,

00:18:37.438 --> 00:18:40.348
опять же в зависимости от того,
какую задачу вы выполняете,

00:18:40.588 --> 00:18:45.608
и она может быть для вас доступна,
либо недоступна. Если это сервер,

00:18:45.958 --> 00:18:49.898
который вы поднимаете, является компонентом,
частью вашей IT-инфраструктуры,

00:18:50.048 --> 00:18:54.268
а ваша IT-инфраструктура находится
в определённой Availability zone,

00:18:54.628 --> 00:19:01.048
то в этом случае выбор другой Availability zone, либо
региона для вас не вариант. Остаётся вариант – либо

00:19:01.318 --> 00:19:05.518
выбрать другой тип, либо
подождать. Теперь вы знаете, что

00:19:05.968 --> 00:19:12.688
подобное может произойти. И  отвечая на вопрос, да, это
возможно. Это достаточно редко ввиду того, что AWS

00:19:12.838 --> 00:19:18.028
всячески старается не приводить к подобным
ситуациям, чтобы быть максимально доступным

00:19:18.268 --> 00:19:25.688
для своих пользователей. На этом мы
подошли к концу. Спасибо,

00:19:26.398 --> 00:19:30.568
заканчиваем нашу сессию вопросов и
ответов и увидимся на следующих занятиях.