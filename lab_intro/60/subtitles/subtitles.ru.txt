Добрый день, уважаемые студенты! Я рад вас видеть на очередной сессии «Введение в лабораторную работу». В сегодняшней лабораторной работе мы с вами тесно поработаем с сервисом Amazon VPC. Итак, давайте начнем. Для того, чтобы начать выполнять лабораторную работу, нам необходимо её предварительно открыть. Для того чтобы до него добраться, давайте авторизуемся в AWS Academy, откроем соответствующий курс Cloud Foundations. Далее, откроем в левом навигационном меню курса вкладку Modules. Далее нам необходимо перейти на пятый модуль - это Networking and Content Delivery. Если мы раскроем все активности пятого модуля, то мы увидим в нижней части вторую лабораторную работу, которая называется «Build your VPC and Launch your web server». Давайте нажмем на эту ссылку для того, чтобы перейти на основную страницу лабораторной работы. Мы добрались до основной страницы лабораторной работы. Опционально вы можете инициировать создание AWS аккаунта для вашей сессии. Для этого необходимо нажать на кнопку Start Lab. Также я рекомендую закрыть окно Terminal для того, чтобы информация с заданием лабораторной работы отобразилась на всю страницу. В этой лабораторной работе мы с вами подробнее поработаем с сервисом Amazon VPC. Amazon VPC — это сервис, который позволяет вам внутри облака AWS построить такую же сеть, которую мы строим в традиционном дата-центре, только в облаке. Все необходимые компоненты и настройки доступны. После выполнения этой лабораторной работы мы с вами научимся создавать VPC, используя AWS Management Console, создавать subnets, конфигурировать Security groups, а также запускать EC2 инстансы в наших VPC. В среднем выполнение этой лабораторной работы занимает 30 минут. Если вам требуется больше времени, никаких ограничений и проблем с этим нет, по умолчанию для выполнения этой лабораторной работы уделяется полтора часа. Я вам напоминаю, что специально для нашей сессии лабораторной работы создается временный реальный AWS аккаунт. Он создается с некоторыми ограничениями, поэтому при попытке открыть сервис, который не предусмотрен лабораторной работой, либо использование функционала, который также не предусмотрен лабораторной работой, вы можете видеть ошибки доступа. Это нормально, следует ожидать, поэтому рекомендуется сконцентрироваться на задаче, которая дана в рамках лабораторной работы, и для этих целей все необходимые ресурсы активированы и доступны. На этой диаграмме вы можете увидеть конечный результат после успешного выполнения всех пунктов лабораторной работы. На первый взгляд может показаться сложной, но ни в коем случае не следует переживать, потому как мы пройдемся по каждому шагу, там где необходимы будут даны соответствующие комментарии, и после совместного выполнения всех этих шагов мы сможем воссоздать эту диаграмму внутри облака AWS. Самая первая задача, необходимо добраться до основной страницы AWS Management Console. Для этого в основном меню лабораторной работы необходимо нажать на кнопку Lab Start, появится всплывающее окно, в котором через некоторое время появится сообщение Lab Status: Ready. Это говорит о том, что временный AWS аккаунт успешно создан и вы можете закрывать это всплывающее окно, после чего необходимо нажать на кнопку AWS. По нажатию этой кнопки вы откроете AWS Management Console и в целом делаете все необходимое, чтобы перейти к следующим шагам. Здесь одна рекомендация, для того чтобы удобнее переключаться к заданию и обратно в AWS Management Console есть возможность скопировать ссылку этой кнопки и открыть AWS Management Console либо в инкогнито режиме, либо в другом браузере. Как только мы перешли на главную страницу AWS Management Console, в лабораторной работе рекомендуется сверху слева нажать на кнопку Services и выбрать сервис VPC. Более быстрый вариант - это в специальной строке для поиска сервисов ввести VPC и самая первая ссылка будет ссылка на необходимый нам сервис. Давайте перейдем на сервис VPC. Как только откроется основная страница сервиса Amazon VPC, нам необходимо в левом навигационном меню убедиться, что включена опция New VPC Experience. Если она не включена, то нажмите на переключатель, для того чтобы вы переключились на новый интерфейс сервиса Amazon VPC. Далее, необходимо в левом навигационном меню перейти на вкладку VPC Dashboard. В отобразившейся странице необходимо нажать на кнопку Create VPC для того, чтобы начать инициировать создание нового VPC. В новой открывшейся странице, в левом навигационном меню VPC Settings, необходимо выбрать VPC and more. Далее в Name Tag необходимо ввести значения вместо Project написать Lab, а также оставить включенную опцию Auto-generate, то есть флажок. Если посмотреть чуть ниже, есть возможность ввести наш IPv4 CIDR блок. Давайте введем значение 10.0.0.0/16. Далее укажем, что у нас будет одна Availability зона. Также у нас будет по одному Public Subnet и Private Subnet. Ниже есть секция Customize Subnets CIDR blocks, необходимо ее развернуть для того, чтобы явно указать, какие CIDR блоки относятся к нашим Subnet-ам. Для Public Subnet давайте укажем 10.0.0.0/24, для Private Subnet укажем 10.0.1.0/24. Это все в Availability зоне us-east-1a. Далее мы укажем, что нам нужен NAT Gateway в одной Availability зоне, поэтому выберем опцию In 1 AZ. Для VPC Endpoints выберем вариант None, так как мы в этой лабораторной работе не будем использовать VPC Endpoints. Еще ниже есть настройка DNS hostnames и DNS Resolution, нам необходимо эти варианты оставить включенными, то есть enabled. Вы можете увидеть с правой стороны Preview и необходимо проверить, что все совпадает, а именно VPC это lab-vpc. Далее Subnets у нас находятся в Availability зоне us-east-1a. Название Public Subnet - lab-subnet-public1-us-east-1a, Private Subnet - lab-subnet-private1-us-east-1a. Далее у нас есть два Route table, первый lab-rtb-public, второй lab-rtb-private1-us-east-1a. То есть два Route table на каждый из видов Subnet. Далее необходимо удостовериться, что наши Network Connections это lab-igw, то есть Internet Gateway, а второй это lab-nat-public1-us-east-1a, то есть NAT Gateway, который находится в Availability зоне 1a. Здесь все необходимые настройки совпадают, необходимо в нижней части нажать на кнопку Create VPC. Вы перейдете на страницу со статусами создания каждого из ресурсов внутри нашего VPC. Создание NAT Gateway потребует несколько минут, поэтому нам необходимо подождать пока все ресурсы будут успешно созданы и внизу отобразится кнопка View VPC. Как только отобразится и станет доступна эта кнопка, нам необходимо на нее нажать, после чего мы перейдем на страницу с нашим VPC. Таким образом, мы успешно создали VPC, в котором есть два subnets, один Public, другой Private. Оба subnets находятся в одной Availability зоне и для каждого subnet был создан отдельный route table. Помимо этих компонентов также были созданы Internet Gateway и NAT Gateway. Для того, чтобы посмотреть соответствующие компоненты, в левом навигационном меню вы можете перейти на соответствующие вкладки. Например, Subnets для того, чтобы посмотреть детали созданных из существующих subnets, либо Route tables для того, чтобы посмотреть какие Route tables есть на этом AWS аккаунте. В этой диаграмме вы можете видеть ту часть, которую мы на текущий момент создали. Оставшуюся часть мы будем создавать в AWS Management Console в следующих наших задачах. Здесь хотелось бы обратить внимание и напомнить, что Internet Gateway это тот ресурс в рамках VPC, который дает возможность EC2 инстансам выходить в интернет, а также быть доступными из интернета. У нас есть public subnet, который называется lab-subnet-public1-us-east-1a. У него CIDR блок 10.0.0.0/24. Это говорит о том, что 24 бита среди 32 битов IP-адреса зафиксированы. Значит, 8 последних битов могут меняться. Если мы говорим 8 битов, это значит 2 в степени 8 = 256 уникальных IP-адресов, которые начинаются с первого IP-адреса, это 10.0.0.0. И самое последнее значение, которое может принимать этот CIDR блок, это 10.0.0.255. Таким образом, также для этого subnet указывает следующую маску, это 10.0.0.x, который говорит о том, что для последнего блока может приниматься любое возможное значение. А как мы с вами помним, каждый блок, часть IPv4-адреса, это 8 битов, что равносильно уникальным 256 значениям. А это значит значение от 0 до 255 включительно. Следующий компонент, который мы создали в рамках VPC, это NAT Gateway, который позволяет для EC2 инстансов внутри private subnet выходить в интернет. Но отличительная особенность NAT Gateway, это то, что эти инстансы внутри private subnet недоступны из интернета. Таким образом, они защищены от прямого обращения. Если мы говорим про наш private subnet, который называется lab-subnet-private1-us-east-1a, то у него CIDR блок немножко отличается, это 10.0.1.0/24. /24 означает также, что в этом CIDR блоке у нас есть 256 IP-адресов, которые начинаются с 10.0.1.0 и заканчивается 10.0.1.255. Также этот CIDR блок обозначает как 10.0.1.x. Мы с вами добрались до второй задачи. Здесь мы будем создавать дополнительные subnets внутри нашего VPC. Эти новые VPC будут находиться во второй availability zone. Также здесь хотелось бы отметить, что если внутри VPC у нас находится несколько availability zone, то мы говорим, что наше решение, инфраструктура - highly available, что соответствует best practices AWS. Когда мы создаем VPC и ее компоненты, используя помощник, как мы сделали ранее, то все те компоненты, которые создались, они могут быть удалены, изменены, а также можем создавать новые компоненты внутри этого VPC. Давайте создадим дополнительные subnets. Для этого необходимо в левом навигационном меню перейти на вкладку Subnets. Мы сейчас будем создавать второй public subnet. Необходимо на открывшейся странице со списком subnets нажать на кнопку Create subnet. На открывшейся странице по созданию нового subnet необходимо ввести следующие входные данные. Как VPC ID мы указываем lab-vpc, выбираем из выпадающего меню. Далее как subnet name мы указываем lab-subnet-public2. Как availability zone нам необходимо выбрать отличную от предыдущей availability zone. Как пример давайте выберем us-east-1b. Как CIDR block укажем не пересекающийся CIDR block с предыдущими subnets, а именно 10.0.2.0/24. В этом CIDR block также присутствует 256 IP адресов. В нижней части страницы необходимо нажать на кнопку Create subnet для того чтобы ее создать. Давайте теперь создадим второй private subnet. Для этого также необходимо нажать на кнопку Create subnet и ввести следующие значения. Как VPC ID необходимо в выпадающем списке выбрать наш созданный VPC lab-vpc. Далее как subnet name указать lab-subnet-private2. Как availability zone необходимо выбрать вторую availability зону, а именно us-east-1b. И как CIDR block необходимо указать следующий доступный CIDR block следующий набор из 256 IP адресов, а именно 10.0.3.0/24. Как только мы это все заполняем необходимо нажать на кнопку Create subnet для того чтобы этот private subnet создался. Для того чтобы предоставить доступ в интернет для инстансов внутри второго private subnet нам необходимо этот трафик пустить через NAT gateway. NAT gateway, как мы с вами помним, мы создавали в первой availability зоне. Для того чтобы этот трафик направить на NAT gateway мы будем использовать Route table. Route table это некий набор правил или так называемых routes, который определяет каким образом трафик может двигаться внутри нашей VPC. Далее нам необходимо перейти на вкладку Route tables в левом навигационном меню. На открывшейся странице необходимо выбрать Route table lab-rtb-private1-us-east-1a. Это тот Route table который создался вместе с созданием VPC. Как только мы выбираем этот Route table внизу выходит дополнительная информация и необходимо нажать на вкладку Routes. В этой вкладке будет один единственный Route, который как target указывает наш NAT gateway, а как destination указывает интернет. Этот Route позволяет всем private subnets, которые привязаны к этому Route table через NAT gateway выходить в интернет. Таким образом, для всех инстансов внутри private subnet становится доступным интернет, но из интернета и извне до этих инстансов добраться невозможно. Что нам необходимо сделать: второй созданный private subnet привязать к этому Route table. Для этого необходимо нажать на вкладку Subnet associations и в отобразившейся вкладке необходимо нажать на кнопку Edit subnet associations. Мы увидим список subnets, а также те subnets, которые уже привязаны к этому Route table будут отмечены. В нашем случае, это первый private subnet, который мы создавали вместе с VPC это lab-subnet-private1-us-east-1a. Он уже будет выбран. Нам необходимо дополнительно выбрать созданный нами subnet – lab-subnet-private2. Отмечаем ее галочкой и нажимаем на кнопку Save associations. Теперь нам необходимо ко второму Route table привязать второй созданный public subnet. Для этого выбираем Route table – lab-rtb-public. Если открыть вкладку Routes, то мы увидим там также один Route один путь, где как destination указан интернет и как target - Internet gateway. Что нам необходимо сделать: второй public subnet привязать к этому Route table. Для этого необходимо перейти на вкладку Subnet associations и нажать на кнопку Edit subnet associations. Здесь вы увидите список существующих subnets и те subnets, которые уже привязаны к этому Route table будут отмечены галочкой. А именно, это lab-subnet-public1-us-east-1a. Нам дополнительно необходимо поставить галочку возле второго созданного public subnet, который называется lab-subnet-public2. После чего нажать на кнопку Save associations. Как только мы завершим все эти действия, то все то, что мы создали внутри AWS аккаунта в диаграмме можно отобразить следующим образом. Мы видим, что у нас появились два дополнительных subnets, которые привязаны к соответствующим Route tables и находятся в во второй availability зоне. Мы добрались до третьего задания и здесь нам необходимо создать Security group внутри нашего VPC. Что такое Security group? Это тот ресурс, который выступает как виртуальный firewall для EC2 инстансов и защищает от нежелательного интернет трафика и разрешает только тот трафик, который разрешен. Для того чтобы создать Security group, нам необходимо в левом навигационном меню перейти на вкладку Security groups. В открывшейся странице необходимо нажать на кнопку Create security group. Далее указать необходимые данные для нашей новой security group. Как имя укажем Web Security Group. Как description можем добавить Enable HTTP access. Как VPC необходимо убрать предложенный вариант и в выпадающем меню выбрать наш созданный VPC – lab-vpc. Далее в Inbound rules необходимо нажать на кнопку Add rule и добавить следующие значения. Как Type мы указываем HTTP, как source указываем Anywhere-IPv4, то есть весь интернет и как description описание можно написать Permit web requests. Необходимо прокрутить ниже и нажать на кнопку Create security group. Таким образом, мы создали с вами security group, которую привяжем к EC2 инстансу. Мы переходим к четвертому заданию, где нам необходимо создать наш Web Server. Web Server - это EC2 инстанс и нам необходимо его сконфигурировать, чтобы он выступал как веб-сервер. Для того чтобы создать EC2 инстанс необходимо перейти на этот сервис. Для этого есть несколько путей. В лабораторной работе рекомендуется нажать на кнопку Services и там найти сервис Amazon EC2. Более быстрый и простой вариант - это в специальной строке поиска сервисов начать вводить нужный нам сервис в нашем случае EC2. Как только вы начнете вводить, отобразится ниже ссылка на соответствующие сервисы. И самая первая ссылка будет та ссылка, которая нам нужна. Давайте на нее перейдем. Как только мы перейдем на основную страницу сервиса Amazon EC2, нам необходимо нажать на кнопку Launch instance, чтобы создать новый инстанс. В открывшейся странице давайте введем как имя Web Server 1. Следует иметь в виду, также что, то значение, которое мы сейчас ввели, оно будет значением для тега с ключом name, то есть создается пара ключ значения внутри тегов, как ключ выступает name, как value значение выступает то значение, которое мы ввели в этом поле. Следующее, нам необходимо определиться с AMI. AMI - это Amazon Machine Instance и мы выбираем ее, для того чтобы понять какая операционная система будет установлена в нашем EC2 инстансе. Давайте оставим все значения по дефолту, а именно Amazon Linux и второе поле - это Amazon Linux 2 AMI (HVM). Следующая настройка - это тип инстанса. Предлагается оставить дефолтовое значение t2.micro. Когда мы выбираем значение instance type мы определяем какое железо какое hardware будет подключено к нашему инстансу. Это может быть сильный мощный сервер, либо какой-то слабый, но дешевый сервер. Далее необходимо выбрать key pair, то есть ключи для того, чтобы иметь возможность подключаться по SSH к нашему серверу. Давайте в выпадающем меню выберем vockey - это тот SSH ключ, который предварительно был для нас создан. Далее мы переходим к настройкам сетей. Для этого необходимо в секции Network settings нажать на кнопку Edit для того чтобы ввести соответствующие правки. Как Network мы выбираем lab-vpc. Далее как Subnet выбираем созданный нами вручную публичный subnet это lab-subnet-public2. Далее в пункте Auto-assign public IP выбираем Enable, для того чтобы для этого сервера выделился временный public IP, на который мы сможем с интернета обращаться. Далее, есть настройки security group, то есть нам необходимо в секции Firewall выбрать Select an existing security group, то есть выбрать security group, которая уже существует и для Common security groups отметить галочкой Web security group. Это та security group, которую мы создавали с вами ранее. После того как мы привяжем эту security group, то до этого EC2 инстанса будет разрешен доступ по HTTP из интернета. Мы заканчиваем настройку сетей. Дальше мы переходим к настройкам жестких дисков. Здесь нет необходимости менять какие-либо настройки, мы все оставляем по умолчанию. По умолчанию как root volume, то есть корневой жесткий диск создается SSD жесткий диск общего назначения general purpose и выделяется 8 гигабайт памяти. По необходимости вы можете добавлять больше жестких дисков, также вы можете вместо 8 гигабайт выбрать большее значение, но в рамках лабораторной работы это не требуется. Чуть ниже у нас также есть специальная настройка, которая находится в секции Advanced details называется User data. User data - это специальное поле, куда вы можете ввести ваши команды, скрипты, которые запустятся ровно один раз в момент первого запуска вашего инстанса. Если мы скопируем и вставим следующий кусок кода, то есть набор команд, то мы в момент запуска нашего инстанса загрузим и установим, а также запустим PHP веб-приложение. Как только мы закончили с настройками User data, нам необходимо в правой части нажать на кнопку Launch instance. Вы увидите сообщение о том, что операция была выполнена успешно и в новой странице необходимо нажать на кнопку View all instances. Вас перенаправит на страницу со всеми инстансами в этом AWS аккаунте и соответствующем регионе. В этом списке вы также увидите созданный нами инстанс, который называется Web Server 1. Нам необходимо подождать несколько минут до того момента как колонка Status check не будет заполнена значением 2 из 2 все проверки пройдены. Для того чтобы обновлять состояние, вы можете нажимать на соответствующую иконку обновления. Как только пройдет несколько минут и Status check обновится, давайте выберем наш инстанс и как только мы это сделаем в нижней части отобразится дополнительная информация об этом инстансе. Во вкладке Details нам необходимо будет скопировать Public IPv4 DNS, далее скопированный IP-адрес необходимо в режиме инкогнито в браузере в новом окне вставить в строку поиска и нажать Enter. Как только вы это нажмете, откроется созданная нами страница, которая обслуживается нашим веб-сервером и вы должны увидеть логотип AWS и также некоторую мета информацию о нашем инстансе. Если вы все это увидели, это говорит о том, что вы все шаги выполнили верно. Я вас поздравляю с окончанием нашей лабораторной работы. Ниже вы видите диаграмму, в которой указаны все компоненты, которые мы создали в рамках нашей лабораторной работы. На этом еще раз поздравляю, мы закончили лабораторную работу. Теперь нам необходимо безопасно закрыть и завершить лабораторную работу. Для этого необходимо на странице AWS Academy с лабораторной работой в верхней правой части меню нажать на кнопку End lab. Выйдет всплывающее окно с подтверждением необходимо нажать на Yes, после чего выйдет другое окно с некоторой текстовой информацией. Как только вы там увидите сообщение что “DELETE has been initiated... You may close this message box now”, то это говорит о том, что вы можете закрыть эту страницу и можете закрывать в целом лабораторную работу и выходить с AWS Academy. На этом мы завершили сессию введения в лабораторную работу. Я вас поздравляю. А мы с вами увидимся на следующих наших активностях.