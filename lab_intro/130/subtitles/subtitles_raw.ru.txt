 Добрый день, уважаемые студенты! Я рад вас всех видеть на очередной сессии обзора лабораторной работы. Тема сегодняшней лабораторной работы это Scale and load balance your architecture. Итак, давайте начнем. Самым первым делом нам необходимо в AWS Academy открыть соответствующий курс Cloud Foundations, далее в левом навигационном меню перейти в Models. На открывшейся странице спозиционируется на 10-ом модуле Auto Scaling and Monitoring и вы увидите активность Lab 6 Scale and load balance your architecture. Давайте на нее нажмем, чтобы перейти на основную страницу лабораторной работы. Здесь мы можем скрыть окно терминала, убрав галочку соответствующего пункта и оставить только readme, для того чтобы удобнее было читать задание нашей лабораторной работы. Также вы можете параллельно нажать на кнопку Start Lab, для того чтобы начать инницирование временного AWS аккаунта для вашей сессии. В этой лабораторной работе мы подробнее изучим сервисы Elastic Load Balancing ELB и Auto Scaling. ELB мы используем для того, чтобы балансировать трафик на наши таргеты, а Auto Scaling используем для того, чтобы динамически увеличивать либо уменьшать наши IT-ресурсы. Самый частый сервис, который используется в связке с ACG, то есть Auto Scaling Group, это EC2-инстанции. Что мы сегодня будем с вами делать? Первое, мы создадим копию AMI от уже работающего инстанса. Далее мы создадим Load Balancer, сконфигурируем и запустим Auto Scaling группу, а также посмотрим, как все эти сервисы работают в связке, как происходит Auto Scaling, и мы можем также увидеть эти изменения в алармах и промониторить этот процесс в Amazon CloudWatch. Для выполнения этой лабораторной работы рекомендуется потратить 30 минут. Я напоминаю, что если вам нужно больше времени, то вы всегда можете обнулить счетчик и продолжить выполнение лабораторной работы. До начала нашей лабораторной работы мы видим, что текущая архитектура внутри AWS, она имеет следующий вид. Что будет сделано в рамках этой лабораторной работы? Это мы создадим Load Balancer, перенесем наш веб-инстанц, который находился в Public Subnet 2, сверху справа, на Private Subnet и настроим связку Load Balancer и Auto Scaling. Таким образом у нас будут создаваться инстанцы по необходимости в обеих Availability Zones, то есть Availability Zone A и Availability Zone B. Самым первым делом для того, чтобы начать выполнение лабораторной работы, нам нужно добраться до AWS Management Console. Для этого, если вы еще не сделали, вам необходимо нажать на кнопку Start Lab вверху справа. Как только вы на нее нажмете, появится всплывающее окошко, в котором будет указан статус лабораторной работы, то есть Lab Status in Creation. Как только поменяется статус на Ready, вы можете закрывать это окно и далее вам необходимо будет нажать на кнопку AWS, чтобы перейти на созданный для вашей сессии лабораторной работы временный AWS Account. Как только вы добрались до AWS Management Console, мы можем переходить к выполнению первого задания. Здесь нам необходимо создать копию AMI. Этот AMI будет использоваться для создания новых инстанцев под автоскейлинг группой. Для этого нам необходимо в строке поиска сервисов начать вводить EC2, либо нажать на кнопку Services и в выпадающем меню найти сервис EC2. Как только мы перейдем в левом навигационном меню, нам необходимо выбрать Инстанцы и отобразить список всех инстанцев в нашем AWS Account в конкретном регионе. Если вы не видите инстанции, то проверьте, что у вас стоит регион North Virginia или US East 1. Вы должны увидеть инстанс с названием Web Server 1. Нужно проверить, что в колонке Status Checks стоит два из двух, что говорит о том, что сервер был успешно создан и готов к работе. Как только вы это увидите, необходимо выбрать этот инстанс. Далее в пункте меню Actions выбрать опцию Image and Templates. Далее нажать на опцию Create Image. В открывшейся странице нам необходимо указать как имя Image, Web Server, AMI. Далее как description указать Lab AMI for Web Server и в самом внизу нажать на кнопку Create Image. Вы увидите новый созданный AMI и его соответствующий ID. Вам необходимо этот ID скопировать, так как мы ее будем использовать чуть позднее в следующем задании. Мы переходим ко второму заданию и здесь нам необходимо создать Load Balancer. Я напоминаю, что Load Balancer это тот IT ресурс, который помогает нам балансировать нагрузку на наши вычислительные мощности. В нашем случае это EC2 Instance и мы настроим Load Balancer таким образом, чтобы оно балансировало трафик на несколько Availability Zones. Самым первым делом нам необходимо создать Target Group, то есть это те ресурсы, которые показывают куда будет направляться трафик от Load Balancer. Необходимо в левом навигационном меню выбрать Target Groups. Далее в открывшейся странице нажать на кнопку Create Target Group. Как Target Type нам необходимо выбрать Instances, как Target Type Name давайте укажем Lab Group и также нам необходимо указать VPC. В выпадающем меню давайте выберем Lab VPC. Далее нам необходимо нажать на кнопку Next и вы увидите Register Targets секцию. На текущий момент у нас не созданы наши таргеты, поэтому мы можем пропустить этот шаг и нажать на кнопку Create Target Group. Теперь мы переходим непосредственно к созданию Load Balancer. Для этого в левом навигационном меню необходимо выбрать Load Balancers. В открывшейся странице нажмем на кнопку Create Load Balancer, откроется еще одна страница, в которой вам нужно будет выбрать тип нового создаваемого Load Balancer. Нас интересует Application Load Balancer, давайте нажмем на кнопку Create под этой опцией. Укроется страница для ввода свойств нового Load Balancer. Как имя давайте укажем Lab ELB. Далее в настройках сети NetOrq необходимо выбрать VPC, в нашем случае это Lab VPC. Далее после этого нам необходимо выбрать Evolubility Зоны, для этого выбираем первую Evolubility Зону US East 1A. Здесь нам необходимо выбрать PubLic Subnet 1, то же самое необходимо проделать для второй Evolubility Зоны и выбрать PubLic Subnet 2. В результате у вас должно быть выбрано два Subnet, это PubLic Subnet 1 и PubLic Subnet 2. Мы переходим к следующей секции, это Security группы. Здесь нам необходимо в выпадающем меню выбрать опцию Web Security Group. Также вы видите, что выбрана дефолтовая Security группа, она нам не нужна, поэтому необходимо нажать на кнопку X и удалить дефолтовую Security группу. В результате у нас останется одна-единственная Security группа, которая называется Web Security групп. Самая последняя настройка это Listener, то есть на какой порт, по какому протоколу будет приходить трафик. В нашем случае это HTTP 80. И также здесь нам необходимо указать как дефолтовый action, перенаправлять трафик на Lab группу. На этом мы завершили ввод всех настроек для LoadBouncer. Сейчас необходимо прокрутить самый низ страницы и нажать на кнопку Create LoadBouncer. Вы увидите сообщение о том, что LoadBouncer был успешно создан. Также вы можете нажать на кнопку View LoadBouncer для того, чтобы открыть страницу нашего LoadBouncer. Вы видите, что состояние сейчас provisioning. Через некоторое время оно поменяется на состояние ready либо success. И таким образом будет готово к работе. Нам нет необходимости ждать того момента, когда LoadBouncer будет готов, так как следующее задание оно создает следующие IT ресурсы в сервисе Autoscaling. Поэтому мы можем, не дождавшись изменения статуса, переходить к следующему заданию. Мы с вами переходим к третьему заданию. Это объемное задание. Здесь мы будем создавать Launch Configuration и Autoscaling группу. Я вам напоминаю, что Autoscaling группа это тот IT ресурс, который позволяет нам в зависимости от определенной метрики, например, нагрузка на CPU, изменять количество таргетов. В нашем случае это вычислительные мощности или EC2 инстанции. Таким образом, если повышается нагрузка на наши EC2 инстанции, то Autoscaling группа автоматически создает новый инстанц для того, чтобы нагрузку распределить. В случае, если нагрузка она минимальная, то и Autoscaling группа видит, что у нас есть избыточное количество EC2 инстанцев, то лишние EC2 инстанции, они будут автоматически отключаться. Итак, первым делом нам необходимо создать Launch Configuration. Для этого в левом навигационном меню необходимо выбрать опцию Launch Configuration. На подкроющейся странице нажать на кнопку Create Launch Configuration и начать вводить данные по этому IT ресурсу. Как имя укажем Launch Lab Config. Далее, как EMI, выберем ранее созданный нами EMI, это Web Server EMI. Как instance type выберем T3-micro. Если же эта опция недоступна, то мы можем выбрать T2-micro. В следующей секции Additional Configuration и под секцией Monitoring необходимо поставить галочку возле Enable EC2 instance detailed monitoring within CloudWatch. Это для того, чтобы Autoscaling быстрее реагировал на изменение нагрузки на наши инстанции. Следующая секция это Security группы. Здесь нам необходимо выбрать опцию Select an existing security group, то есть уже ранее созданный Security группу и в выпадающем меню выбрать Web Security Group. Двигаемся дальше. Секция Key Pair это тот приватный ключ, который позволяет нам по SSH подключаться к нашим EC2-инстанциям. Здесь нам необходимо выбрать опцию Choose an existing key pair и в выпадающем списке выбрать Key Pair в OK. Также поставить галочку о том, что вы подтверждаете привязку этого ключа к создаваемым EC2-инстанциям и нажать на кнопку Create Launch Configuration. Как только мы завершили создание Launch Configuration, мы на базе Neo можем создать Autoscaling группу. Здесь вам необходимо проверить, что вы находитесь в нужном регионе, нужный регион это Норрс-Верженье либо US East One. Нам необходимо выбрать Lab Config из списка и нажать на кнопку Actions в выпадающем меню выбрать опцию Create Autoscaling Group. Как только вы на нее нажмете, вас перенаправит на страницу создания Autoscaling группы. На этой странице в поле Name введем Lab Autoscaling Group, нажмем на кнопку Next. Далее в настройках сети нам необходимо выбрать VPC, в нашем случае это Lab VPC. Здесь если вы увидите сообщение No public IP-адрес, то можете игнорировать это сообщение. Чуть ниже, там где необходимо выбрать сабнеты, нам необходимо выбрать Private Subnet 1 и Private Subnet 2. Почему Private Subnet не Public Subnet? Это связано с тем, что ранее у нас был один-единственный EC2-инстанс, который не увеличивался в размерах, не в количестве и это был статичный инстанс. В случае увеличения нагрузки, инстанс бы не выдержал эту нагрузку и отключался бы. Сейчас мы добавляем возможность динамического изменения наших вычислительных мощностей в зависимости от нагрузки и в этом случае ресурсом, который будет принимать трафик будет Load Balancer и Autoscale группа. То есть они уже будут находиться в Public Subnet. Таким образом для большей безопасности все наши инстанции под Load Balancer мы можем расположить в Private Subnet. После того, как мы выберем Subnet необходимо нажать на кнопку Next и в открывшейся странице там, где Load Balancing Option необходимо выбрать Attach to an Existing Load Balancer. Как только мы на нее нажмем появится выпадающее меню, необходимо выбрать Lab Group. В секции Additional Settings необходимо выбрать опцию и поставить галочку Enable Group Metrics Collection within CloudWatch. Это нужно для того, чтобы метрики снимались каждую минуту, а это в свою очередь позволит быстрее реагировать нашей Autoscale группе. Нажмем на кнопку Next. Здесь нам необходимо будет выбрать размеры нашей группы. Есть три параметра, это Desired Capacity, Minimum Capacity и Maximum Capacity. Desired Capacity это то количество таргетов, которое будет создано в самом начале создания автоскейлинг группы. Minimum и Maximum Capacity соответственно это минимальное и максимальное количество таргетов, которые может создавать автоскейлинг группа. И здесь такой момент, нужно понимать какое правильное значение выставить для минимума и в частности для максимума, чтобы не израсходовать средства компании слишком много, но при этом обработать максимально возможное количество запросов от ваших пользователей. Представим, что вы указали Maximum Capacity 6 и нагрузка она внезапно увеличилась и даже 6 инстенсов не смогли обработать запросы всех ваших пользователей. В этом случае вам рекомендуется настроить дополнительные уведомления о том, что 6 инстенсов недостаточно для обработки текущей нагрузки, поэтому необходимо подключиться и вручную поменять это значение. Либо изначально получить добро от руководства о том, что при увеличении нагрузки мы в приоритет ставим обслуживание всех запросов от пользователей, при этом количество инстанцев может быть увеличено до 10-20 инстанцев. Это будет стоить дороже, но вы получите гарантию того, что все ваши пользователи будут соответствующие обработаны вашим приложением. Двигаемся дальше. В секции Scaling Policies нам необходимо выбрать Target Tracking Scaling Policy и его настроить. Как Lab Policy Name укажем Lab Scaling Policy, как Metric Type выберем Average CPU Utilization, то есть мы будем смотреть на нагрузку на наши процессоры. И как Target Value укажем 60. Когда мы указываем 60, это говорит о том, что автоскейлинг будет стремиться к тому, чтобы нагрузка на все наши таргеты была в районе 60%. Если оно увеличивается, это говорит о том, что нагрузка поднялась и нам необходимо добавить дополнительные таргеты. Если же нагрузка упала порядка 40 либо ниже процентов, то в этом случае автоскейлинг группа понимает, что текущие таргеты с легкостью справляются с нагрузкой и оно может один или несколько таргетов удалить. Мы переходим к заключительной части этого задания. Нам необходимо нажать на кнопку Next. Здесь нам необходимо указать теги. Давайте добавим один тег, как ключ укажем Name и как значение укажем LabInstance. Нажмем на кнопку Next и на этом откроется страница, где мы можем пересмотреть все введенные нами настройки. Если все указано верно, мы можем нажать в самом низу на кнопку Create Autoscaling Group. Если же вы получите ошибку Fail to Create Autoscaling Group, необходимо нажать на появившуюся кнопку Retry Failure Tasks, после чего автоскейлинг группа должна быть успешно создана. Обратите внимание, что в самом начале количество инстенсов будет равно нулю и со временем будут подниматься новые инстенсы в количестве равном Desired Capacity. То есть в итоге у нас будет два инстенса поднятых и готовых к работе. Мы переходим к четвертому заданию и здесь мы будем проверять, что связка всех IT ресурсов, созданных нами ранее, работает корректно. Самым первым делом нам необходимо перейти в левом навигационном меню, в пункт Instances. Здесь вы увидите, что появятся дополнительные два новых инстенса с названием LabInstance. Почему LabInstance? При создании автоскейлинг группы мы давали ей tag Name со значением LabInstance. Таким образом автоскейлинг группа для всех созданных от себя инстенцев передала свои теги. Здесь необходимо дождаться, что хеллс чеки для этих двух LabInstance будут пройдены. Как только это будет готово, вы можете в левом навигационном меню переходить к следующей вкладке, это Target Groups. Вы увидите, что в списке есть одна единственная target группа, это LabGroup. Давайте на нее нажмем и в вкладке Target, Targets вы увидите наши два инстенса. Здесь нам необходимо дождаться, что статус обоих инстенцев перейдет в состояние Healthy. Для этого время от времени вы можете нажимать на кнопку Refresh. Как только они перейдут в состояние Healthy, это говорит о том, что они сейчас доступны для приема запросов от LoadBalancer и, соответственно, LoadBalancer готов направлять трафик на эти таргеты. Теперь давайте посмотрим все ли нормально с точки зрения автоскейлинг группы и LoadBalancer. Нам необходимо в левом и вигационном меню нажать на LoadBalancer и в нижней части скопировать DNS Name, созданного нами LoadBalancer. Как только вы ее скопируете, вы можете ее вставить в новую вкладку в вашем веб-браузере и открыть эту страницу. Откроется подготовленная специально для этой лабораторной работы простое приложение и вы увидите какой-то ответ. Это говорит о том, что мы отправили запрос LoadBalancer, LoadBalancer направил трафик на инстанции, созданные автоскейлинг группы, инстанс обработал этот запрос и вернул какой-то ответ. Этот ответ вы видите в виде вашей страницы, на котором отображается приложение. Таким образом мы подтвердили для себя, что связка автоскейлинг группа и LoadBalancer работает корректно. Теперь мы переходим к последнему заданию, это тестирование нашего автоскейлинга. То есть нам необходимо проверить, что при увеличении нагрузки на наши инстанции, автоскейлинг автоматически добавляет новые инстанции, чтобы эту нагрузку распределить по большему количеству таргетов. Для этого нам необходимо перейти на другой сервис, это CloudWatch. Давайте в строке поиска сервисов начнем вводить CloudWatch, либо можете начать вводить Watch, она в принципе работает полнотекстовый поиск. Поэтому любое сочетание символов она будет искать в названии сервиса. Как только вы переходите на страницу сервиса CloudWatch в левом навигационном меню, вам необходимо выбрать опцию All Alarms. Вам должны быть отображены два аларма, обе они были автоматически созданы автоскейлинг группой. Эти два аларма по очереди тригерят автоскейлинг группу в зависимости от нагрузки на ваши инстанции, что в свою очередь иницирует удаление или создание новых инстанцев в автоскейлинг группе. Если же эти алармы не отображаются, обратите внимание, сидите ли вы в корректном регионе. Нам нужен регион Нож свержения либо US East 1. Если же вы сидите в правильном регионе, тем не менее эти алармы не отображаются, нам необходимо проделать некоторые действия. Эти действия необходимо производить только в временно созданном AWS аккаунте. В реальном AWS аккаунте подобных проблем не будет. Итак, если аларм не отображается, вам необходимо перейти в сервис EC2, далее в левом навигационном меню выбрать опцию Auto Scaling Groups, выбрать автоскейлинг группу, созданную ранее нами, называется Lab Auto Scaling Group. Далее, как только мы ее выберем, в нижней части экрана отобразятся несколько вкладок. Нам необходимо открыть вкладку Automatic Scaling. Необходимо там в списке выбрать Lab Scaling Policy, нажать на кнопку Actions и в выпадающем меню выбрать опцию Edit. Сбивается всплывающее окно и как target value необходимо указать 50 и нажать на кнопку Update. Это инициирует повторное создание подресурсов автоскейлинг группы и после этого обновления вы в CloudWatch сервисе можете увидеть, что эти алармы появились. Обратите внимание, что эти алармы появляются не сразу и вам необходимо как минимум 1-2 минуты подождать после чего обновить страницу. Как только наши алармы появились, нам необходимо выбрать аларм с названием Alarm High в названии. Мы видим, что ее состояние OK. Если же отображается не OK, то необходимо подождать некоторое время и нажать на кнопку Refresh. Оно должно вернуться в состояние OK. OK означает то, что нагрузка на наши инстанции на CPU меньше 60%. Как только оно увеличивается и становится больше 60%, то этот аларм из состояния OK переходит в состояние Alarm и отправляет соответствующую информацию автоскейлинг группе. Сейчас нам необходимо протестировать, что действительно автоскейлинг группа работает. Для этого нам необходимо вернуться в наше приложение, открытое ранее в веб-браузере в отдельной вкладке и нажать на кнопку Load Test. Как только вы на нее нажмете, то запустятся скрипты, которые дадут нагрузку на наши инстанции. Обратите внимание, что эту страницу закрывать нельзя. Если вы закроете эту страницу, то нагрузка прекратится. Нам необходимо подождать некоторое время, чтобы метрики передались в AWS и соответствующие ресурсы были уведомлены. Вы можете периодически нажимать на кнопку Refresh и вы увидите, что меньше чем за 5 минут, аларм Low, он должен поменять свое значение на OK, аларм High, наоборот должен поменять свое состояние на In Alarm. То есть говорит о том, что сейчас большая нагрузка на наши инстанции. Также если вы откроете соответствующий аларм, в нашем случае Alarm High, то вы увидите увеличивающуюся нагрузку на CPU в виде графика. Как только оно переходит 60% либо 50%, если мы пересоздавали наши алармы и это длится больше чем 3 минуты, то оно триггернет авто скейлинг группу, а оно в свою очередь добавит новые инстанции. Нам необходимо дождаться, пока аларм High перейдет состояние In Alarm. Как только оно туда перейдет, вы можете перейти в сервис EC2, открыть в левом навигационном меню опцию Instances и убедиться, что сейчас у нас количество инстанцев с названием Lab High больше двух, три либо четыре. Это говорит о том, что авто скейлинг верно работает и для того, чтобы распределить нагрузку, оно создало дополнительные инстанции. Как только вы в этом убедитесь, вы можете закрывать страницу с приложением для того, чтобы нагрузка вернулась в обычное состояние. Также вы можете подождать как минимум пять минут для того, чтобы количество инстанцев из трех и четырех вернулось обратно к минимальному значению два. И как только вы доберете до этого состояния, я хочу от себя предложить провести дополнительный эксперимент. Вам необходимо в сервисе EC2, в левом навигационном меню Instances, выбрать один из инстанцев с названием Lab Instance и через кнопку Actions этот инстанс terminating, то есть отключить. Как только вы ее отключите, вы увидите в Load Balancer, что один из таргетов стал unhealthy и после чего трафик перестает направляться на этот инстанс. Автоскейлинг соответственно видит, что количество инстанцев стало меньше, чем минимальное значение и иницирует создание нового инстанца. Через некоторое время вы увидите, что был создан еще один дополнительный инстанс и будет отображено два инстанца. Мы переходим к последнему заданию. Мы в самом начале создавали AMI от инстанца с названием Web Server One. Вы видите, что этот сервер нам уже не нужен, так как сейчас трафик он направляется не на этот веб-сервер, а на Load Balancer. Таким образом мы можем этот сервер удалять. Для этого необходимо в списке инстанцев выбрать Web Server One, далее нажать на кнопку Instance State и выбрать опцию Terminate Instance. Также в всплывающем меню необходимо подтвердить о том, что мы отключаем этот инстанс. На этом мы добрались до конца нашей лаборатурной работы. Я вам напоминаю, что вам необходимо корректно отключить разлагиниться из временного AWS аккаунта. Также вам необходимо в AWS Academy на странице лаборатурной работы нажать на кнопку End Lab, подтвердить и дождаться сообщения о том, что delete has been initiated, you may close this message box now, что говорит о том, что процесс удаления всех созданных ресурсов и аккаунтов он инициирован, и вы можете закрывать это окно. Вы закрываете это всплывающее окно, также можете закрывать вкладку AWS Academy, и на этом вы успешно завершили лаборатурную работу. Еще раз хотел бы вас поздравить завершением лаборатурной работы. Я очень надеюсь, что многие вопросы были отвечены, вы получили более полное представление о сервисах ELB и автоскейлинг. Если будут вопросы, то задавайте. Мы с вами увидимся на следующих наших активностях.
