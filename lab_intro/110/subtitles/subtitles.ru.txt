Добрый день, уважаемые студенты! Я рад вас всех видеть на очередной сессии обзора лабораторной работы. Тема сегодняшней лабораторной работы – это знакомство с сервисом Amazon RDS. Итак, давайте начнем. 
Для начала нам необходимо войти в AWS Academy, открыть курс Cloud Foundations и открыть список модулей. В списке модулей нам необходимо развернуть Module 8 и вы там увидите активность Lab 5 - Build a Database Server. Как только вы перейдете по ссылке, вы окажетесь на главной странице лабораторной работы. Это вы можете увидеть и убедиться в этом в верхней части страницы. По желанию вы можете стартовать лабораторную песочницу и также рекомендую вам скрыть окно Terminal, так как она нам не понадобится и оставить только README, в котором мы видим задание лабораторной работы. 
В сегодняшней лабораторной работе мы поработаем и ближе познакомимся с сервисом Amazon Relational Database Service или чаще вы его можете встретить как Amazon RDS. Что же такое Amazon RDS? Для чего он нам нужен? Давайте вкратце освежим в памяти. Это сервис, который предоставляет нам Managed Relational Database внутри AWS. Идея в том, что нам нет необходимости заниматься административной частью базы данных. Мы лишь указываем некоторые входные данные и для нас AWS предоставляет готовую базу данных, которая подходит в 99% случаев. Так как это Managed Service, мы оплачиваем только за то, что мы используем, т.е. мы подняли базу данных, поработали с ней три дня и отключили. Через месяц придет счет на оплату с учетом того времени, что мы использовали только три дня. Amazon RDS поддерживает самые популярные движки баз данных. Это Oracle, Microsoft SQL Server, PostgreSQL, MySQL и MariaDB. Также есть поддержка Amazon Aurora. Об этом сервисе мы отдельно поговорим на наших лекционных занятиях.
Цель нашей сегодняшней лабораторной работы – это запустить базу данных с высокой доступностью. Далее нам необходимо настроить доступ от нашего веб-сервера к нашей базе данных и далее поработать с готовым приложением и убедиться в том, что связь от веб-сервера к базе данных настроена корректно. Рекомендуется потратить на лабораторную работу порядка 30 минут. Если же вам требуется больше времени, вы всегда можете запросить больше минут. У вас обновится счетчик и таким образом вы успеете закончить вашу лабораторную работу. 
На следующем слайде вы видите архитектуру, которая по ходу всех наших лабораторных работ развивалась и сегодня мы добавим в эту архитектуру еще дополнительные IT ресурсы, а именно инстансы Amazon RDS. Самым первым нам необходимо добраться до AWS Management Console. Для этого необходимо нажать на кнопку Start Lab. Иницируется создание необходимых ресурсов для нашей лабораторной работы. Как только все будет готово, вы увидите сообщение "Lab Status: ready". После этого вы можете закрывать всплывшее окно и нажать на кнопку AWS. После нажатия на эту кнопку вы попадете в AWS Management Console и можете начинать работать над заданиями лабораторной работы. Самое первое, нам необходимо создать Security Group для нашего DB Instance. Так как во время создания DB Instance нам уже нужно указать Security Group, по этой причине мы сперва создаем Security Group и другие необходимые ресурсы, а после чего уже создадим RDS DB Instance. Для создания Security group необходимо в AWS Management Console начать вводить в поиске сервисов VPC и перейти на соответствующий сервис. В левом навигационном меню вы увидите пункт меню Security Groups. Давайте на него нажмем, откроется страница со всеми Security Groups на нашем AWS аккаунте. Нам необходимо создать новую Security Group, нажмем соответствующую кнопку и введем следующие значения, свойства нашей Security Group. Как Security group name укажем DB Security Group, как Description укажем Permit access from Web Security Group, т.е. это та Security Group, которая предоставляет доступ из Web Security группы. Как VPC укажем наш Lab VPC созданный специально для лабораторной работы. Прокрутим чуть ниже, будут настройки rules, есть Outbound и Inbound rules, нам необходимо добавить Inbound rules, для этого нажмем на кнопку Add rule и введем соответствующие данные для появившейся записи. Как Type укажем MySQL/Aurora (3306), это порт, по которому происходит работа с базой данных. И в поле CIDR, IP, Security Group or Prefix List мы должны указать ресурс, в нашем случае это sg, т.е. Security Group и как только вы начнете вводить sg отобразится список Security group, вам необходимо выбрать Web Security Group. Что мы проделали? У нас есть Web Security Group, в которой находятся наши Amazon EC2 инстансы, и как только мы настраиваем Security group для базы данных, у которой есть разрешение Inbound Rule, т.е. входящий трафик по порту 3306 для Web Security group, это значит любой Amazon EC2 инстанс из Web Security Group может работать с базой данных. Отлично, как только мы создали, нам необходимо запомнить новый созданный ресурс и перейти к следующему заданию. 
Здесь также нам необходимо сделать некоторые предварительные настройки, а именно создать Subnet Group для нашей базы данных. Subnet Group – это некий ресурс в рамках сервиса Amazon RDS, который объединяет несколько Subnet-ов. Для этого нам необходимо перейти в AWS Management Console и начать поиск сервиса Amazon RDS. Мы перешли в сервис Amazon RDS, в левом навигационном меню вы увидите пункт Subnet Groups. Давайте на него нажмем, чтобы посмотреть список существующих Subnet group. В открывшейся странице, вверху справа предположительно, будет кнопка, предназначенная для создания новой Subnet Group. Давайте ее нажмем и на новой странице введем следующие данные. Как Name укажем DB-Subnet-Group через тире, как Description укажем DB Subnet Group и как VPC укажем VPC, созданную для нашей лабораторной работы – Lab VPC. Далее проскроллим чуть ниже и мы увидим секцию для настройки Subnet-ов. Нам необходимо добавить Subnets. Для этого вначале мы выбираем availability zone, в нашем случае нужно выбрать два, это us-east-1a и us-east-1b. Как только мы ее выбрали, у нас появится возможность развернуть список Subnets для выбора. Нам необходимо выбрать соответственно CIDR блоки, указанные на 16 шаге. После того как вы выберете, эти Subnets отобразятся в списке выбранных Subnets. Как только мы произвели все эти настройки, необходимо нажать на кнопку Create, после чего создаться соответствующие DB Subnet Group, которые мы будем использовать при создании DB Instance. 
Мы с вами добрались до основной части лабораторной работы и здесь будем создавать Instance базы данных. Мы будем использовать функционал Multi-AZ, т.е. Multiple Availability Zones для того, чтобы сделать наш Instance базы данных более доступным и надежным. Идея в том, что мы деплоим наш Instance на двух Availability zone. Одна Availability zone будет считаться основной, вторая – второстепенной. Как только происходит какая-то поломка в основной Availability zone, то Instance во второй Availability zone меняет свою роль и становится основным. Таким образом, база данных остается доступной и прозрачно для пользователей приложений происходит переброска базы данных. Как только база данных на основной Availability zone становится снова доступной, то происходит обратное переключение. Для того чтобы это все проделать, нам необходимо открыть сервис Amazon RDS в AWS Management Console, в левом навигационном меню выбрать Databases и в открывшейся странице нажать Create Database. Если вам будет предложено перейти на новый вид страницы создания инстанса с текстом Switch to the new database creation flow, вам нужно выбрать этот вариант. Если мы прокрутим чуть ниже, самым первым нам предлагается выбрать движок базы данных. Давайте выберем MySQL. Следующая секция – это секция Settings. Нам необходимо заполнить 4 поля. Первый – это DB Instance Identifier. Давайте напишем lab-db, как Master username напишем main и для пароля и подтверждения пароля напишем lab-password. Следующая секция DB Instance class. Нам необходимо выбрать тип нашего инстанcа. Давайте выберем группу Burstable classes, т.е. это t классы и как конкретный тип выберем db.t3.micro. Это один из самых маленьких типов инстансов, которого достаточно для цели лабораторной работы. Если вам нужно более подробно посмотреть, какие семейства инстансов бывают, то вы можете об этом узнать на нашем лекционном занятии, а также посмотреть в официальной AWS документации. Следующая секция – это Storage. Нам необходимо выбрать тип жёсткого диска памяти. В нашем случае это SSD и как выделенная память выбираем 20, т.е. 20 гигабайтов будет выделено для данных в нашей базе данных. Следующая секция – это Connectivity. Здесь нам необходимо выбрать VPC, а именно Lab VPC. Двигаемся дальше. Нам необходимо теперь выбрать Security Groups. Здесь при нажатии на поле появится выпадающее меню список и необходимо выбрать DB Security Group. И будет выбрана дефолтовая Security Group, нужно будет её исключить. Следующее в настройке – это Additional configuration, необходимо эту секцию развернуть и ввести несколько изменений. В Initial database name, необходимо написать Lab и для следующих трёх полей Enable automatic backups, Enable encryption и Enable Enhanced monitoring нужно будет убрать галочку. Идея того, что мы убираем такие важные функционалы как создание бэкапов, шифрование и мониторинг, это в том, что эти изменения позволят нам создать базу данных намного быстрее. Это нормально в рамках нашей лабораторной работы. В будущем, когда вы будете создавать базу данных в Production среде, скорее всего вы будете включать все эти три опции. Поэтому этот момент необходимо отметить. Как только мы ввели все эти значения, прокрутим в самый низ и нажмём на кнопку Create Database. Вас направят на страницу со списком базы данных. Давайте выберем lab-db из списка, чтобы провалиться на страницу нашего инстанса базы данных. Создание базы данных занимает достаточно длительное время. Мы уже максимально, как могли, исключили функционал, который долго создает инстанс базы данных. Но тем не менее, нам придется в течение 4-5 минут подождать, пока база данных станет доступной. Вы увидите, что статус базы данных из состояния Modifying перейдет через некоторое время в состояние Available. В этот момент база доступна и готова к работе. Нам необходимо прокрутить чуть ниже и в секции Connectivity & security скопировать значение поля Endpoint. Оно будет выглядеть примерно следующим образом, как указано на 30 шаге. Необходимо этот Endpoint скопировать куда-нибудь локально, так как оно нам пригодится в следующей части нашей лабораторной работы. 
Мы с вами добрались до самой последней части нашей лабораторной работы и здесь мы попробуем повзаимодействовать с нашей базой данных. Для нас в рамках лабораторной работы было создано специальное простое приложение, которое позволяет работать с базами данных. Для того чтобы добраться до этого веб-приложения, нам необходимо найти EC2 Instance WebServer и скопировать его публичный IPv4-адрес. Как только мы ее скопировали, давайте перейдем по этому адресу, чтобы это приложение открыть. Как только откроется это приложение, вам будет предложено ввести IP-адрес веб-сервера. Давайте вставим то же значения, которые мы ранее скопировали и нажмем на кнопку Enter. Как только вы ее нажмете, приложение отобразит некоторую информацию о нашем Amazon EC2 инстансе. Если вы видите некоторую информацию о Amazon EC2 инстансе, это говорит о том, что приложение корректно работает и мы можем двигаться к следующей части. В следующей части необходимо в верхней части приложения нажать на ссылку RDS. Как только откроется новая страница, вам будет предложено ввести данные по вашей базе данных, а именно это Endpoint, это скопированный URL-адрес нахождения вашего инстанса базы данных. Необходимо вставить это значение. Далее как Database введем lab, как Username введем main, как Password введем lab-password, это тот пароль, который мы вводили ранее, и после чего нажмем на Submit. Как только мы это сделаем, приложение получит информацию о базе данных и откроется следующая страница – Address Book, т.е. адресная книга. Здесь вы можете взаимодействовать с базой данных, создавая информацию об адресах. Я бы хотел здесь отметить, что в обычных приложениях практика передачи информации о базе данных через UI-интерфейс не совсем является верным, здесь это было упрощено и добавлено больше интерактива. В реальной же жизни мы передаем информацию о нашей базе данных через переменные среды для наших Amazon EC2 инстансов, где они могут эти данные извлечь из кода приложения и уже напрямую работать с этой базой данных. Как только откроется следующая страница со списком адресов, первоначально этот список будет пустым, но вы можете, нажимая на кнопки и взаимодействуя с этим простым приложением, создать необходимое количество адресов, удалять, изменять и т.д. Таким образом, мы видим, что приложение работает с базой данных, база данных сохраняет эти данные и связка EC2 и RDS она корректно работает. 
На этом мы подошли к концу нашей лабораторной работы. Я напоминаю, что необходимо корректно завершить все системы, а именно разлогиниться с AWS Management Console. Также на странице с лабораторной работой в AWS Academy необходимо нажать на кнопку End Lab и дождаться сообщения "DELETE has been initiated... You may close this message box now." После того, как вы увидите это сообщение, вы можете закрывать все открытые вкладки и страницы и у вас в будущем не возникнет проблем при старте следующей лабораторной работы. На этом мы подошли к концу нашей сегодняшней сессии. Более подробно познакомились с сервисом Amazon RDS. Я очень надеюсь, что вы получили более полное представление об этом сервисе. Спасибо вам за внимание. Увидимся с вами на следующих наших активностях.