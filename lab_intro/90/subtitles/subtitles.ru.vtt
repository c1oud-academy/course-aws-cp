WEBVTT

00:00:00.000 --> 00:00:08.160
Добрый день, уважаемые студенты! Рад вас видеть на
очередной сессии «Введение в лабораторную работу».

00:00:08.160 --> 00:00:13.320
Тема сегодняшней лабораторной работы – AWS Lambda.
Итак, давайте начнем.

00:00:13.320 --> 00:00:22.200
Первое, что нам необходимо сделать — это
спозиционироваться на необходимой лабораторной

00:00:22.200 --> 00:00:30.640
работе. Открываем курс Cloud Foundations,
далее из списка модулей выбираем модуль

00:00:30.640 --> 00:00:35.428
номер 6, далее активность
AWS Lambda, нажав на которую,

00:00:35.452 --> 00:00:40.240
вы перейдете на основную
страницу лабораторной работы.

00:00:40.240 --> 00:00:46.680
Здесь вы можете по желанию запустить
лабораторную работу, нажав на кнопку Start Lab.

00:00:46.680 --> 00:00:52.499
Также для удобства я рекомендую
вам отключить окно Terminal и

00:00:52.523 --> 00:00:59.120
оставить окно ReadMe, где написано
задание для лабораторной работы.

00:00:59.120 --> 00:01:04.480
На этом слайде вы видите основное задание для
лабораторной работы – создание CloudWatch Event,

00:01:04.480 --> 00:01:10.108
который по заданному расписанию
будет триггерить нашу Lambda,

00:01:10.132 --> 00:01:15.760
а Lambda, соответственно,
будет останавливать EC2 Instance.

00:01:15.760 --> 00:01:22.200
Рекомендованное время на выполнение
данной лабораторной работы – 30 минут.

00:01:22.200 --> 00:01:31.409
Также напоминаю о том, что мы работаем в
песочнице, поэтому доступ будет предоставлен только

00:01:31.433 --> 00:01:40.440
тем сервисам и тем частям AWS сервисов,
которые предусмотрены этой лабораторной работой.

00:01:40.440 --> 00:01:48.760
Мы уже инициировали создание временного AWS
аккаунта путем нажатия на кнопку Start Lab.

00:01:48.760 --> 00:01:57.640
Скорее всего, аккаунт уже создан, и мы можем нажать
на кнопку AWS для перехода на AWS Management Console.

00:01:57.640 --> 00:02:03.037
На основной странице AWS Management
Console нам необходимо ввести

00:02:03.061 --> 00:02:08.120
в строке поиска Lambda и
перейти на соответствующий сервис.

00:02:08.120 --> 00:02:16.000
Здесь необходимо будет создать новую
функцию с помощью опции Create Function.

00:02:16.000 --> 00:02:24.880
В нашей лабораторной работе мы создаем функцию с
нуля, поэтому выберем опцию Author From Scratch.

00:02:24.880 --> 00:02:31.040
Как имя функции (Function name) введем myStopinator
и как время выполения (Runtime) Python 3.8.

00:02:31.040 --> 00:02:38.520
Далее для нас в рамках лабораторной работы
была создана специальная роль myStopinatorRole.

00:02:38.520 --> 00:02:47.040
Для этого нам необходимо выбрать Use an
existing role и соответствующую роль.

00:02:47.040 --> 00:02:52.128
На этом мы закончили вводить
все необходимые настройки

00:02:52.152 --> 00:02:57.240
для Lambda функции и
нажимаем кнопку Create Function.

00:02:57.240 --> 00:03:03.640
Следующий шаг – это создание ивента по
расписанию, который будет триггерить нашу Lambda.

00:03:03.640 --> 00:03:13.480
Для создания такого ивента необходимо на странице
с нашей функцией выбрать кнопку Add Trigger.

00:03:13.480 --> 00:03:16.329
Далее в выпадающем меню
выбираем EventBridge и указываем,

00:03:16.353 --> 00:03:19.100
что мы будем создавать
новый рул (Create a new rule).

00:03:19.100 --> 00:03:23.440
Как имя рула (Rule name) укажем
everyMinute, как тип рула (Rule type) укажем

00:03:23.440 --> 00:03:27.160
Schedule expression, т.е. этот ивент 
будет запускаться по расписанию.

00:03:27.160 --> 00:03:31.480
И уже в Schedule expression, т.е.
расписание, указываем rate (1 Minute).

00:03:31.480 --> 00:03:38.180
Это значит, что наш ивент будет запускаться 
каждую минуту, а так как таргетом

00:03:38.204 --> 00:03:44.640
является наша Lambda функция, то
этот ивент будет запускать нашу Lambda.

00:03:44.640 --> 00:03:53.320
После введения всех этих настроек, нажимаем
кнопку Add для добавления этого ивента.

00:03:53.320 --> 00:03:59.248
Следующее задание – изменение 
кода Lambda-функции. Это нужно

00:03:59.272 --> 00:04:05.200
для того, чтобы Lambda выполняла
необходимую нам новую логику.

00:04:05.200 --> 00:04:12.400
Прокрутив ниже, вы видите специальную часть страницы,
 где можно редактировать код Lambda-функции.

00:04:12.400 --> 00:04:19.560
Выбираем файл lambda-function.py. После удаляем 
весь существующий код и вставим код,

00:04:19.560 --> 00:04:29.880
предложенный в задании для лабораторной работы.
В этом уже готовом коде вы видите

00:04:29.880 --> 00:04:34.600
вторую и третью линии, где необходимо
сделать некоторые замены.

00:04:34.600 --> 00:04:41.080
Во второй линии нам необходимо вставить
системное значение AWS региона.

00:04:41.080 --> 00:04:50.720
Мы работаем в регионе North Virginia,
соответственно, системное название будет us-east-1.

00:04:50.720 --> 00:04:57.320
Вставим это значение вместо
текста &lt;REPLACE_WITH_REGION&gt;.

00:04:57.320 --> 00:05:05.120
Следующая замена – это ID EC2 инстанса,
которую Lambda-функция будет отключать.

00:05:05.120 --> 00:05:22.320
Для этого необходимо перейти в сервис EC2
и найти там инстанс с именем instance1.

00:05:22.320 --> 00:05:29.440
Помимо копирования ID EC2 инстанса необходимо
также убедиться, что этот инстанс запущен.

00:05:29.440 --> 00:05:37.440
Думаю, с поиском instance ID
проблем у вас не возникнет.

00:05:37.440 --> 00:05:44.600
Как только вы ее найдете, вам надо будет вставить
ее вместо текста &lt;REPLACE_WITH_INSTANCE_ID&gt;.

00:05:44.600 --> 00:05:50.360
Обратите внимание, что одинарные кавычки
остаются, т.к. мы работаем с текстовой информацией.

00:05:50.360 --> 00:06:03.160
Для удобства вы видите пример кода с уже
произведенными вставками и ваш код должен

00:06:03.160 --> 00:06:07.480
быть похожим на нее. После введения всех
необходимых изменений, необходимо сохранить код.

00:06:07.480 --> 00:06:15.680
Для этого в пункте меню файл выбираем опцию save.
Наш код необходимо также задеплоить.

00:06:15.680 --> 00:06:19.908
Для этого нажимаем на кнопку 
deploy. Через пару секунд

00:06:19.932 --> 00:06:24.160
вы увидите сообщение, что
наш код успешно задеплоен.

00:06:24.160 --> 00:06:29.188
Теперь, перейдя на вкладку Monitor,
на соответствующем графике можно

00:06:29.212 --> 00:06:34.240
видеть, как ежеминутно, т.е. один 
раз в минуту, запускается наш код.

00:06:34.240 --> 00:06:44.720
Чтобы убедиться, что наш код успешно
отработал, перейдем на сервис EC2.

00:06:44.720 --> 00:06:50.400
Вы видите, что наш инстанс с
именем instance1 был остановлен.

00:06:50.400 --> 00:07:04.200
Можно снова вручную запустить этот инстанс и через
некоторое время убедиться, что он снова остановился.

00:07:04.200 --> 00:07:10.160
Соответственно, это говорит о том, что
наш код Lambda успешно отрабатывает.

00:07:10.160 --> 00:07:13.120
На этом наша лабораторная работа
завершилась, я поздравляю вас!

00:07:13.120 --> 00:07:20.360
Надеюсь, вы получили некоторое
представление о сервисе AWS Lambda.

00:07:20.360 --> 00:07:25.920
Давайте правильно закроем нашу лабораторную
работу, чтобы избежать трудностей в дальнейшем.

00:07:25.920 --> 00:07:31.720
Нажмем кнопку End Lab и подтвердим
завершение лабораторной работы.

00:07:31.720 --> 00:07:39.588
Как только появится сообщение
DELETE has been initiated... you may close

00:07:39.612 --> 00:07:47.480
this message box now, вы можете
закрыть это окно и выйти с AWS Academy.

00:07:47.480 --> 00:08:01.961
На этом обзор нашей лабораторной работы 
завершен. Надеюсь, у вас не возникнет

00:08:01.985 --> 00:08:17.800
проблем во время ее выполнения. Увидимся 
на следующих наших активностях. Спасибо!