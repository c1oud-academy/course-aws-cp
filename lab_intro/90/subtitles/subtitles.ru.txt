Добрый день, уважаемые студенты! Рад вас видеть на очередной сессии «Введение в лабораторную работу». Тема сегодняшней лабораторной работы – AWS Lambda. Итак, давайте начнем.
 Первое, что нам необходимо сделать — это спозиционироваться на необходимой лабораторной работе. Открываем курс Cloud Foundations, далее из списка модулей выбираем модуль номер 6, далее активность AWS Lambda, нажав на которую, вы перейдете на основную страницу лабораторной работы. Здесь вы можете по желанию запустить лабораторную работу, нажав на кнопку Start Lab. Также для удобства я рекомендую вам отключить окно Terminal и оставить окно ReadMe, где написано задание для лабораторной работы. 
На этом слайде вы видите основное задание для лабораторной работы – создание CloudWatch Event, который по заданному расписанию будет триггерить нашу Lambda, а Lambda, соответственно, будет останавливать EC2 Instance. Рекомендованное время на выполнение данной лабораторной работы – 30 минут. Также напоминаю о том, что мы работаем в песочнице, поэтому доступ будет предоставлен только тем сервисам и тем частям AWS сервисов, которые предусмотрены этой лабораторной работой. 
Мы уже инициировали создание временного AWS аккаунта путем нажатия на кнопку Start Lab. Скорее всего, аккаунт уже создан, и мы можем нажать на кнопку AWS для перехода на AWS Management Console. На основной странице AWS Management Console нам необходимо ввести в строке поиска Lambda и перейти на соответствующий сервис. Здесь необходимо будет создать новую функцию с помощью опции Create Function. В нашей лабораторной работе мы создаем функцию с нуля, поэтому выберем опцию Author From Scratch. Как имя функции (Function name) введем myStopinator и как время выполения (Runtime) Python 3.8. Далее для нас в рамках лабораторной работы была создана специальная роль myStopinatorRole. Для этого нам необходимо выбрать Use an existing role и соответствующую роль. На этом мы закончили вводить все необходимые настройки для Lambda функции и нажимаем кнопку Create Function.
Следующий шаг – это создание ивента по расписанию, который будет триггерить нашу Lambda. Для создания такого ивента необходимо на странице с нашей функцией выбрать кнопку Add Trigger. Далее в выпадающем меню выбираем EventBridge и указываем, что мы будем создавать новый рул (Create a new rule). Как имя рула (Rule name) укажем everyMinute, как тип рула (Rule type) укажем Schedule expression, т.е. этот ивент будет запускаться по расписанию. И уже в Schedule expression, т.е. расписание, указываем rate (1 Minute). Это значит, что наш ивент будет запускаться каждую минуту, а так как таргетом является наша Lambda функция, то этот ивент будет запускать нашу Lambda. После введения всех этих настроек, нажимаем кнопку Add для добавления этого ивента.
Следующее задание – изменение кода Lambda-функции. Это нужно для того, чтобы Lambda выполняла необходимую нам новую логику. Прокрутив чуть ниже, вы видите специальную часть страницы, где можно редактировать код Lambda-функции. Выбираем файл lambda-function.py. После удаляем весь существующий код и вставим код, предложенный в задании для лабораторной работы. В этом уже готовом коде вы видите вторую и третью линии, где необходимо сделать некоторые замены. Во второй линии нам необходимо вставить системное значение AWS региона. Мы работаем в регионе North Virginia, соответственно, системное название будет us-east-1. Вставим это значение вместо текста <REPLACE_WITH_REGION>. Следующая замена – это ID EC2-инстанса, которую Lambda-функция будет отключать. Для этого необходимо перейти в сервис EC2 и найти там инстанс с именем instance1. Помимо копирования ID EC2-инстанса необходимо также убедиться, что этот инстанс запущен. Думаю, с поиском instance ID проблем у вас не возникнет. Как только вы ее найдете, вам надо будет вставить ее вместо текста <REPLACE_WITH_INSTANCE_ID>. Обратите внимание, что одинарные кавычки остаются, т.к. мы работаем с текстовой информацией. Для удобства вы видите пример кода с уже произведенными вставками и ваш код должен быть похожим на нее. 
После введения всех необходимых изменений, необходимо сохранить наш код. Для этого в пункте меню файл выбираем опцию save. Наш код необходимо также задеплоить. Для этого нажимаем на кнопку deploy. Через пару секунд вы увидите сообщение, что наш код успешно задеплоен. Теперь, перейдя на вкладку Monitor, на соответствующем графике можно видеть, как ежеминутно, т.е. один раз в минуту, запускается наш код. Чтобы убедиться, что наш код успешно отработал, перейдем на сервис EC2. Вы видите, что наш инстанс с именем instance1 был остановлен. 
Можно снова вручную запустить этот инстанс и через некоторое время убедиться, что он снова остановился. Соответственно, это говорит о том, что наш код Lambda успешно отрабатывает. 
На этом наша лабораторная работа завершилась, я поздравляю вас! Надеюсь, вы получили некоторое представление о сервисе AWS Lambda. Давайте правильно закроем нашу лабораторную работу, чтобы избежать трудностей в дальнейшем. Нажмем кнопку End Lab и подтвердим завершение лабораторной работы. Как только появится сообщение DELETE has been initiated... you may close this message box now, вы можете закрыть это окно и выйти с AWS Academy. 
На этом обзор нашей лабораторной работы завершен. Надеюсь, у вас не возникнет проблем во время ее выполнения. Увидимся на следующих наших активностях. Спасибо!

