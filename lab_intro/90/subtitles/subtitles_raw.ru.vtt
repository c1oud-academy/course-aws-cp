WEBVTT

00:00:00.000 --> 00:00:03.040
Добрый день, уважаемые студенты!

00:00:03.040 --> 00:00:06.320
Я рад вас всех видеть на очередной сессии «Введение

00:00:06.320 --> 00:00:08.160
в лабораторную работу».

00:00:08.160 --> 00:00:12.320
Тема сегодняшней лабораторной работы AWS Lambda.

00:00:12.320 --> 00:00:13.320
Итак, давайте начнем.

00:00:13.320 --> 00:00:19.840
Самым первым нам необходимо спозиционироваться на

00:00:19.840 --> 00:00:22.200
необходимой лабораторной работе.

00:00:22.200 --> 00:00:26.240
Для этого откроем курс Cloud Foundations.

00:00:26.240 --> 00:00:30.640
Далее откроем из списка модулей, шестой модуль,

00:00:30.640 --> 00:00:33.840
и вы увидите активность AWS Lambda.

00:00:33.840 --> 00:00:36.420
Давайте на нее нажмем, чтобы перейти на основную

00:00:36.420 --> 00:00:40.240
страницу лабораторной работы.

00:00:40.240 --> 00:00:43.560
Здесь вы можете по желанию запустить лабораторную

00:00:43.560 --> 00:00:46.680
работу, нажав на кнопку Start Lab.

00:00:46.680 --> 00:00:50.920
Также я рекомендую вам отключить окно терминала

00:00:50.920 --> 00:00:53.440
и оставить только окно Redmi для того, чтобы удобно

00:00:53.440 --> 00:00:59.120
можно было читать задание лабораторной работы.

00:00:59.120 --> 00:01:02.840
На этом слайде вы можете видеть основное задание

00:01:02.840 --> 00:01:04.480
лабораторной работы.

00:01:04.480 --> 00:01:08.960
Нам необходимо создать CloudWatch Event, который по расписанию

00:01:08.960 --> 00:01:11.960
будет триггерить нашу Lambda, а Lambda, соответственно,

00:01:11.960 --> 00:01:15.760
будет останавливать EC2 Instance.

00:01:15.760 --> 00:01:20.320
Всего на выполнение этой лабораторной работы рекомендуется

00:01:20.320 --> 00:01:22.200
выделить 30 минут.

00:01:22.200 --> 00:01:26.320
Также напоминаю о том, что мы работаем в песочнице,

00:01:26.320 --> 00:01:31.560
поэтому доступ будет предоставлен только к тем сервисам и

00:01:31.560 --> 00:01:36.920
тем частям AWS сервисов, которые предусмотрены лабораторной

00:01:36.920 --> 00:01:40.440
работой.

00:01:40.440 --> 00:01:45.120
Мы уже инициировали создание временного AWS аккаунта

00:01:45.120 --> 00:01:48.760
путем нажатия на кнопку Start Lab.

00:01:48.760 --> 00:01:51.680
Скорее всего, аккаунт уже создан, и мы можем нажать

00:01:51.680 --> 00:01:57.640
на кнопку AWS для перехода на AWS Management Console.

00:01:57.640 --> 00:02:02.000
На основной странице AWS Management Console нам необходимо ввести

00:02:02.000 --> 00:02:08.120
в строке поиска Lambda и перейти на соответствующий сервис.

00:02:08.120 --> 00:02:11.480
Здесь необходимо будет создать новую функцию,

00:02:11.480 --> 00:02:16.000
для этого выберем опцию Create Function.

00:02:16.000 --> 00:02:20.080
В этой лабораторной работе мы будем создавать функцию

00:02:20.080 --> 00:02:24.880
с нуля, поэтому выберем опцию After From Scratch.

00:02:24.880 --> 00:02:28.480
Какими функциями давайте введем My Stopinator и как runtime

00:02:28.480 --> 00:02:31.040
Python 3.8.

00:02:31.040 --> 00:02:35.840
Далее для нас в рамках лабораторной работы была создана специальная

00:02:35.840 --> 00:02:38.520
роль My Stopinator Role.

00:02:38.520 --> 00:02:42.320
Давайте мы ее выберем, нам необходимо выбрать Use an Existing

00:02:42.320 --> 00:02:47.040
Role и соответствующую роль.

00:02:47.040 --> 00:02:49.920
На этом мы закончили вводить все необходимые настройки

00:02:49.920 --> 00:02:57.240
для Lambda функции, давайте нажмем на кнопку Create Function.

00:02:57.240 --> 00:03:01.160
Следующий шаг это создание ивента по расписанию, который

00:03:01.160 --> 00:03:03.640
будет триггерить нашу Lambda.

00:03:03.640 --> 00:03:06.920
Для того чтобы создать этот ивент, нам необходимо

00:03:06.920 --> 00:03:13.480
на странице с нашей функцией выбрать кнопку Add Trigger.

00:03:13.480 --> 00:03:16.580
Далее в выпадающем меню мы выбираем EventBridge и говорим

00:03:16.580 --> 00:03:19.100
о том, что мы будем создавать новый рул.

00:03:19.100 --> 00:03:23.440
Как имя укажем EveryMinute, как role type укажем ScheduleExpression,

00:03:23.440 --> 00:03:27.160
то есть это тот ивент, который будет запускаться по расписанию.

00:03:27.160 --> 00:03:30.480
И как ScheduleExpression, то есть расписание, укажем Rate в

00:03:30.480 --> 00:03:31.480
скобках OneMinute.

00:03:31.480 --> 00:03:34.000
Это говорит о том, что наш ивент будет запускаться

00:03:34.000 --> 00:03:37.920
каждую минуту, а так как таргетом является наша

00:03:37.920 --> 00:03:44.640
Lambda функция, то этот ивент будет запускать нашу Lambda.

00:03:44.640 --> 00:03:47.620
После того как мы ввели все эти настройки, давайте

00:03:47.620 --> 00:03:53.320
нажмем на кнопку Add, чтобы добавить этот ивент.

00:03:53.320 --> 00:03:56.440
Следующее задание это изменение кода Lambda функции.

00:03:56.440 --> 00:04:01.720
Это нужно нам для того, чтобы Lambda выполняла необходимую

00:04:01.720 --> 00:04:05.200
нам новую логику.

00:04:05.200 --> 00:04:08.000
Давайте прокрутим чуть ниже и вы увидите специальную

00:04:08.000 --> 00:04:11.400
часть страницы, где можно редактировать код Lambda

00:04:11.400 --> 00:04:12.400
функции.

00:04:12.400 --> 00:04:15.920
Нам необходимо выбрать файл lambda-function.py.

00:04:15.920 --> 00:04:19.560
Давайте удалим весь существующий код и вставим код, предложенный

00:04:19.560 --> 00:04:21.280
в задании лабораторной работы.

00:04:21.280 --> 00:04:29.880
В предложенном уже готовом коде для нас вы видите есть

00:04:29.880 --> 00:04:33.560
вторая и третья линии, где необходимо сделать некоторые

00:04:33.560 --> 00:04:34.600
замены.

00:04:34.600 --> 00:04:39.200
Во второй линии нам необходимо ставить значение, системное

00:04:39.200 --> 00:04:41.080
значение AWS региона.

00:04:41.080 --> 00:04:46.480
Так как мы с вами работаем в регионе Норс-Вирджиния,

00:04:46.480 --> 00:04:50.720
то системное название будет us-east1.

00:04:50.720 --> 00:04:57.320
Давайте вставим это значение вместо текста replace with region.

00:04:57.320 --> 00:05:04.120
Следующая замена это id isytool-instance, который Lambda функция будет

00:05:04.120 --> 00:05:05.120
отключать.

00:05:05.120 --> 00:05:11.080
Для того, чтобы ее найти, нам необходимо перейти в

00:05:11.080 --> 00:05:22.320
сервис isytool и там найти instance с именем instance1.

00:05:22.320 --> 00:05:27.040
Помимо копирования id isytool-instance необходимо также убедиться,

00:05:27.040 --> 00:05:29.440
что этот instance запущен.

00:05:29.440 --> 00:05:36.440
Я думаю у вас не возникнет проблем с поиском instance

00:05:36.440 --> 00:05:37.440
id.

00:05:37.440 --> 00:05:39.760
Как только вы ее найдете, вам необходимо вставить

00:05:39.760 --> 00:05:44.600
ее вместо текста replace with instance id.

00:05:44.600 --> 00:05:48.240
Обратите внимание, что одинарные кавычки они остаются,

00:05:48.240 --> 00:05:50.360
так как мы работаем с текстовой информацией.

00:05:50.360 --> 00:05:57.120
Также для удобства вы видите пример кода уже с произведенными

00:05:57.120 --> 00:06:03.160
вставками и ваш код должен быть похожим на нее.

00:06:03.160 --> 00:06:05.640
Как только мы видели все необходимые изменения,

00:06:05.640 --> 00:06:07.480
нам необходимо сохранить наш код.

00:06:07.480 --> 00:06:12.600
Для этого в пункте меню файл выберем опцию save.

00:06:12.600 --> 00:06:15.680
Также нам необходимо наш код задеплойить.

00:06:15.680 --> 00:06:18.320
Для этого нажмем на кнопку deploy.

00:06:18.320 --> 00:06:21.640
Через пару секунд вы увидите сообщение, что наш код успешно

00:06:21.640 --> 00:06:24.160
задеплоен.

00:06:24.160 --> 00:06:27.920
Теперь если вы перейдете на вкладку монитор, вы можете

00:06:27.920 --> 00:06:32.560
увидеть на соответствующем графике, что ежеминутно

00:06:32.560 --> 00:06:34.240
наш код запускается.

00:06:34.240 --> 00:06:41.760
Чтобы убедиться, что наш код успешно отработал, давайте

00:06:41.760 --> 00:06:44.720
перейдем на сервис EC2.

00:06:44.720 --> 00:06:50.400
Вы видите, что наш instance с именем instance1 был остановлен.

00:06:50.400 --> 00:06:58.800
Вы можете также вручную запустить еще раз этот

00:06:58.800 --> 00:07:02.680
instance и через некоторое время вы увидите, что он

00:07:02.680 --> 00:07:04.200
еще раз остановился.

00:07:04.200 --> 00:07:10.160
Это говорит о том, что наш код лямбы успешно отрабатывает.

00:07:10.160 --> 00:07:12.120
На этом мы добрались до конца нашей лаборатурной

00:07:12.120 --> 00:07:13.120
работы.

00:07:13.120 --> 00:07:14.120
Я вас поздравляю.

00:07:14.120 --> 00:07:17.520
Надеюсь, вы получили некоторое представление о сервисе

00:07:17.520 --> 00:07:20.360
AWS Lambda.

00:07:20.360 --> 00:07:23.280
Нам необходимо правильно завершить нашу лаборатурную

00:07:23.280 --> 00:07:25.920
работу, чтобы не было проблем в будущем.

00:07:25.920 --> 00:07:29.400
Для этого необходимо нажать на кнопку end lab и подтверждить

00:07:29.400 --> 00:07:31.720
завершение лаборатурной работы.

00:07:31.720 --> 00:07:36.480
Как только вы увидите сообщение delete has been initiated, you may

00:07:36.480 --> 00:07:41.440
close this message box now, то вы можете закрывать это окно,

00:07:41.440 --> 00:07:47.480
а также выходить с AWS Academy.

00:07:47.480 --> 00:07:51.360
На этом мы завершаем обзор лаборатурной работы.

00:07:51.360 --> 00:07:56.040
Очень надеюсь, что у вас не возникнет проблем во

00:07:56.040 --> 00:07:57.920
время ее выполнения.

00:07:57.920 --> 00:08:17.800
Увидимся с вами на следующих наших активностях.