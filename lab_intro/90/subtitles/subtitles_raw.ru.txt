 Добрый день, уважаемые студенты! Я рад вас всех видеть на очередной сессии «Введение в лабораторную работу». Тема сегодняшней лабораторной работы AWS Lambda. Итак, давайте начнем. Самым первым нам необходимо спозиционироваться на необходимой лабораторной работе. Для этого откроем курс Cloud Foundations. Далее откроем из списка модулей, шестой модуль, и вы увидите активность AWS Lambda. Давайте на нее нажмем, чтобы перейти на основную страницу лабораторной работы. Здесь вы можете по желанию запустить лабораторную работу, нажав на кнопку Start Lab. Также я рекомендую вам отключить окно терминала и оставить только окно Redmi для того, чтобы удобно можно было читать задание лабораторной работы. На этом слайде вы можете видеть основное задание лабораторной работы. Нам необходимо создать CloudWatch Event, который по расписанию будет триггерить нашу Lambda, а Lambda, соответственно, будет останавливать EC2 Instance. Всего на выполнение этой лабораторной работы рекомендуется выделить 30 минут. Также напоминаю о том, что мы работаем в песочнице, поэтому доступ будет предоставлен только к тем сервисам и тем частям AWS сервисов, которые предусмотрены лабораторной работой. Мы уже инициировали создание временного AWS аккаунта путем нажатия на кнопку Start Lab. Скорее всего, аккаунт уже создан, и мы можем нажать на кнопку AWS для перехода на AWS Management Console. На основной странице AWS Management Console нам необходимо ввести в строке поиска Lambda и перейти на соответствующий сервис. Здесь необходимо будет создать новую функцию, для этого выберем опцию Create Function. В этой лабораторной работе мы будем создавать функцию с нуля, поэтому выберем опцию After From Scratch. Какими функциями давайте введем My Stopinator и как runtime Python 3.8. Далее для нас в рамках лабораторной работы была создана специальная роль My Stopinator Role. Давайте мы ее выберем, нам необходимо выбрать Use an Existing Role и соответствующую роль. На этом мы закончили вводить все необходимые настройки для Lambda функции, давайте нажмем на кнопку Create Function. Следующий шаг это создание ивента по расписанию, который будет триггерить нашу Lambda. Для того чтобы создать этот ивент, нам необходимо на странице с нашей функцией выбрать кнопку Add Trigger. Далее в выпадающем меню мы выбираем EventBridge и говорим о том, что мы будем создавать новый рул. Как имя укажем EveryMinute, как role type укажем ScheduleExpression, то есть это тот ивент, который будет запускаться по расписанию. И как ScheduleExpression, то есть расписание, укажем Rate в скобках OneMinute. Это говорит о том, что наш ивент будет запускаться каждую минуту, а так как таргетом является наша Lambda функция, то этот ивент будет запускать нашу Lambda. После того как мы ввели все эти настройки, давайте нажмем на кнопку Add, чтобы добавить этот ивент. Следующее задание это изменение кода Lambda функции. Это нужно нам для того, чтобы Lambda выполняла необходимую нам новую логику. Давайте прокрутим чуть ниже и вы увидите специальную часть страницы, где можно редактировать код Lambda функции. Нам необходимо выбрать файл lambda-function.py. Давайте удалим весь существующий код и вставим код, предложенный в задании лабораторной работы. В предложенном уже готовом коде для нас вы видите есть вторая и третья линии, где необходимо сделать некоторые замены. Во второй линии нам необходимо ставить значение, системное значение AWS региона. Так как мы с вами работаем в регионе Норс-Вирджиния, то системное название будет us-east1. Давайте вставим это значение вместо текста replace with region. Следующая замена это id isytool-instance, который Lambda функция будет отключать. Для того, чтобы ее найти, нам необходимо перейти в сервис isytool и там найти instance с именем instance1. Помимо копирования id isytool-instance необходимо также убедиться, что этот instance запущен. Я думаю у вас не возникнет проблем с поиском instance id. Как только вы ее найдете, вам необходимо вставить ее вместо текста replace with instance id. Обратите внимание, что одинарные кавычки они остаются, так как мы работаем с текстовой информацией. Также для удобства вы видите пример кода уже с произведенными вставками и ваш код должен быть похожим на нее. Как только мы видели все необходимые изменения, нам необходимо сохранить наш код. Для этого в пункте меню файл выберем опцию save. Также нам необходимо наш код задеплойить. Для этого нажмем на кнопку deploy. Через пару секунд вы увидите сообщение, что наш код успешно задеплоен. Теперь если вы перейдете на вкладку монитор, вы можете увидеть на соответствующем графике, что ежеминутно наш код запускается. Чтобы убедиться, что наш код успешно отработал, давайте перейдем на сервис EC2. Вы видите, что наш instance с именем instance1 был остановлен. Вы можете также вручную запустить еще раз этот instance и через некоторое время вы увидите, что он еще раз остановился. Это говорит о том, что наш код лямбы успешно отрабатывает. На этом мы добрались до конца нашей лаборатурной работы. Я вас поздравляю. Надеюсь, вы получили некоторое представление о сервисе AWS Lambda. Нам необходимо правильно завершить нашу лаборатурную работу, чтобы не было проблем в будущем. Для этого необходимо нажать на кнопку end lab и подтверждить завершение лаборатурной работы. Как только вы увидите сообщение delete has been initiated, you may close this message box now, то вы можете закрывать это окно, а также выходить с AWS Academy. На этом мы завершаем обзор лаборатурной работы. Очень надеюсь, что у вас не возникнет проблем во время ее выполнения. Увидимся с вами на следующих наших активностях.
