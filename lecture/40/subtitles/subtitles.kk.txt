Қайырлы күн, құрметті студенттер! Мен сіздерді көргеніме қуаныштымын. Біз үшінші модульге жетіп қалдық және бұл модульде AWS-тің әлемдік инфрақұрылымы туралы сөйлесеміз. Бүгінгі дәріс алдыңғыларына қарағанда әлдеқайда қысқа және тек екі бөлімнен ғана тұрады. Бірінші бөлімде біз AWS-тің әлемдік инфрақұрылымы туралы айтамыз, ал екінші бөлігінде сервис топтарын және оған кіретін кейбір сервистерді мұқият қарастырамыз. AWS Certified Cloud Practitioner емтиханын тапсыру барысында сол сервистерді кездестіре аласыз.
AWS әлемдік инфрақұрылымы дегеніміз не? Бұл – бүкіл дүние бойынша 22 түрлі аймақтарда қол жетімді, арнайы әзірленген, икемді, масштабталатын, қауіпсіз және сенімді бұлтты есептеу ортасы. Аймақтар туралы айтқанда, біз белгілі бір географиялық орынды айтамыз. Әрбір AWS аймағы – дербес жұмыс істей алатын AWS әлемдік инфрақұрылымының оқшауланған бөлігі. Аймақ ішінде Availability zone (қол жетімділік зоналары) деп аталатын екі немесе одан да көп қол жетімділік зоналар болады. Әр қол жетімділік зонада бірнеше дата-центр болуы мүмкін. Бұл әр аймақтың жоғары деңгейдегі қол жетімділігін қамтамасыз етеді. Егер сіздің бизнесіңіз бірнеше аймақта, бірнеше жерде болуы керек болса, онда сіздің деректеріңізді және инфрақұрылымыңызды басқа аймаққа тасымалдау, репликациялау немесе көшіру және клондау міндеттері сіздің клиенттеріңіз алдындағы жауапкершілігіңіз болып табылады. Бұл процесті жеңілдетуге көмектесетін арнайы құралдар бар. Сондай-ақ, бүкіл әлем бойынша шашыраңқы стандартты аймақтардан басқа, үш түрлі бөлек аймақ бар екенін атап өткен жөн. Алғашқы екеуі – Қытайда орналасқан аймақтар. Олар негізгі әлемдік инфрақұрылымнан, сондай-ақ жаңа мүмкіндіктердің пайда болуынан бөлектелген, және тұтастай алғанда, осы аймақтағы AWS дамуы біршама артта қалған. Осылайша, өткен жылы немесе биылғы жылы пайда болған барлық жаңа өнімдер Қытайда орналасқан аймақтарда қолданылуы екіталай. Сондықтан, егер сіздің бизнесіңіз сізден Қытайда инфрақұрылым салуды талап етсе, сіз осы тармақтарды ескеруіңіз керек. Сондай-ақ, атап өту керек тағы бір аймақ – бұл AWS GovCloud, бұл АҚШ-тағы үкіметтік жобаларға арналған арнайы оқшауланған аймақ, яғни үкіметтік болып табылатын және бұлтта орналастырылған барлық сайттар осы аймақта орналастырылған.
Сізде бір сұрақ туындауы мүмкін: «Бүкіл әлем бойынша көптеген аймақтар бар және қайсысын таңдау керек?» Жиі қарастырылатын ең бірінші мәселе – бұл Data governance (деректерді басқару) және  Legal requirements (заңды талаптар), яғни ресми құжаттар, IT-архитектуралардың құрылысын реттейтін сіздің еліңіздегі талаптар, деректерді өңдеу, жеке деректерді өңдеу, сондай-ақ сақтау, трансшекаралық тасымалдау және AWS бұлтында IТ-инфрақұрылымын құру кезінде қандай да бір мағынада қосымша қиындықтар тудыруы мүмкін мәселелер. Сондықтан сіз үлкен жобаны бастаған кезде, сіздің еліңіздегі осы ресми құжаттарды қарап, оны ескеруге тырысыңыз. AWS-те де клиенттерге, яғни бізге көмектесетін кейбір іс-шаралар бар. Ол Whitepapers (ақ қағаз) деп аталатын, белгілі бір тақырыпқа байланысты әр түрлі көлемдегі құжат шығарады. Оның мақсаты AWS бұлтында кейбір шешімдерді дұрыс, тиімді, қауіпсіз және оңтайлы түрде қалай құруға болатындығы туралы AWS-тің өзінен бірнеше ұсыныстар беру болып табылады. Осы Whitepapers құжатының кейбір бөлігі осы мәселелерді, әрбір жеке ел үшін Data governance және Legal requirements туралы сұрақтарды қамтуға арналған. Сондай-ақ, бұл тізім үнемі жаңартылып отырады және сіздің еліңіз үшін осындай құжат болса, оны міндетті түрде оқып шығуыңыз керек.
Назар аударатын келесі аспект – сіздің тұтынушыларыңызға жақындығыңыз. Егер клиенттер көбінесе белгілі бір аймақта орналасса, осы жерге жақын аймақты таңдау өте ұтымды. Сондай-ақ, сіздің орналасқан жеріңізден екі түрлі аймаққа дейінгі географиялық бірдей қашықтық, Latency деп аталатын, контентті жеткізу жылдамдығы бірдей болады дегенді білдірмейтінін ескеру қажет. Сондықтан, дұрыс таңдау үшін сіз және сіздің клиенттеріңіз арасындағы орташа Latency-ді дәл өлшеу үшін ең жақын аймақтарды таңдап, бірнеше сынақ жүргізуіңіз керек. Мұны автоматты түрде жасауға мүмкіндік беретін арнайы веб-сайттар бар, яғни сіз «Старт» батырмасын басасыз және осы батырманы басқаннан кейін әртүрлі AWS аймақтарына ping жүргізіледі және бұл ping мәндері сақталады. Осылайша, осы жылдамдық сынағынан өткен бірнеше кезеңнен кейін сіз өзіңіздің сайтыңыздың орналасқан жерінен, яғни сіздің жергілікті Интернет-провайдеріңізден барлық AWS аймақтарына дейінгі ping-тің орташа мәнін аласыз.
Келесі мәселе – сіз таңдағыңыз келетін нақты аймақтағы сервистердің қол жетімділігі. Мысалы, Солтүстік Вирджиния (North Virginia) аймағы бар, ол барлық жаңа өнімдерді бірінші болып сынайды және стандартты аймақтар арасында негізгі аймақ болып саналады, яғни біраз уақыттан кейін, жаңарту сол жерде пайда болған соң, ол барлық басқа аймақтарға әртүрлі жылдамдықпен тасымалданады, осылайша жаңа сервис немесе ескі сервистің жаңа функционалы басқа аймақтарда да қол жетімді болады. Сондықтан, белгілі бір сервис немесе белгілі бір сервистің функционалы сіз үшін, сіздің бизнесіңіз үшін өте маңызды болса, сіз таңдаған аймақта осы мүмкіндіктің немесе сервистің қол жетімділігін міндетті түрде тексеруіңіз керек. Жалпы алғанда, егер сіз бен барлық аймақтар арасында Latency тұрғысынан абсолютті айырмашылық болмаса, бұл, мысалы, сіздің клиенттеріңізге жақындықты қажет етпейтін оқшауланған есептеулер болуы мүмкін, бұл қаншалықты жылдам берілетіндігі маңызды емес, ең бастысы соңына дейін жетсе, бұл жағдайда барлық жаңартулар пайда болатын негізгі North Virginia аймағын таңдау ұсынылады. North Virginia-ны таңдағанда бұлтпен жұмыс істеуді жеңілдететін кейбір нюанстар бар, бірақ бұл AWS Certified Cloud Practitioner емтиханында келмейтін Advanced тақырыптар, және біз осы мәселелерді келесі курстарда қарастырамыз.
Қарастырылатын соңғы тармақ – баға, яғни, бүкіл жер шарында, тіпті барлық жерде бәрі бірдей болса да, бәрі стандартталған, дата-центрлер бірдей, өмір сүру деңгейі әртүрлі жерлерде әр түрлі және сәйкесінше бұл сервистердің бағасына әсер етеді. Белгілі бір аймақта орналасқан сервис басқа аймаққа қарағанда қымбатырақ немесе арзан болуы мүмкін. Бағаға әсер етуі мүмкін тағы бір мәселе – ұзақ уақыт бойы жұмыс істеп келе жатқан ескі аймақтар өте танымал, бұл оларға дата-центрлердің санын көбейтуге және кеңейтуге мүмкіндік береді, осылайша олар масштабталудан пайда көреді. Осындай ірі аймақтарда көбінесе жаңа немесе танымал емес аймақтармен салыстырғанда бағалар төмен. Сондықтан, бұл мәселені ескеру қажет, бағаларды салыстырған кезде, мұның бәрін көресіз.
Әрбір AWS аймағындағы келесі тіркеме – Availability zones (қол жетімділік зоналары). Availability zone – дербес жұмыс істей алатын және AWS бұлтындағы барлық сервистер мен IT ресурстарына жоғары қол жетімділікті қамтамасыз ететін бірнеше дата-центрлер арасындағы оқшауланған, өзін-өзі қамтамасыз ететін желі болып табылады. Сіз AWS құрылымдары арасындағы кейбір физикалық қашықтықты есте сақтауыңыз керек. Жақындарынан бастайық. Біз бұрын Availability zone ішінде бірнеше дата-центрлер бар екенін айттық. Әрбір дата-центр жүздеген мың серверлерден тұратын ғимарат болып табылады. Бір Availability zone ішінде  әрбір дата-центр басқа дата-центрден ондаған шақырым қашықтықта орналасқан.  Availability zone-лардың арасындағы қашықтық 100 км-ге дейін, ал аймақтар арасындағы қашықтық бірнеше жүздеген шақырым. Бұл сұрақтар емтиханда кездеседі. Сізден белгілі бір сандарды білу талап етілмейді, бірақ сіз сандардың ретін есте сақтауыңыз керек. Яғни, дата-центрлер арасында ондаған шақырым, егер 100 км-ге дейін болса, Availability zones арасындағы қашықтық, егер 100 км-ден асса, бұл аймақтар (регион) арасындағы қашықтық. Бұл әдетте бірнеше жүздеген шақырым. Біз атау (naming) туралы айтқанда, әр аймақтың өзінің кодтық атауы болады. Мысал ретінде, бірінші Батыс Еуропа аймағын алайық eu-west-1, сіз оны слайдтан көре аласыз және осы аймақтағы availability zone-ның атауы соңында a, b, c, d және т.б. әріптің қосылуымен ерекшеленеді. Мұнда «Тапқырлықтың барлығы – қарапайым» санатынан бір қызық мәселе бар. Клиенттер, яғни біз, саналы түрде бірінші availability zone-да өзіміздің ресурстарымызды таңдауға және құруға тырысамыз, яғни «а», бірінші болуға деген ұмтылыс. Бірнеше availability zones арасында біркелкі таралу үшін әркім «а» таңдай алатындай етіп, қулық жасалынған. Қазір сіз видеоны тоқтатып, қандай қулық екенін ойланып көріңіз. Қалай шешілгенін түсінген шығарсыз деп ойламын. Сізге айтып берейін. Шын мәнінде, бәрі оңай . Бұл қалай жасалады? AWS аккаунтын тіркеген кезде, бір аймақта, мысалы, үш availability zones болсын. Оларды бірінші қаладағы «а» бірінші availability zone, екінші қаладағы «b» екінші availability zone және үшінші қаладағы «c» үшінші availability zone деп атайық. Тіркелу кезінде, мысалы, мен тіркелдім және availability zones нақты availability zones-тармен кездейсоқ араласады. Мысалы, «а» бірінші availability zone бірінші қаламен, «b» екінші availability zone екінші қалаға, ал үшінші availability zone «c» үшінші қалаға байланысты болуы мүмкін. Басқа біреу тіркелгенде, бұл тәртіп кездейсоқ өзгереді, сонда олар үшін «а» бірінші availability zone үшінші қаладағы хостингті білдіреді. Бірінші қала екінші ретте және екінші қала үшінші ретте болсын. Осылайша, барлығы availability zone «а» таңдай алады және таңдайды, бірақ іс жүзінде олар кездейсоқ біркелкі таратылады және барлық availability zone-лардағы жүктеме шамамен бірдей болады. Әрі қарай жүрейік.
Біз сіздермен дата-центрлер туралы айта бастадық. Мен айтатын тағы бірнеше мәселе – дата-центрлерге қатысты бұлтты провайдер ретінде AWS мақсаты – толық физикалық қауіпсіздікті қамтамасыз ету және оны қамтамасыз етуді жеңілдету үшін, тіпті дата-центрлердің орналасқан жері де айтылмайды. Сіз тек қана дата-центрлердің орналасқан елін біле аласыз және осылайша бұл дата-центрлерді физикалық анықталудан және басып кіру әрекеттерінен жақсы қорғауға көмектеседі. Тағы бір айта кететін жайт, соңғы үлгідегі технологиялар, соңғы үлгідегі құрал-жабдықтар мен техникалық құралдар пайдаланылады. Ол басынан арнайы артығымен әзірленеді, бұл Redundant дизайн деп аталады. Артық архитектура дегеніміз не? Мысалы, сізге дұрыс жұмыс істеу үшін үш сервер қажет дейік, бірақ сіз бес серверді құрып, конфигурациялайсыз. Осылайша, егер сізде серверлердің біреуі бұзылса, осы серверлердің өңдейтін жұмысына мүлдем әсер етпейтініне кепілдік бересіз. Сіз біреуін қауіпсіз өшіресіз, дұрыс жұмыс істеуге үшеуі  жеткілікті, ал сізде әлі де төрт сервер бар. Осылайша, жұмыс тоқтамайды және бұл сервердің істен шыққанын байқаған кезде, ол трафик балансынан алынып, жаңасына ауыстырылады. Жабдықты сатып алу, әдетте, түпнұсқа өндірушілерден жүзеге асырылады. Көбінесе біз белгілі бір бренді бар өнімдерді, желілік жабдықты сатып аламыз, біз бренд үшін артық төлейміз. AWS бірдей физикалық жабдыққа бірнеше баламалары бар өндірушілерге тікелей қол жеткізе алады. Сондықтан олар бізге жоғары қолжетімділікті қамтамасыз ету үшін қажет жабдықты ең тиімді жолмен ала алады.
Біз дата-центрдің не екенін айтып өттік, енді Points of Presence, яғни қатысу нүктелері ұғымы туралы сөйлесейік. Басқаша айтқанда, бұл – пайдаланушыларға ең жақын серверлерге қашықтықты азайту және пайдаланушылардың контентке жету уақытын қысқарту үшін басқа пайдаланушылар жиі сұраған контентті, ол медиа контент, мәтіндік ақпарат, веб-сайттар және т.б. болсын, кэштауға мүмкіндік беретін технология. AWS бұлтында өзінің CDN (Content Delivery Network) бар, бұл Amazon CloudFront деп аталатын контентті жеткізу серверлерінің желісі, ол бүкіл әлем бойынша таратылады және Latency-ді азайту үшін қолданылады. Сондай-ақ, Amazon Route 53 деп аталатын сервисте домендік атауларды тіркей аласыз. Әрі қарай, контентті жеткізумен жұмыс істейтін барлық сервистер Amazon CloudFront-пен байланысты, Amazon CloudFront дегеніміз не? Бұл Edge Location деп аталатын серверлер желісі – бұл серверлер деректерге жылдам қол жеткізуді қамтамасыз ету үшін белгілі бір пайдаланушылар тобында орналасқан. Бүкіл әлем бойынша, осы видеоны жазу барысында олар әлемнің 30 еліндегі 69 ірі қалаларда орналасқан. Бұл деректерге жоғары жылдамдықты және үздіксіз қол жеткізуді қамтамасыз етеді.
Edge Locations-тан басқа, Regional Edge Cache бар. Айырмашылығы – Edge Locations пайдаланушыларға жақын және ең жиі сұралған объектілерді, файлдарды және т.б. сақтайды. Regional Edge Cache туралы айтатын болсақ, ол бірнеше Edge Locations-тан келетін деректерді біріктіреді және «клиенттерден сәл алысырақ» деп айтуға болады және Edge Locations-қа сәйкес келмейтін танымал емес деректер сол жерде сақталады.
Біз AWS-тің әлемдік инфрақұрылымы және оның компоненттері туралы жеткілікті әңгімелестік, және негізгі идея – осы инфрақұрылымның арқасында сіз өзіңіздің IT-инфрақұрылымыңызды бұлтта құра аласыз, ол икемді, масштабтауға оңай, ақауларға төзімді және жоғары деңгейде қол жетімді. Енді сессиямыздың бірінші бөлімінің негізгі мәселелерін қарастырайық. Біз Availibality zones (қол жетімділік зоналары), аймақтардың және дата-центрлердің не екенін білдік. Содан кейін біз CDN-ге көштік (Content Delivery Network), Edge Locations, Regional Edge Cache, және тұтастай алғанда, бұл  – AWS Certified Cloud Practitioner  емтиханын сәтті тапсыру үшін AWS әлемдік инфрақұрылымы туралы толық ақпарат.
Бүгінгі сессиямыздың екінші бөлігіне көшейік. Енді, сервистердің негізгі топтары мен осы топтардың ішіндегі сервистерді қарастырамыз. Алдыңғы дәрісте айтылғандай, AWS-тің әлемдік құрылымы бірнеше деңгейден тұрады. Ең негізгі деңгей – бұл біздің аймақтар, Availability zones, біздің дата-центрлер орналасқан Edge Locations-ті қамтитын инфрақұрылым. Келесі деңгейге көтерілсек, Foundational сервистердің жиынтығы, іргелі сервистер, атап айтқанда, бұл Compute – есептеу қуаты, Amazon EC2 сервисі; келесі Networking – AWS VPC сервисінен бастап, желілермен байланысты барлық нәрсе; және Storage – сақтау, негізгі сервистер Amazon S3, Amazon EBS (Elastic Block Storage) және т.б. Келесі деңгей – Platform services, бұл негізгі сервистерге негізделген және өз сервистерін Platform as a Service немесе Software as a Service моделі бойынша ұсынатын барлық сервистер.  Соңғы деңгей – бұл әзірлеушілер жазатын қосымшалар, содан кейін олар біздің клиенттерге жеткізіледі.
Бұл слайд AWS ішіндегі сервистердің 23 түрлі санатын тізімдейді, бұл тізім үнемі өзгеріп, толықтырылып отырады. Біздің курста біз нақты AWS емтиханында келуі мүмкін келесі 7-еуін қарастырамыз. Осылайша, әр топтың ішінде емтиханға толық дайындалу үшін біз негізгі сервистерге толығырақ тоқталамыз.
     Келесі слайдтарда біз әр 7 сервис топтарының әрқайсысындағы сервистерді мұқият қарастырамыз және бұл сервистің не үшін қажет екенін қысқаша түсіндіреміз. Одан кейінгі слайдтарда біз сервистердің әрқайсысына егжей-тегжейлі тоқталамыз, мұнда біз не істейтінімізге, нені білдіретініне кең шолу жасаймыз, егер сіз конспект жазып жатсаңыз, қазір жазудың уақыты келді.
Бірінші топ – сақтау сервистерінің тобы. Біздің курстың барысында және AWS Certified Cloud Practitioner емтиханы үшін біз 4 сервисті білуіміз керек: Amazon Simple Storage Service (Amazon S3) – объектілік сақтау сервисі. Келесі – Amazon EC2 виртуалды серверлермен бірге қолданылатын Amazon Elastic Block Store (Amazon EBS) сервисі. Неге екенін түсіндіріп өтейін. Мен әрқайсысының сипаттамасын беру үшін екінші сервиске арнайы өтіп кеттім, енді мен сақтаудың әр түрін салыстырып, сипаттаймын. Файлдарды объект ретінде сақтаған кезде, яғни объектілік сақтау, файл бірлік ретінде қабылданады және оның өлшеміне қарамастан, ол өзгермеуі керек, яғни біз оны бір рет жүктедік және онда бір нәрсе өзгерген кезде, файлдың көп бөлігі ме немесе тек бір байт қана ма, маңызды емес, бұл файл басқа болып табылады. Ол жаңартылды және объектілік сақтаудағы файлды жаңарту үшін бүкіл файлды қайтадан жүктеу керек. Ал Amazon EBS бұл блокты сақтау, яғни компьютердегі немесе ноутбуктегі қатты дискілер сияқты, файлдарды немесе деректерді блоктап сақтау сияқты. Үлкен файлды елестетіп көрейік, мұндай үлкен файлды сақтау үшін, ондаған немесе тіпті жүздеген мың блоктарды қолданасыз. Осылайша, блоктап сақтаудың арқасында үлкен файлда қандай да бір кішкене өзгеріс болса да, тек осы блокты ғана тауып, оны жаңарту жеткілікті, сонымен файл жаңа нұсқада қол жетімді болады. Енді сұрақ. Видеоны тоқтатып, ойланып көріңіз. Операциялық жүйе әдетте қандай сақтау түріне орнатылады және неліктен? Біз көптеген қызықты және дұрыс жауаптар естідік деп үміттенемін. Шын мәнінде, жауабы сұралғанға дейін де айтылып кетті. Операциялық жүйе блокты сақтау түріне орнатылған. Неге? Операциялық жүйемен жұмыс істегенде, ол миллиондаған шағын файлдардан тұруы мүмкін және бұл файлдарды бір блокта сақтау, әрбір шағын файлдың жазбасын объектілік сақтау типінде сақтаудан әлдеқайда оңай. Осылайша, сақтау аз орын алады және бізге осындай шағын файлдардың есебі қажет емес. Тағы бір мәселе, бізде операциялық жүйе бар, ол үнемі өзгеріп отыратын тірі организм секілді, кейбір файлдар үнемі жаңартылып отырады және объект ретінде айтатын болсақ, операциялық жүйемізде әртүрлі файлдар бар. Бірдеңе жаңартылса, жаңа нұсқаға қол жеткізу үшін осы файлды толығымен объектілік жадына жүктеп салу керек. Ал егер файл өлшемі үлкен болса және тек кішкене бөлігі ғана жаңартылған болса, онда біз оны жүктеуге көп уақыт жұмсаймыз, сондықтан операциялық жүйені объектілік жадта емес, блоктық сақтауда орнату ұтымды.
Әрі қарай жүрейік. Келесі сервис – Amazon EFS (Amazon Elastic File System), ол да блоктық сақтау, файлдық жүйе. Amazon EBS-тен айырмашылығы – оны бірнеше Amazon EC2 инстанстарына бөлуге және бөлісуге болады. Amazon EFS операциялық жүйе ретінде жұмыс істей алмайды, операциялық жүйені орнату және сіздің серверіңіз іске қосылу үшін, оған Amazon EBS байланыстыру керек, іске қосылғаннан кейін басқа диск орнатылады, ол Amazon EFS болуы мүмкін. Осылайша, мысалы, егер сізде бірнеше есептеулер жасайтын тапсырма болса және сізге бірнеше инстанстардың арасында деректерді тасымалдау үшін орын қажет болса, Amazon EFS өте жақсы және дұрыс нұсқа болуы мүмкін.
Біз қарастыратын төртінші сервис – бұл сервис ішіндегі сервис, яғни бізде Amazon S3 сервисі бар, оның ішінде Amazon S3 Glacier деп аталатын объектілік сақтауға арналған сервис бар және оның жанында тағы бір сервис– Amazon S3 Glacier Archive бар. Айырмашылығы мен мағынасы қандай? Amazon S3 туралы айтатын болсақ, ол бірнеше сақтау опцияларынан тұрады, біз олар туралы келесі сервистерде айтатын боламыз және S3 сақтау класстары мен Glacier және Glacier Archive класстарының түбегейлі айырмашылығы – объект ретінде сақталған файлдар бір рет жазылады және олардың қайта сұралуы өте сирек жағдай. Мысалы, бір рет жазылған және пайдаланылмайтын деректер бар, бірақ ол белгілі бір нормативтік құжаттар бойынша сақталуы тиіс. Мысалы, банктегі барлық қаржылық операциялар және олардың журналдары бес жыл бойы сақталуы керек. Бес жылдан кейін осы транзакция туралы барлық ақпаратты жоюға болады. Мұндай деректер өте кең таралған, сондықтан оларды сақтау үшін арнайы сервис құрылды. Біз оларды ешқашан сұрамайтынымыз анық болса, мұндай деректерді сол жерге жүктеп, өте арзан бағаға сақтауға болады. Glacier мен Glacier Archive айырмашылығы – Glacier Archive одан да арзан. Онда біз оларды сұрамайтынымызды 99% сенімділікпен білетін деректер ғана сақталады. Ал егер біз оларды сұрайтын болсақ, сұралған деректер үшін төлем өте қымбат болады. Сақтау классын таңдағанда, Glacier немесе S3 классының кез-келгені болсын, әр сақтау классының құны мен сипаттамаларын ескеруіңіз керек.
Келесі сервистер тобы – Compute сервистер тобы. Мұнда көптеген сервистер қарастырылады. Олардың әрқайсысына қысқаша тоқталайық. Ең бірінші және негізгісі – Amazon EC2 (Elastic Compute Cloud). Мен жалпы қарапайым терминдерде сөйлеуге тырысамын, сондықтан сіз негізгі ойды түсініп, қажет болған жағдайда күрделі сипаттамаларды, күрделі анықтамаларды құжаттамада өз бетіңізше таба аласыз. Құжаттамамен қалай жұмыс істеу керектігін білесіз. Amazon Elastic Compute Cloud – бұл таза виртуалды сервер қажет болғанда, оны сұрастырып, содан кейін конфигурациялауға және бір нәрсе жасауға болады.
Әрі қарай, бұл Amazon EC2 Auto Scaling, бұл Amazon EC2-дің үстінен бапталатын сервис, бұған дейін мен автоматты масштабтау деген ұғым бар екенін және инфрақұрылымды жүктемеге байланысты ол ұлғаятын немесе азаятын етіп конфигурациялауға болатындығын айттым. Мұны жасайтын сервис – Amazon EC2 Auto Scaling. Сіз қажет бір топ құрасыз, оған Amazon EC2 инстанстарын байланыстырасыз, әртүрлі параметрлерді тіркейсіз, содан кейін белгілі бір шарттарға байланысты бұл серверлер автоматты түрде өшіріледі немесе қажет болған жағдайда толықтырылады. Шарттар әр түрлі болуы мүмкін, соның ішінде сіздің серверлеріңіздегі жүктеме де кіреді.
Келесі сервис – Amazon Elastic Container Service (Amazon ECS). Бұл контейнерлі оркестрлеу сервисі, яғни біз бұл сервисті Docker-контейнерлерімен жұмыс істеу керек болған кезде ғана қолданамыз, ал оған байланысты Amazon ECR (Elastic Container Registry) сервисі – Docker-контейнерінің кескінінің қандай да бір түрін және сақталатын немесе сақтауға болатын орын табу керек болғанда қолданылатын сервис.
Әрі қарай, AWS Elastic Beanstalk сервисі, оны AWS-тің өзі белсенді түрде дамытып жатыр, бірақ көптеген бақылау мен еркіндікті қамтамасыз ететін бірқатар басқа сервистер бар болғандықтан, AWS Elastic Beanstalk қазіргі уақытта қосымшаларды құру кезінде ең танымал сервистердің қатарында емес. Идеясы қандай: егер сізде патчтар немесе Microsoft IIS қосымшалары болса, сіз қосымшалар жазасыз, код жазасыз, кодты архивқа саласыз, Beanstalk үшін конфигурациялық файлдармен толықтырасыз, онда сіз өзіңізге қажетті параметрлерді сипаттайсыз және бұл архивті AWS Elastic Beanstalk сервисіне жібересіз. Міне, содан кейін сізде бұл қосымша, код автоматты түрде архивтен босатылады, құрастырылады, орналастырылады, яғни Production Instance, Production Environment-те орнатылады, ол дереу қол жетімді болады. Бұл жүйені басқаруда онша күшті емес әзірлеушілердің өмірін жеңілдететін сервис түрі және бұл сервис өте пайдалы болады.
Менің келесі ұнататын сервисім – AWS Lambda, FaaS моделінің өкілі, бұл келесі сервис ұсыну моделі, Function as a Service. Идеясы қандай? Сіз әзірлеуші екеніңізді елестетіп көріңіз, бір Python бағдарламалау тілін ғана білесіз, бірақ сіз одан да үлкен проект жасағыңыз келеді, қандай да бір стартап. Бұл жағдайда сіз жүйелік әкімшілік тақырыбынан тағы тереңірек ақпарат білуіңіз керек. Кейбір мамандар қорқады, басқалары қаламайды, кейбіреулер оны зерттеуге уақыт жоқ дейді. AWS Lambda сервисі көмегімен бәрі тез, бәрі жеңіл, сіз кодты жазасыз, ол осы функцияның ішінде жұмыс істей береді. Болды. Сізге функция қажет кезде, ол шақырылады және оның астындағы барлық нәрсе, осы кодтың орындалуына толығымен қызмет етеді, сізге еш қатысы жоқ. Осылайша, Python нұсқаларын жаңарту, операциялық жүйенің жаңартулары, қауіпсіздік патчтары, виртуалды сервердің өзін басқару сізді айналып өтеді. Сіз тек код жазасыз және тек гигабайт-секундтар үшін ғана төлейсіз. Ол бағалау және төлеу үшін AWS Lambda әзірлеуін санауға көмектеседі. AWS Lambda белгілі бір уақыт ішінде, ең көбі 15 минут жұмыс істейді. AWS Lambda өзі белгілі бір жедел жады бар шағын виртуалды ортада жұмыс істейді. Мысалы, егер ол 2 секундтан кейін қосылса, оған 512 МБ бөлінеді, егер сіз оны көбейтсеңіз, бұл AWS Lambda белгілі бір кодты орындау үшін 1 ГБ/сек жұмсаған деген сөз. Pricing парақшасындағы бағаларға байланысты 1 ГБ/сек үшін ақы алынады. AWS Lambda – Serverless тәсілінің ең негізгі сервситерінің бірі, яғни серверсіз архитектура. Мүмкін болған кезде біз бұл туралы көп сөйлесетін боламыз, мен қызықты сәттермен, кейбір жұмыс тәжірибеммен бөлісемін. Біз бұл сервиске әлі де ораламыз.
Келесі қызмет – Amazon Elastic Kubernetes Service (Amazon EKS). Біз алдында Docker-образдармен жұмыс істеу үшін Amazon ECS сервисі туралы айтқан болатынбыз. Docker-образ — бұл жеке технология, бірақ Docker-образдардың осыншама санын басқара білу және оларды дұрыс оркестрлеу – бұл Kubernetes немесе K8S деп аталатын басқа бір технология. AWS осы Kubernetes үшін Kubernetes as a service қамтамасыз ету үшін бөлек арнайы Amazon EKS сервисін жасады. Сізге оны конфигурациялаудың қажеті жоқ, оның әкімшілігін түсіну, серверді көтеру және бөлу қажет емес. Сіз өзіңіздің Kubernetes-тің жұмыс істеуі үшін белгілі бір параметрлерді шығарасыз, Docker-образдарыңызға жолдарын және қосымша жұмыс параметрлерін көрсетесіз. Ол іске қосылып, осы сервистің бағасына сәйкес төленеді. Шындығында, сіз жұмыстың үлкен әкімшілік бөлігінен құтыласыз. Әрине, мүмкіндігінше баптау-оңтайландыру көптеген тапсырмаларға сәйкес келеді. Егер сізде осындай тапсырма болса, бұл тамаша нұсқа. Егер сізде белгілі бір нақты тапсырма болса, сізге супероптимизация, кейбір дәлірек баптау параметрлері қажет болса, онда Kubernetes-ті виртуалды серверлерде өзіңіз орналастыру керек болады, бірақ бұл қосымша дағдыларды, білімді және маманды қажет етеді және осы сервиске Pay-as-you-go-pricing бойынша төлеуден гөрі қымбатқа түсуі мүмкін.
Соңғы сервис – Amazon Fargate – Amazon ECS үшін есептеу қозғалтқышы, ол сізге контейнерлерді іске қосуға және басқаруға көмектеседі. Kubernetes сияқты, бірақ Kubernetes-сіз, контейнерлерді оркестрлеу сервисі. Ол сондай-ақ Software as a service моделі бойынша ұсынылады, яғни дайын, тек белгілі бір параметрлерді енгізу жеткілікті және сіз іске қосыласыз. Сонымен, біз compute-сервистер тобымен аяқтадық. Әрі қарай жүрейік.
Келесі сервистер тобы – бұл деректер базасымен байланысты сервистер. Деректер базасын әзірлеуші ретінде біраз тәжірибем болғандықтан, AWS туралы біліміммен қатар, AWS сервистерін дерекқорлар тұрғысынан жақсы түсінуге көмектесетін құрылымдық дерекқор білімдерімен бөлісемін деп үміттенемін. Бұл сізді жұмысқа орналасу кезінде басқа студенттермен және басқа кандидаттармен салыстырғанда жоғары деңгейге қояды және қажет болады деп үміттенемін.
Бірінші сервис – Amazon Relational Database Service, сервис ретінде берілетін реляционды деректер базасы. Postgres, MySQL, Oracle, Microsoft Server және т.б. сияқты дерекқорды басқару жүйесінің қозғалтқыштарының өте үлкен тізімінен таңдауға болатын ең танымал сервистердің бірі.
Келесі – Amazon Aurora деген сервис. Amazon RDS және Amazon Aurora әрқашан қатар жүреді, өйткені Amazon Aurora дәл Amazon RDS сияқты сервис, бірақ AWS арнайы командасы MySQL және Postgres болып табылатын ең танымал open source СУБД-ны алып, оны соншалықты оңтайландырды, енгізді және біріктірді, сондықтан сол ақшаға бұл Amazon RDS арқылы таза MySQL немесе Postgres жеткізуден гөрі әлдеқайда көп функционалдылық пен мүмкіндіктер береді. Бірақ мұнда да «бір құмалақ бір қарын майды шірітеді». Amazon Aurora – бұл таза AWS шешімі, сондықтан сіз оны қолдана бастағаннан кейін, MySQL және Postgres әбден өзгертілгенін ескере отырып, SQL сұрауларын жазу кезінде синтаксис кейбір жерлерде өте өзгеше болуы мүмкін. Бұл дегеніміз, сіз бір өндірушіге, қосымшаға немесе бағдарламалық жасақтамаға байланған кезде Vendor lock-in-ге жетесіз. Осының бәрі сіздің қажеттіліктеріңіз бен мүмкіндіктеріңізге, сондай-ақ болашаққа жоспарларыңызға байланысты, сіз AWS-ты қолданасызба ба, әлде бір бұлт провайдерінен екіншісіне өтуіңіз керек болып қалуы мүмкін бе. Егер мұндай тәуекелдер болса, сіз Amazon RDS-пен жалғастыруыңыз керек, өйткені сіз басында қосылғанда, бүкіл бағдарлама Amazon Aurora-мен біріктіріледі, өйткені Amazon Aurora сияқты функционалдылық басқа бұлтты провайдерде болмайды, тіпті егер онда өзінің Amazon Aurora болса да, ол мүлдем басқаша болады. Тіпті Amazon Aurora-дан MySQL қозғалтқышы бар Aurora-мен байланыстырылмаған басқа таза MySQL-ге қарапайым ауыстыру айтарлықтай күш, ресурстар мен уақытты қажет етеді. Бұл оған тұрарлық емес болуы мүмкін. Сондықтан сіз бірнеше рет ойлануыңыз керек. Сіз белгілі бір себептермен AWS-пен жалғастыруды шешсеңіз, Amazon Aurora-ны таңдап, онымен қозғала аласыз және ол ұсынатын функционалды тиімді пайдалана ала аласыз. Егер олай болмаса, сіз кез-келген уақытта AWS-пен жұмыс істеу шарттары қанағаттанбайтын сәтте бұлтты провайдеріңізді ауыстыра аласыз. Мұндай көші-қон оңай емес, бірақ таза MySQL, Postgres немесе кез-келген басқа СУБД орнатылған Amazon RDS-тен басқа ұқсас бұлтты провайдердің сервисіне көшу салыстырмалы түрде оңай және аз шығымды.
Келесі – Amazon Redshift. Алғашқы екі сервис туралы айтқанда, Amazon RDS және Amazon Aurora, біз транзакциялық реляционды деректер базасын айтамыз. Бұл дегеніміз, біз транзакциялармен жұмыс істейміз, біз көп жазамыз, бірақ көп нәрсені оқи алмаймыз. CRUD операцияларын жасаймыз, аббревиатура СУБД негізгі операциялардың атауларының бірінші әріптерінен тұрады: C — create (жасау), R — read (оқу), U — update (жаңарту), D — delete (жою). Бұл дерекқордағы деректердің өмірлік циклінің сипаттамасы. CRUD операциялары бұл операциялардың әрқайсысы жеңіл және бір қарапайым нәрсе жасайды дегенді білдіреді:  жазу, оқу, жаңарту, жою. Қосымша жұмыс істеуі үшін дерекқорлармен қатынастың транзакциялық түрлері жеткілікті. Мысалы, пайдаланушылар тізімі қажет болғанда, қажетті кестеден қажетті деректерді оқитын қарапайым таңдауды жасайсыз. Бірнеше кестелер бар күрделі сұрау болуы мүмкін, бірақ көп емес. Мұнда жылдамдыққа баса назар аударылады. Amazon Redshift туралы айтқанда, бұл транзакциялық емес, аналитикалық деректер базасы, ал айырмашылығы – сіз транзакцияларды жазбайсыз, оны бір рет жазасыз және бірнеше рет оқисыз. Оқу өте көп, өйткені ол аналитикалық дерекқор болғандықтан, деректер әр түрлі айналады және сіз өзіңіздің бизнесіңіз үшін пайдалы ақпарат алу және қандай да бір шешім қабылдау үшін осы деректердің қандай да бір түрін алуға тырысасыз. Тағы бір айырмашылық, біз Amazon RDS немесе Amazon Aurora-мен жұмыс істегенде, бұл базалар әдетте қосымшаларда қолданылады, ал пайдаланушылар қосымшаларды қолданады. Amazon Redshift туралы айтатын болсақ, әдетте үлкен көлемдегі ақпарат жүктеледі, деректер алдын-ала дайындалады, деректерді әртүрлі тәсілдермен өңдеу үшін ең күрделі сұраулар дайындалады. Олар әдетте топ-менеджмент арқылы қолдан шақырылады, міндетті түрде техникалық маман немесе IT-директор болуы шарт емес, ол бас директор немесе басқа біреу болуы мүмкін, ол батырманы басады және үлкен көлемдегі деректердің сығындысын көреді, ол терабайттар мен петабайттарға жетуі мүмкін, және осы сығынды негізінде, кейбір маңызды бизнес-шешімдер қабылданады.
Әрі қарай жүрейік. Төртінші сервис, өте маңызды сервис – Amazon DynamoDB. Amazon RDS немесе Amazon Aurora туралы айтқанда, біз SQL дерекқорларын айтамыз. Соңғы жылдары NoSQL дерекқорлары танымал болды, ал Amazon DynamoDB – NoSQL дерекқорларының ең жарқын өкілдерінің бірі. Мен сізге олардың қалай ерекшеленетінін және дерекқордың осы екі түрі арасындағы бәсекелестік тарихын сәл кейінірек айтамын. Енді кейбір қосымшаларда реляционды деректер базасында кестелердің өте күрделі құрылымы болуы қажет емес, олар өзара байланысты болуы керек, біртұтас және реляционды дерекқорлармен жұмыс істеу кезінде белгілі бір шектеулер бар екенін есте сақтау маңызды. Amazon DynamoDB – бұл бір-бірімен байланысы жоқ, құрылымдалмаған деректер жиынтығы және оны қалай шығару керектігін біле отырып, сіз бұл деректерді қолданушыға беру үшін қосымшаның мақсаттары үшін сұрайсыз. Сонымен, соңғы жылдары танымал қосымшалардың кейбір ерекшеліктеріне байланысты Amazon DynamoDB сонымен қатар өте қызықты шешім болып табылады және кейбір артықшылықтарды ұсынады. Бірақ бұл сіздің бизнес талаптарына байланысты. Айта кету керек, Amazon DynamoDB, сонымен қатар, serverless қосымша болып табылады. Сізге ештеңе қолдаудың қажеті жоқ, ол сервис ретінде беріледі. Ол көбінесе AWS Lambda және келесі слайдтарда қарастыратын бірқатар басқа сервистермен бірге қолданылады.
Әрі қарай, келесі сервистер тобы – желі және контентті жеткізу болып табылады. Мұнда ұзақ уақыт тоқтамаймыз, өйткені біз алдыңғы дәрістерде негізгі сервистерді кездестірдік. Қысқаша атап өтейік. Біріншісі – Amazon VPC, оның идеясы – сіздің корпоративті немесе университеттік желіңізде орналастырылған жергілікті желі бар делік. Ол арқылы әртүрлі операциялар өтеді. Мысалы, сіз кітаптар мен оқулықтардың электронды нұсқалары орналасқан ортақ папканы жүктей аласыз, студенттерге арналған әртүрлі қосымшалардың таратылуын ақысыз ұйымдастыруға болады және т.б., қосыласыз және сіз олармен жергілікті желі арқылы жұмыс жасай бересіз. Қауіпсіздік мақсатында университеттер Интернетке қосылуды өшіруі мүмкін, айталық, шекаралық тексерулер немесе емтихандар кезінде, бірақ әлі де емтихандар қабылдау, бағаларды көру және т.б. үшін сіздің ішкі университеттік веб-сайтынан кіруге болады, егер сіздің сайтыңыз, сіз сол жергілікті желіде болсаңыз, сіз оған тікелей қол жеткізе аласыз. Егер ол бөлек орналастырылса, сіздің университетіңіздің сайты «ақ тізімге» енгізіледі және сәйкесінше тек сол сайтқа ғана кіре аласыз, бірақ басқа сайттарға емес.
Келесі – Elastic Load Balancing, бұл біздің инфрақұрылымды «жандандыруға» және Amazon EC2 Auto Scaling-пен бірге автоматты масштабтауға көмектесетін сервистердің екіншісі. Екеуі де Amazon EC2-мен бірге қолданылады, яғни біз виртуалды серверді көтереміз, содан кейін топтағы серверлердің санын қажетті уақытта көбейтетін немесе азайтатын Auto Scaling, содан кейін Elastic Load Balancing, ол жүктемені топта теңестіреді (таратады).
Amazon CloudFront сервисі – біз бұл туралы айтқан болатынбыз, Content Delivery Network, Amazon контентті жеткізу желісі.
AWS Transit Gateway, мұнда мен сәл алдына өтейін, AWS Direct Connect және AWS VPN, бұл сервистер жергілікті дата-центрді бұлтты инфрақұрылымға қосуға көмектеседі. Олар өздерінің артықшылықтарымен және кемшіліктерімен ерекшеленеді және сіздің бизнес талаптарыңызға байланысты сіз бір опцияны таңдай аласыз. Айта кету керек, бірнеше қолайлы нұсқалар болуы мүмкін, сондықтан жергілікті дата-центр немесе жергілікті оффлайн кеңсе мен бұлтты инфрақұрылым арасында резервтік байланыс арнасы болуы үшін олардың ең қолайлы екеуі әдейі таңдалады. Бұл жиі қолданылады.
Соңғы сервис – Amazon Route 53, ол туралы айтқан болатынбыз, бұл domain name system (DNS), домендерді сатып алуға немесе жалға алуға болатын домендік атау жүйесі.
Келесі сервистер тобы – қауіпсіздікпен байланысты сервистер. Біз олардың көпшілігін дәрістерде өткен болатынбыз. Қысқаша айта кетейін. AWS IAM және AWS Organizations сервистері  сізге таныс. Amazon Cognito – бұл AWS-те қосымша немесе веб-сайт ішіндегі пайдаланушыларға тіркелуге немесе кіруге мүмкіндік беретін сервис. Amazon Cognito, Amazon Aurora сияқты, басқа жерде кездеспейтін AWS сервисі, ол Vendor lock. Сондықтан, пайдаланушылардың жазбаларын сақтау үшін тек AWS қана емес, сонымен қатар басқа бұлттық провайдерлерді де қолдайтын әртүрлі қосымшалар бар, ал егер сіз Vendor lock туралы алаңдасаңыз, сол нұсқаларды да қарастырған жөн.
Келесі сервис – AWS Artifact. Бұл сервис оқу режимінде қол жетімді құжаттар жиынтығы болып табылады. AWS талаптарға сәйкестік сертификаттарын және қауіпсіздік сертификаттарын алу үшін бақылаушы органдардан түрлі тексерулерден өтеді. AWS бұлтында өз инфрақұрылымын орналастыратын компания ретінде сіздің еліңіздегі мемлекеттік органдар сұраған кезде, сізге кейбір растайтын құжаттар қажет болуы мүмкін. Егер сіз осындай сұранысты алсаңыз, барлық қажетті құжаттарды алу үшін қайда бару керектігін білесіз.
Келесі өте маңызды сервис – AWS Key Management Service, кейбір мамандарға бұл сервисті түсіну қиынға соғуы мүмкін. Бірақ сіз оны зерттеп, талдағаннан кейін, сіз AWS-тегі ең қиын тақырыптардың бірін меңгересіз. Біз бұл сервиске әлі қайта ораламыз. Бұл бізге шифрлау кілттерін құруға және басқаруға, яғни сақтау кезінде де, тасымалдау кезінде де бүкіл деректер ағынын шифрлауға мүмкіндік береді. Ол көптеген AWS сервистерімен біріктірілген және AWS IAM-мен бірге негізгі сервистердің бірі болып табылады.
Қауіпсіздікке байланысты соңғы қызмет – AWS Shield, SaaS сервисі, яғни managed сервис. Тұрақты сервистерден айырмашылығы – ол SaaS моделі бойынша ұсынылады, бұл сізге негізгі өнімге мүмкіндігінше назар аударуға мүмкіндік береді және бұл сервисті AWS өзі басқарады. Сізге белгілі бір басқару параметрлерін беру жеткілікті. AWS Shield DDoS-шабуылдарынан қорғауға көмектеседі. DDoS не екенін интернеттен біле аласыз.
Келесі сервистер тобы туралы осыған дейін айтқан болатынбыз, сондықтан оларға мүмкіндігінше азырақ назар аударамыз. Бұл бұлттағы шығындарыңызды басқаратын сервистер – AWS Cost and Usage Report, AWS Budgets және AWS Cost Explorer.  Біз оларды алдыңғы дәрісте егжей-тегжейлі талқыладық, сондықтан біз алға қарай жылжимыз.
Келесі соңғы сервистер тобы – AWS management and governance, яғни бұлтта жұмыс істеуді жеңілдететін басқару сервистері. Біріншісі – AWS Management Console, оны белгілі бір дәрежеде сервис деп те атауға болады, бұл басқа сервистерге жетуге мүмкіндік береді. Ол туралы жеке Демо болады, онда біз оны толығырақ талқылаймыз. AWS Config – сізде әртүрлі ресурстары бар IТ-инфрақұрылымы бар, олардың әрқайсысы белгілі бір дәрежеде өзгеруі мүмкін және AWS Config осы өзгерістерді бақылауға және әрекет етуге мүмкіндік береді. Amazon CloudWatch – барлық қосымшалар журналдарын (логтар) сақтайтын маңызды сервис. AWS Auto Scaling және AWS Command Line Interface біз алдында өттік. AWS Trusted Advisor қауіпсіздікті және «performance»-ті, яғни сіздің IT-инфрақұрылымыңыздың өнімділігін оңтайландыруға көмектеседі. Ұқсас сервис – AWS Well-Architected Tool, оның теориялық аспектілерін әлі де толығырақ талқылаймыз. Жалпы, бұл – бұлтта архитектураны жақсырақ құруға көмектесетін ұсыныстар жиынтығы.
Соңғы, бірақ маңызды сервис – AWS CloudTrail. Қосымшаңыз журналдарды жазған кезде, ол ешқандай IТ-ресурстарды өзгертпейді. Мысалы, сізде виртуалды сервер бар, ол жерде қосымша бар, пайдаланушы сұраныс жібергенде, осы пайдаланушыға қатысты деректер өзгереді, қосымшаның өзінде өзгерістер пайда болады, ол басқаша көрсетілуі мүмкін, бірақ виртуалды сервер өзі ешқайда кетпейді және инфрақұрылымда ешқандай өзгерістер болмайды. Сонымен, операциялардың жеке бір түрі бар, атап айтқанда User Activity және API usage. API дегеніміз бұрын айтылған барлық AWS сервистері, бұл әлемдегі ең үлкен API жиынтығы (Application Programming Interface), яғни сервистер (машиналар) бір-бірімен белгілі бір протокол арқылы байланысатын тіл. Кейбір API интерфейстерін сұрағанда, ештеңе өзгермейді, бірақ басқа API сұрағанда, инфрақұрылым өзгеруі мүмкін. Мысалы, жаңа инстанстарды құрған кезде, сіз AWS SDK, AWS CLI немесе AWS Management Console арқылы API-сұранысын жасасаңыз, осының барлығы AWS-те API-шақыруды іске қосып, сервер немесе дерекқор инстансы көтеріледі және т.б. Осы API-әрекеттер осы сұранысты жасаған AWS ішіндегі пайдаланушыға немесе рөлге байланған және AWS CloudTrial-де сақталады. Оны ұшақтардағы «қара жәшікпен» салыстыруға болады, ол ұшу кезінде барлық деректерді, құралдардың көрсеткіштерін, параметрлерін және т.б. үздіксіз жазады. Егер бұлтта қандай да бір жағдай болса, AWS IAM арқылы барлық қол жетімділік өшіріледі және сіздің инфрақұрылымыңызда болған жағдайдың себептерін білу үшін AWS CloudTrial іске қосылады.
Сонымен, біз бүгінгі сессияны аяқтаймыз және оны қорытындылайық. Бірінші бөлімде біз аймақтарды, availibality zones, edge locations, яғни AWS-тің әлемдіқ инфрақұрылымын қарастырдық. Екінші бөлім ауқымдырақ, ол сервистердің санаттары мен түрлерін, олардың анықтамаларын және олардың мағынасын сипаттайды. Олар нақты AWS емтиханында келуі мүмкін. Бұл слайдта осы тақырып туралы көбірек оқып білу үшін арнайы сілтемелер ұсынылған. Осымен біз аяқтаймыз, назарларыңызға рахмет және келесі сабақта кездескенше!

