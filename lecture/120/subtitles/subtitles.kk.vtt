WEBVTT

00:00:00.000 --> 00:00:05.000
Қайырлы күн, құрметті студенттер! Келесі 
дәрісте барлығыңызды көргеніме қуаныштымын.

00:00:05.000 --> 00:00:09.245
Бүгінгі дәрістің тақырыбы - 
Cloud Architecture. Сонымен, біз

00:00:09.269 --> 00:00:13.946
AWS бұлтында IT архитектурасын
қалай дұрыс құру керектігі туралы

00:00:13.970 --> 00:00:19.121
сөйлесеміз. Ендеше, бастайық.
Бүгінгі дәріс үш бөлімнен тұрады.

00:00:19.145 --> 00:00:24.000
Бірінші бөлімде AWS Well-Architected
Framework туралы сөйлесетін боламыз.

00:00:24.000 --> 00:00:27.774
Бұл AWS архитекторлар
тобының бұлтта IT архитектурасын

00:00:27.798 --> 00:00:32.000
қалай дұрыс құру керектігі
туралы best practices жиынтығы.

00:00:32.000 --> 00:00:35.988
Әрі қарай, екінші бөлімде біз сіздің
инфрақұрылымыңыздың сенімділігі

00:00:36.012 --> 00:00:40.000
мен қол жетімділігіне қатысты
кейбір маңызды терминдерді енгіземіз.

00:00:40.000 --> 00:00:45.160
Үшіншіден, біз AWS Trusted
Advisor сервисі туралы сөйлесеміз, ол

00:00:45.184 --> 00:00:51.000
бізге best practices-терге негізделген
архитектура құруға көмектеседі.

00:00:51.000 --> 00:00:58.000
Біз AWS Well-Architected Framework
дәрісінің бірінші бөлімін бастаймыз.

00:00:58.000 --> 00:01:05.000
Бұл туралы егжей-тегжейлі айтпас бұрын,
архитектураның не екенін қарастырайық.

00:01:05.000 --> 00:01:16.000
IT-архитектура - бұл белгілі бір мағынада күрделі
құрылымдарды жоспарлау және құру өнері мен ғылымы.

00:01:16.000 --> 00:01:22.382
Осы күрделі құрылымдарды құрумен
IT-архитекторлар айналысады. Біздің жағдайда бұл

00:01:22.406 --> 00:01:29.188
Cloud Architects, яғни бұлтты архитекторлар.
Олар немен айналысады? Бұл, біріншіден,

00:01:29.212 --> 00:01:35.961
шешім қабылдайтын, келіссөздер жүргізетін
адамдар, олар бизнестің қандай мақсаттарға

00:01:35.985 --> 00:01:42.000
ұмтылатынын түсіну үшін топ-менеджмент
немесе бизнес иелері болуы мүмкін.

00:01:42.000 --> 00:01:48.553
Екіншіден, архитектор техникалық
талаптарды ескере отырып, қазіргі

00:01:48.577 --> 00:01:56.039
уақытта қандай IT-технологиялар
бар және қол жетімді екенін біліп, қандай

00:01:56.063 --> 00:02:03.071
команда бар екенін түсініп, осы
бизнес талаптарын тиісті уақытта және

00:02:03.095 --> 00:02:10.000
тиісті қаржылық шығындармен жүзеге
асыруға болатындығын бағалайды.

00:02:10.000 --> 00:02:21.759
Содан кейін, үшіншіден, архитектор дамыту
тобымен тығыз жұмыс істейді, осы архитектураны

00:02:21.783 --> 00:02:33.000
құрып, барлық маңызды сәттердің дұрыс
бапталынуы үшін оны үнемі қадағалап отырады.

00:02:33.000 --> 00:02:39.309
Неліктен бұл маңызды?
Себебі жақсы жобаланған IT архитектура

00:02:39.333 --> 00:02:45.000
бизнестің табысқа жету мүмкіндігін 
едәуір арттырады. Күн сайын AWS

00:02:45.000 --> 00:03:00.000
сарапшылары бүкіл әлем бойынша мыңдаған
клиенттермен келіссөздер жүргізеді және кеңес береді.

00:03:00.000 --> 00:03:10.232
Әр клиенттің өзіндік нақты архитектурасы бар.
Ол шағын, үлкен, күрделі, қарапайым

00:03:10.256 --> 00:03:20.488
немесе стандартты болуы мүмкін немесе
кейбір ерекше мүмкіндіктерді қамтуы мүмкін.

00:03:20.512 --> 00:03:25.736
Осылайша, AWS сарапшылары
құнды тәжірибе жинауда және осы

00:03:25.760 --> 00:03:31.544
тәжірибенің нәтижесінде
Well-Architected Framework әзірленді.

00:03:31.568 --> 00:03:39.272
Бұл қауіпсіз, қуатты, сенімді
және тиімді архитектураны

00:03:39.296 --> 00:03:47.000
құруға мүмкіндік беретін
бес түрлі бөлімнің жиынтығы.

00:03:47.000 --> 00:03:52.588
Well-Architected Framework бес бөліктен
тұрады, атап айтқанда Operational Excellence,

00:03:52.612 --> 00:03:59.000
Security, Reliability, Performance Efficiency
және Cost Optimization.

00:03:59.000 --> 00:04:03.232
Біз олардың әрқайсысына келесі
слайдтарда назар аударамыз.

00:04:03.256 --> 00:04:08.000
Ең бірінші pillar, яғни бағыт
- бұл Operational Excellence.

00:04:08.000 --> 00:04:17.092
Бұл бағыттың идеясы жүйелерді бизнестің
құндылығын қамтамасыз ететіндей етіп бақылау

00:04:17.116 --> 00:04:25.988
және іске қосу, сондай-ақ қолдау
процестерін үздіксіз жетілдіру болып табылады.

00:04:26.012 --> 00:04:33.887
Осыған байланысты үш маңызды тақырып
бар: Automating Changes, яғни өзгерістерді

00:04:33.911 --> 00:04:43.000
автоматтандыру. Әрі қарай, бұл Responding
to Events, яғни әр түрлі оқиғаларға жауап беру.

00:04:43.000 --> 00:04:55.000
Үшінші - күнделікті жедел міндеттерді
тиімдірек басқару стандарттарын енгізу.

00:04:55.000 --> 00:04:59.988
Operational Excellence-тің бес
негізгі қағидасын қарастырайық.

00:05:00.012 --> 00:05:07.982
Біріншісі - Perform Operations as Code.
Мүмкіндігінше, адам факторын автоматтандырып,

00:05:08.006 --> 00:05:12.390
жою қажет. IT-инфрақұрылымымен
байланысты ең айқын мысалы - AWS

00:05:12.414 --> 00:05:17.488
CloudFormation сервисін немесе
оның аналогтарын пайдалану.

00:05:17.512 --> 00:05:25.857
Бұл біздің инфрақұрылымымыздың коды
арқылы кіруге мүмкіндік беретін сервис,

00:05:25.881 --> 00:05:34.000
ал AWS CloudFormation біз үшін
инфрақұрылымды автоматты түрде орнатады.

00:05:34.000 --> 00:05:39.488
Біз кодпен жұмыс істейтіндіктен, біз
әртүрлі нұсқаларды басқару жүйелерін

00:05:39.512 --> 00:05:45.000
қолдана аламыз және бүкіл командамен
бірге бір кодта жұмыс істей аламыз.

00:05:45.000 --> 00:05:49.699
Бұл әлдеқайда оңай, әлдеқайда
ыңғайлы, барлық өзгерістер сақталады және

00:05:49.723 --> 00:05:54.892
қажет кезде қайта оралуға болады.
Осылайша, сіз өзіңіздің инфрақұрылымыңызды

00:05:54.916 --> 00:05:59.033
орнату кезінде адам факторын
жойып қана қоймай, сонымен қатар

00:05:59.057 --> 00:06:04.000
ынтымақтастық тиімдірек болған
сайын белгілі бір мағынада жеделдетілесіз.

00:06:04.000 --> 00:06:10.000
Сонымен қатар, сіз код ретінде жұмыс істегенде,
бүкіл инфрақұрылымды алақаныңыздағыдай көре аласыз.

00:06:10.000 --> 00:06:19.742
Келесі - сіз жиі және кішігірім өзгерістерді
босатуыңыз керек, яғни айына бір рет үлкен

00:06:19.766 --> 00:06:24.871
жаңартуларды шығарудың
орнына, бірнеше күн сайын кішігірім

00:06:24.895 --> 00:06:30.000
өзгерістерді, қолданбаңыздың
жаңартуларын шығарған дұрыс.

00:06:30.000 --> 00:06:37.911
Неліктен бұл маңызды? Кішкентай өзгерістер
сіздің проблемаңызды локализациялауды жеңілдетеді

00:06:37.935 --> 00:06:42.456
және келесі жаңартуларда олар
қабатталмайды және сіз бұл қатені бірден

00:06:42.480 --> 00:06:47.000
түзетесіз және келесі өзгерістер
дұрыс кодқа қолданылады.

00:06:47.000 --> 00:06:55.000
Егер бір нәрсе үстінен қосылатын болса, оны өзгерту
 әрдайым мүмкін емес немесе көп уақыт кетеді.

00:06:55.000 --> 00:07:03.000
Осылайша, біз уақытты және,
тиісінше, қаржымызды үнемдейміз.

00:07:03.000 --> 00:07:11.000
Кішкентай өзгерістер туралы айтатын болсақ,
бұл өзгерістерді артқа айналдыру әлдеқайда оңай.

00:07:11.000 --> 00:07:17.163
Сондықтан процестер мен
инфрақұрылымды сіздің қосымшаңызға

00:07:17.187 --> 00:07:24.000
өзгертулеріңізді жиі орналастыруға
болатындай етіп құру қажет.

00:07:24.000 --> 00:07:31.000
Келесі қағида - операциялық процедураларды
мезгіл-мезгіл тексеріп отыру керек.

00:07:31.000 --> 00:07:38.000
Бұл кейбір құжаттама не белгіленген
процестер болуы мүмкін.

00:07:38.000 --> 00:07:46.040
Идея мынада: сіз оны үнемі қарап
отырсаңыз, кейбір маңызды емес бөліктерді тез

00:07:46.064 --> 00:07:54.000
жоюға болады, ал өзекті бөліктерін
жақсартуға және автоматтандыруға болады.

00:07:54.000 --> 00:08:01.002
Бұл қолдау тобына және бұлтты инженерлік
топқа жалпы алғанда тезірек жұмыс істеуге

00:08:01.026 --> 00:08:09.000
мүмкіндік береді және IT-инфрақұрылымымен
жұмыс істеу оңайырақ болады. Әрі қарай,

00:08:09.000 --> 00:08:19.000
төртінші - біз инфрақұрылымымыздағы проблемалар
мен бұзылуларды алдын ала болжауымыз керек.

00:08:19.000 --> 00:08:28.988
Бұл нені білдіреді? Инфрақұрылымды
тұрақты негізде талдау қажет, қандай түйіндер тар

00:08:29.012 --> 00:08:39.000
екенін және бұзылудың қай бөлігі қосымшаның
жұмысына үлкен әсер ететінін түсіну керек.

00:08:39.000 --> 00:08:44.713
Осылайша, осы тармақтарды
мезгіл-мезгіл қарап отырып,

00:08:44.737 --> 00:08:51.000
біз қосымша резервтеуді
қайда қосу керектігін түсінеміз.

00:08:51.000 --> 00:08:58.988
Идеясы мынада: инфрақұрылым әрдайым
қол жетімді және әртүрлі бұзылуларға

00:08:59.012 --> 00:09:07.000
аз ұшырауы үшін инфрақұрылымымызды
мүмкіндігінше жаңартып отыруымыз керек.

00:09:07.000 --> 00:09:16.972
Егер бұл сәтсіздіктер орын алса, команда
осындай оқиғаларға дайын болуы үшін және жылдам

00:09:16.996 --> 00:09:28.000
қалпына келтіру үшін орындалуы қажет сынақ
процедуралары да мерзімді түрде қайта қаралуы керек.

00:09:28.000 --> 00:09:35.974
Соңғы қағида - сіздің IT инфрақұрылымыңызда
болып жатқан барлық оқиғалардан

00:09:35.998 --> 00:09:43.000
қандай да бір пайда алу керек,
қателіктер, бұзылулар және т.с.с.

00:09:43.000 --> 00:09:52.840
Мүмкін мезгіл-мезгіл кездесіп, кейбір
шолулар жасап, не болғанын, қалай түзетілгенін,

00:09:52.864 --> 00:10:02.000
кемшіліктер қайда болғанын, бұл процесті
қалай жақсартуға болатынын және т.б.

00:10:02.000 --> 00:10:10.068
Сонымен қатар, командалар әртүрлі
мәселелерді шешуде өз тәжірибелерімен бөлісе

00:10:10.092 --> 00:10:19.000
алатындай IT-командалар арасында ішкі
конференциялар ұйымдастыру өте жақсы тәжірибе.

00:10:19.000 --> 00:10:22.988
Мысалы, егер біз әзірлеушілер
тобы туралы айтатын болсақ,

00:10:23.012 --> 00:10:27.000
олар даму саласындағы қызықты
оқиғалармен бөлісе алады.

00:10:27.000 --> 00:10:33.426
Егер біз бұлтты инженерлер
тобы туралы айтатын болсақ, онда

00:10:33.450 --> 00:10:39.877
инфрақұрылымның қай бөліктері
сәтті автоматтандырылғанын,

00:10:39.901 --> 00:10:46.938
нәтижелерін, оң және теріс 
жақтарын және т.б. қарастыра аламыз,

00:10:46.962 --> 00:10:54.000
яғни жалпы компаниядағы бүкіл
команданың біліктілігін арттыру.

00:10:54.000 --> 00:11:03.150
Келесі pillar - қауіпсіздік. Оның идеясы - біз
компаниямызға іскерлік құндылықты жеткізе отырып,

00:11:03.174 --> 00:11:13.000
инфрақұрылымымыздың, жүйелеріміздің, ақпаратымыздың
және т.б. қауіпсіздігін қамтамасыз етуіміз керек.

00:11:13.000 --> 00:11:22.000
Бірнеше бағыттары бар. Біріншісі - деректердің
құпиялылығы мен тұтастығын қорғауымыз керек.

00:11:22.000 --> 00:11:30.217
Әрі қарай, біз сіздің инфрақұрылымыңызда
кім не істей алатынын түсінуіміз

00:11:30.241 --> 00:11:38.000
керек, яғни бұл бұлттағы кіру құқығымен жұмыс
істеудің дұрыс әдісі. Әрі қарай, біз шифрлауды

00:11:38.000 --> 00:11:53.988
қамтитын жүйелеріміздің периметрін қорғауымыз 
керек. Соңғы төртінші - қауіпсіздікке қатысты

00:11:54.012 --> 00:12:10.000
кейбір оқиғалар орын алған кезде іске қосылатын
кейбір автоматты оқиғаларды дайындау және баптау.

00:12:10.000 --> 00:12:20.108
Яғни, автоматты режимде біздің
инфрақұрылымымыздағы бір нәрсе

00:12:20.132 --> 00:12:31.000
бұзылды немесе периметрдің тұтастығы
жойылды, сәйкесінше алаяқтар біздің

00:12:31.000 --> 00:12:40.000
деректерімізге, дерекқорларымызға
жетті деген сөз.

00:12:40.000 --> 00:12:45.000
Егер ол автоматты түрде байқалатын
болса, бұл өте жақсы.

00:12:45.000 --> 00:12:51.000
Енді қауіпсіздік принциптерін
мұқият қарастырайық.

00:12:51.000 --> 00:13:01.041
Ол жеті бөліктен тұрады. Біріншіден, біз
кімге қол жеткізу құқығын беретінімізді реттеуіміз

00:13:01.065 --> 00:13:12.000
керек, яғни Least Privilege принципін ұстануымыз
керек. Біз сізге қажет құқықтарды ғана береміз.

00:13:12.000 --> 00:13:17.488
Сонымен қатар, қол жеткізу
құқықтарымен жұмыс істеуді жеңілдететін

00:13:17.512 --> 00:13:23.000
орталықтандырылған қол жеткізу
құқықтарын басқаруды баптау қажет.

00:13:23.000 --> 00:13:30.278
Сонымен қатар, мүмкін болса, құқықтарды беру уақытын
қысқарту қажет немесе белгілі бір ресурстар мен

00:13:30.302 --> 00:13:38.000
инфрақұрылымның бөліктеріне ұзақ мерзімге құқық
беру мүмкіндігін толығымен алып тастауға болады.

00:13:38.000 --> 00:13:46.286
Идеясы мынада: credential деректерін,
AWS Management Console құпия

00:13:46.310 --> 00:13:56.000
сөздерін, access және secret keys-тарды
мезгіл-мезгіл жаңартып отыру керек.

00:13:56.000 --> 00:14:01.232
Келесі - Enable Traceability.
Оның идеясы - біз автоматты түрде

00:14:01.256 --> 00:14:06.488
жауап беру және жүйені қалпына
келтіру үшін кейбір әрекеттерді

00:14:06.512 --> 00:14:11.486
орындау үшін нақты уақыт
режимінде инфрақұрылымның өзгеруін

00:14:11.510 --> 00:14:17.000
бақылап, журналдармен және
көрсеткіштермен біріктіруіміз керек.

00:14:17.000 --> 00:14:29.000
Кейін біз инфрақұрылымның барлық деңгейлерінде
қауіпсіздіктің барлық тетіктерін қосуымыз керек.

00:14:29.000 --> 00:14:40.157
Яғни, бізде VPC-де қауіпсіз IT ресурстарын баптаудың
белгілі бір нұсқалары бар, subnets бар, Network

00:14:40.181 --> 00:14:51.000
ACL, Load Balancer, тіпті операционды жүйеде
және қосымша деңгейлерінде де оны баптауға болады.

00:14:51.000 --> 00:14:59.659
Қолданбаның тиімді жұмысына кедергі
келтірмейтін қауіпсіздік қабаттарын неғұрлым

00:14:59.683 --> 00:15:09.000
көп дайындасақ, алаяқтар мен хакерлердің
түпкі мақсатына жетуі соғұрлым қиын болады.

00:15:09.000 --> 00:15:14.533
Келесі принцип - қауіпсіздікті
қамтамасыз етуге мүмкіндік беретін

00:15:14.557 --> 00:15:20.000
процестерді мүмкіндігінше
автоматтандыруға тырысу.

00:15:20.000 --> 00:15:25.988
Егер бұл автоматтандырылған болса, онда,
біріншіден, адам факторы алынып тасталады

00:15:26.012 --> 00:15:32.000
және жұмыс автоматты түрде жасалады,
сондықтан ол бірнеше есе арзан болуы мүмкін.

00:15:32.000 --> 00:15:37.772
Әрі қарай, деректермен жұмыс
істеу кезінде деректерді сақтау кезінде

00:15:37.796 --> 00:15:44.000
ғана емес, сонымен қатар деректерді
тасымалдау кезінде де қорғау қажет.

00:15:44.000 --> 00:15:51.713
Келесі принцип - деректерге тек
жұмысқа қолжетімділікті қажет ететін

00:15:51.737 --> 00:16:00.719
мамандарға ғана рұқсат беру, тек қажет
көлемде ғана құқықтар беру, үшіншіден,

00:16:00.743 --> 00:16:09.095
егер деректерге қол жеткізуді
шектейтіндей етіп, тек белгілі бір маманға

00:16:09.119 --> 00:16:17.000
қажет құқықтарды қамтамасыз ету
мүмкін болса, оны пайдалану қажет.

00:16:17.000 --> 00:16:28.270
Ең соңғысы - оқиғаларды басқару процестерін
оларға тезірек жауап беру және жүйені

00:16:28.294 --> 00:16:39.000
сәтсіздіктен кейін мүмкіндігінше
тезірек қалпына келтіру үшін баптау қажет.

00:16:39.000 --> 00:16:44.579
Келесі pillar - reliability, яғни сенімділік.
Оның идеясы - біз

00:16:44.603 --> 00:16:50.182
бизнес талаптарына сәйкес келетін
жүйелерді құрамыз, олар сенімді

00:16:50.206 --> 00:16:55.823
және белгілі бір проблемалар мен
қателер туындаған жағдайда жүйе

00:16:55.847 --> 00:17:02.000
автоматты түрде немесе команданың
көмегімен тез қалпына келтіріледі.

00:17:02.000 --> 00:17:11.000
Сенімді жүйелерді құрудың 5 негізгі
қағидасын қарастырайық.

00:17:11.000 --> 00:17:19.000
Біріншісі - белгілі бір апат кезінде мүмкіндігінше
қалпына келтіру процестерін автоматтандыру қажет.

00:17:19.000 --> 00:17:22.580
Мысалы, егер бізде мұндай
проблемалар жиі кездесетінін білсек,

00:17:22.604 --> 00:17:26.184
оны қосымшаның коды деңгейінде
шешуге тырысыңыз, егер бұл қосымшаның

00:17:26.208 --> 00:17:33.000
өзімен байланысты емес, инфрақұрылым
деңгейінде болса, онда біз оны жоюымыз керек.

00:17:33.000 --> 00:17:40.000
Егер сіз оны жоя алмасаңыз, құлдырау болған кезде
автоматты түрде қалпына келтіруді орнатуыңыз керек.

00:17:40.000 --> 00:17:52.000
Келесі - тігінен масштабтаудан гөрі
көлденеңінен масштабтауды таңдау.

00:17:52.000 --> 00:17:57.988
Неге? Егер сізде пайдаланушылардың
сұрауларын өңдейтін бір қуатты

00:17:58.012 --> 00:18:04.000
сервер болса, ол бұзылса, барлық
қосымшалар қол жетімсіз болады.

00:18:04.000 --> 00:18:10.556
Егер сізде көптеген шағын виртуалды серверлер
болса және олардың әрқайсысы пайдаланушы сұрауларын

00:18:10.580 --> 00:18:17.000
өңдей алатын болса, онда виртуалды серверлердің
бірі істен шықса, оны оңай ауыстыруға болады.

00:18:17.000 --> 00:18:20.774
Егер ол істен шықса да, ол
қол жетімді болмаған кезде,

00:18:20.798 --> 00:18:25.000
пайдаланушылардың
сұраныстарының көпшілігі сәтті өңделеді.

00:18:25.000 --> 00:18:33.000
Әрі қарай, сіз барлық қалпына келтіру процедураларын
мезгіл-мезгіл тексеріп отыруыңыз керек.

00:18:33.000 --> 00:18:43.762
Инфрақұрылымды автоматты
түрде масштабталатындай етіп баптау

00:18:43.786 --> 00:18:54.000
керек, яғни жүктемеге
байланысты кішірею немесе кеңею.

00:18:54.000 --> 00:19:03.000
Бұл сізге жұмыс жүктемесі үшін қажет
ресурстарды ғана сұрауға мүмкіндік береді.

00:19:03.000 --> 00:19:10.000
Сондықтан сіз ештеңеге артық төлемейсіз, тек
пайдаланған ресурстар үшін қаржы жұмсайсыз.

00:19:10.000 --> 00:19:22.000
Соңғысы - өзіңіздің инфрақұрылымыңызға өзгерістер 
енгізу процесін автоматтандыруыңыз керек.

00:19:22.000 --> 00:19:30.000
Бұл адам факторын жояды және проблемалар
туындаған жағдайда оңай оралуға мүмкіндік береді.

00:19:30.000 --> 00:19:38.289
Келесі pillar - Performance efficiency.
Оның идеясы - біз ресурстармен

00:19:38.313 --> 00:19:46.000
жұмыс істейміз және әр ресурс
үшін дұрыс қасиеттерді таңдаймыз.

00:19:46.000 --> 00:19:52.988
EC2 инстансы туралы айтқан кезде, біз әр түрлі
көрсеткіштерді қолданып, жұмыс жүктемелерімізге

00:19:53.012 --> 00:20:00.000
қандай өлшемдер мен инстанс түрі қолайлы екенін
түсіну үшін қажетті деректерді жинауымыз керек.

00:20:00.000 --> 00:20:05.680
Сондай-ақ өнімділік мониторингін орнату керек.
Бұл бізге деректерді жинауға

00:20:05.704 --> 00:20:11.000
және осы деректер негізінде дұрыс
шешім қабылдауға мүмкіндік береді.

00:20:11.000 --> 00:20:16.667
Тиімді өнімділікпен IT
инфрақұрылымын құруға мүмкіндік

00:20:16.691 --> 00:20:23.000
беретін негізгі қағидалар мен
best practices қарастырайық.

00:20:23.000 --> 00:20:29.000
Ең алдымен, жаңа технологияларға
мұқият қарау ұсынылады.

00:20:29.000 --> 00:20:35.110
Көбінесе жаңа технологиялар айтарлықтай
жеделдетуге, тиімділікті арттыруға, кейбір

00:20:35.134 --> 00:20:42.000
жерлерде адам факторын жоюға және ішкі
процестеріңізді автоматтандыруға мүмкіндік береді.

00:20:42.000 --> 00:20:56.000
Әрі қарай, сізде жаһандық қатысу мүмкіндігі бар, 
өйткені AWS әртүрлі аймақтарда жұмыс істейді.

00:20:56.000 --> 00:21:06.000
Яғни, инфрақұрылымды бірнеше аймақта орналастырылатын
жолмен құра аласыз дегенді білдіреді.

00:21:06.000 --> 00:21:12.488
Мен мұнда кішігірім ескерту жасағым келеді,
атап айтқанда сіз әрқашан өзіңіздің нақты

00:21:12.512 --> 00:21:19.000
жағдайыңызға қарауыңыз керек, себебі best
practice әрқашан сізге сәйкес келе бермейді.

00:21:19.000 --> 00:21:23.988
Неліктен мен мұны дәл қазір 
айтып отырмын? Себебі Go global

00:21:24.012 --> 00:21:29.000
in minutes сізді бірнеше аймақта
жұмыс істеуге мәжбүрлейді.

00:21:29.000 --> 00:21:36.948
Бұл компанияның көптеген жүктемелері
үшін әрдайым дұрыс бола бермейді, өйткені бір

00:21:36.972 --> 00:21:46.000
аймақта бола тұра, бірнеше availability zone-да
орналасқан инфрақұрылымды құру жеткілікті.

00:21:46.000 --> 00:21:55.000
Осылайша, компания өз инфрақұрылымын екі аймаққа
көшіру арқылы қосымша шығындарға ұшырамайды.

00:21:55.000 --> 00:22:04.000
Бұл өте қымбат, команданың күш-жігері мен жұмысы
жағынан қымбат және біраз уақытты қажет етеді.

00:22:04.000 --> 00:22:09.988
Сондықтан, сіз әрқашан өзіңіз үшін
best practices қолданып көруіңіз керек,

00:22:10.012 --> 00:22:16.000
егер ол сәйкес келсе, сіз осы best
practices көмегімен жалғастыра аласыз.

00:22:16.000 --> 00:22:22.000
Келесі best practices туралы дәл осылай айта
аламын - use serverless architectures.

00:22:22.000 --> 00:22:31.540
Басқаша айтқанда, серверсіз архитектуралар,
сөзсіз, ең жақсы технология болып табылады және жұмыс

00:22:31.564 --> 00:22:42.000
жүктемесін болжау мүмкін емес стартаптар үшін IT
архитектурасын айтарлықтай үнемдеуге мүмкіндік

00:22:42.000 --> 00:22:48.988
береді. Сіздің IT-инфрақұрылымыңыздағы
тұрақты жүктемелер туралы айтатын

00:22:49.012 --> 00:22:56.000
болсақ, серверсіз архитектуралар
әрқашан ең тиімді шешім бола бермейді.

00:22:56.000 --> 00:23:02.000
Сондықтан, тағы да қайталайын, сіз әрқашан
кез-келген best practices-ті сынап көруіңіз керек.

00:23:02.000 --> 00:23:06.294
Сізге сәйкес келгенде ғана сіз
суық есептеуді жасап, одан пайда

00:23:06.318 --> 00:23:12.000
көретіндігіңізді түсінесіз, содан кейін
ғана сіз best practices-терді ұстанасыз.

00:23:12.000 --> 00:23:22.000
Егер ол сізге сәйкес келмесе, best practices
ұстану немесе ұстанбау компанияның шешімі.

00:23:22.000 --> 00:23:34.000
Соңғы тармақ бірінші тармаққа байланысты -
мүмкіндігінше жиі тәжірибе жасау керек.

00:23:34.000 --> 00:23:38.199
Осының арқасында сізде IT
архитектураны сіздің жұмыс

00:23:38.223 --> 00:23:43.000
жүктемелеріңіз үшін ең қолайлы етіп
құруға мүмкіндік бар. Сонымен қатар,

00:23:43.000 --> 00:23:51.000
жүктемелер уақыт өте келе өзгереді. Уақыт өте
келе бизнеске қойылатын талаптар да өзгереді.

00:23:51.000 --> 00:23:58.000
Тиісінше, IT-инфрақұрылым да өзгеріп,
жаңа шындыққа бейімделуі керек.

00:23:58.000 --> 00:24:08.000
Біз соңғы pillar-ге жеттік. Оның идеясы -
қажетсіз шығындардан аулақ болуымыз керек.

00:24:08.000 --> 00:24:16.000
Бұлтты технологиялар, бұлттың өзі әр
ресурсты бақылауға мүмкіндік береді.

00:24:16.000 --> 00:24:21.332
Бірақ осы ресурс туралы қажетті
қосымша тегтер мен ақпаратсыз,

00:24:21.356 --> 00:24:25.988
бұл ресурстың қайсысы
мамандарға немесе командаларға

00:24:26.012 --> 00:24:30.994
тиесілі екенін, оны жоюға
болатынын, өзекті немесе маңызды

00:24:31.018 --> 00:24:36.000
емес екенін, қажет пе, 
жоқ па және т.б. түсіну өте қиын.

00:24:36.000 --> 00:24:44.488
Сондықтан, бұл үздіксіз процесс, және сіздің
ақшаңыздың, компанияның ақшасының қайда

00:24:44.512 --> 00:24:53.000
жұмсалатынын түсіну үшін шығындарыңызды
талдау үшін осы тұрақты жұмысты орындау қажет.

00:24:53.000 --> 00:25:01.757
Сондай-ақ, ресурстарыңыздың оңтайлы түрін таңдау
үшін шығындарыңызды мезгіл-мезгіл талдау қажет.

00:25:01.781 --> 00:25:11.000
Бұл тек түрге ғана емес, сонымен қатар санына да
қатысты және осылайша қосымша шығындарға ұшырамау.

00:25:11.000 --> 00:25:20.000
Жоғарыда айтқанымдай, шығындармен жұмыс
істеу - бұл үнемі талдауды қажет ететін

00:25:20.000 --> 00:25:27.000
үздіксіз процесс, өйткені инфрақұрылым
үнемі өзгеріп отырады, инфрақұрылымның

00:25:27.000 --> 00:25:32.000
кейбір бөліктері өсуде, ал кейбір
бөліктері қажетсіз болып қалады.

00:25:32.000 --> 00:25:39.000
Сіздің шығындарыңызды талдау барысында сіз нені
өшіре алатыныңызды, нені қайта жасай алатыныңызды,

00:25:39.000 --> 00:25:45.000
оны сол күйінде қалдыра алатыныңызды түсінесіз,
яғни ол ең оңтайлы түрде жұмыс істеп жатыр.

00:25:45.000 --> 00:26:04.000
Бұған инфрақұрылымды масштабтау кезінде шығындарды
талдауды талап ететін жұмыс орындары да кіреді.

00:26:04.000 --> 00:26:14.000
Мүмкін, мысалы, 10 есе масштабтау кезінде,
белгілі бір жолмен салынған архитектураның

00:26:14.000 --> 00:26:22.000
бөлігі оңтайлы емес, сіз қосымша шығындарға
ұшырайсыз және оны қайта жасай аласыз.

00:26:22.000 --> 00:26:27.456
Сондықтан шығындармен айналысатын
мамандар IT-архитекторлармен

00:26:27.480 --> 00:26:32.488
үнемі тығыз жұмыс істейді,
кейбір жерлерді қайта құруға

00:26:32.512 --> 00:26:37.744
бола ма, әлде кейбір жерлерді
қайта құру керек пе, жоқ па,

00:26:37.768 --> 00:26:43.000
өйткені бұл белгілі бір қаражатты
үнемдеуге мүмкіндік береді.

00:26:43.000 --> 00:26:48.000
Содан кейін IT-архитектор қосылады және
ол балама нұсқа бар екенін көреді.

00:26:48.000 --> 00:26:54.988
Егер ол бизнес талаптарын қанағаттандыруға
жақсы сәйкес келсе, оны жүзеге асыруға

00:26:55.012 --> 00:27:02.000
болады, содан кейін, сәйкесінше,
архитектураны өзгерту туралы шешім қабылданады.

00:27:02.000 --> 00:27:06.000
Cost optimization-нің негізгі
принциптеріне назар аударайық.

00:27:06.000 --> 00:27:15.988
Біріншіден, компания бұлтты шығындарды
оңтайландыру процестерімен жұмыс істеуі үшін бұлттағы

00:27:16.012 --> 00:27:26.000
шығындарыңызды үнемі зерттеп, талдайтын бір
маман немесе шағын мамандар бөлімін бөлу қажет.

00:27:26.000 --> 00:27:34.034
Келесі - бұлтта қажет ресурстар
үшін ғана төлейтіндігіңізге көз

00:27:34.058 --> 00:27:43.000
жеткізу. Ресурстар қажет не қажет
емес екенін қалай түсінуге болады?

00:27:43.000 --> 00:27:49.870
Егер ресурстар жұмыс істеп тұрса және
сіздің бизнес мақсатыңызды орындау үшін

00:27:49.894 --> 00:27:57.488
сізден сұралса, онда бұл ресурстар қажет.
Егер бұл ресурстар қандай да бір іскерлік

00:27:57.512 --> 00:28:04.744
тапсырманы орындамаса немесе белгілі
бір мақсатқа ұмтылмаса, онда бұл ресурстар

00:28:04.768 --> 00:28:12.000
артық болып табылады және оларға төлемеу
үшін мұндай ресурстардан құтылу қажет.

00:28:12.000 --> 00:28:21.000
Келесі тармақта бұлтты шығындар көбеюі
немесе азаюы мүмкін дейді.

00:28:21.000 --> 00:28:29.488
Және сіздің шығындарыңыздың 20%-ға өскені
бұл жаман нәрсе дегенді білдірмейді. Бұл ақпарат

00:28:29.512 --> 00:28:38.000
жеткіліксіз. Сіз шығындарыңыздан басқа,
инфрақұрылымның тиімділігін де талдауыңыз керек.

00:28:38.000 --> 00:28:44.988
Бұл кейбір бизнес-метрикалар болуы мүмкін.
Және бұлт шығындарыңыздың 20% өсуімен

00:28:45.012 --> 00:28:52.000
сіз соңғы айда компанияңыздың кірісін
50%-ға арттыруыңыз әбден мүмкін.

00:28:52.000 --> 00:29:02.000
Сіз бұлтты шығындар өссе де, компанияның
кірісінің өсуі сіздің инфрақұрылымыңыздың

00:29:02.000 --> 00:29:10.000
өсуінен үлкен болу үшін тиімді түрде
ұлғайтылғанын көре аласыз.

00:29:10.000 --> 00:29:17.000
Сондықтан жалпы көріністі көру үшін
мүмкіндігінше көп ақпарат жинау керек.

00:29:17.000 --> 00:29:27.247
Келесі тармақ сіздің бизнес мақсаттарыңызға назар
аудару тиімді екенін көрсетеді. Аппараттық құралға

00:29:27.271 --> 00:29:37.000
қатысты барлық нәрсе, деректер орталығын
басқаруға қатысты барлық нәрсе AWS-ке берілуі керек.

00:29:37.000 --> 00:29:46.000
Бұл жергілікті деректер орталығынан
бұлтқа көшуді ұсынатын тармақ.

00:29:46.000 --> 00:29:54.277
Сонда да, барлығы бизнес контекстіне,
ағымдағы жағдайға байланысты. Жергілікті деректер

00:29:54.301 --> 00:30:02.000
орталығына орнату тиімдірек болатын
кейбір компаниялар мен инфрақұрылымдар бар.

00:30:02.000 --> 00:30:08.000
Сондықтан әрқашан өзіңіздің жағдайыңызды
қарап, оны жеке талдаңыз.

00:30:08.000 --> 00:30:20.000
Соңғы тармақ - тегтеу процесін
жүргізу қажет.

00:30:20.000 --> 00:30:25.590
Бұл AWS бұлтындағы ресурстарды
белгілеу мәдениеті сіздің

00:30:25.614 --> 00:30:31.000
компанияңыздағы барлық
командаларға енгізілуі керек.

00:30:31.000 --> 00:30:36.423
Тегтеудің арқасында сіз бүкіл
компанияның, мысалы, өткен айда

00:30:36.447 --> 00:30:42.595
белгілі бір сервиске 2000 доллар
жұмсағанын түсініп қана қоймайсыз.

00:30:42.619 --> 00:30:48.411
Бұл ақпарат жеткіліксіз.
Егер, мысалы, командалар өз ресурстарын

00:30:48.435 --> 00:30:53.489
белгілі бір тегпен, белгілі
бір кілтпен белгілесе, сіз

00:30:53.513 --> 00:30:59.367
белгілі бір сервистің шығындары
шегінде екенін түсінесіз, егер

00:30:59.391 --> 00:31:05.244
сіз тег платформасына қарасаңыз,
онда сіз 2,000 доллардан А тобы

00:31:05.268 --> 00:31:11.122
1000 доллар жұмсайтынын көресіз,
В тобы 500 доллар жұмсайды, ал

00:31:11.146 --> 00:31:17.000
үшінші және төртінші командалар
әрқайсысы 250 доллардан жұмсайды.

00:31:17.000 --> 00:31:26.000
Бұл жағдайда сіз толық көріністі көресіз. Бірақ
ол үшін әр команда осы ережелерді сақтауы керек.

00:31:26.000 --> 00:31:33.000
Ресурстарды тегтеу процесі
орталықтан басқарылуы керек.

00:31:33.000 --> 00:31:40.192
Компания ескеретін тег кілттерінің
жиынтығы анықталуы керек және

00:31:40.216 --> 00:31:48.000
толтырылуы керек. Командалар 
осы ережелерді сақтауы керек.

00:31:48.000 --> 00:31:54.000
Сонда ғана сіз белгілі бір шешімдер қабылдауға
болатын таза деректер аласыз.

00:31:54.000 --> 00:32:00.000
Осылайша біз дәрістің бірінші
бөлімінің соңына жеттік.

00:32:00.000 --> 00:32:04.000
Біз Well-Architected Framework не
екенін толығырақ талқыладық.

00:32:04.000 --> 00:32:14.000
Қысқаша айтқанда, бұл best practices-ті
бес бағытта зерттейтін құжат.

00:32:14.000 --> 00:32:19.208
Егер сіз осы best practices
ұстанатын болсаңыз, онда сіз,

00:32:19.232 --> 00:32:25.000
біріншіден, артық шығындарды
қамтымайтын архитектура саласыз.

00:32:25.000 --> 00:32:30.348
Бұл қол жетімді, сенімді және
өнімділік тұрғысынан тиімді.

00:32:30.372 --> 00:32:36.780
Well-Architected Framework - бұл 
best practices. Жоғарыда айтқанымдай,

00:32:36.804 --> 00:32:44.000
best practices әрқашан дайын нұсқаулар
бола бермейді.

00:32:44.000 --> 00:32:50.000
Сіз best practices-тің кейбір бөлігі
айқын екенін байқадыңыз.

00:32:50.000 --> 00:32:56.000
Және олар қай бағытта қозғалу
керектігін жалпы сипаттайды.

00:32:56.000 --> 00:33:03.000
Тағы бір маңызды мәселе - best practices әрқашан
сіздің ісіңізге қатысты бола бермейді.

00:33:03.000 --> 00:33:09.000
Сондықтан сіз әрқашан өз жағдайыңызды
бөлек талдауыңыз керек.

00:33:09.000 --> 00:33:20.000
Егер белгілі бір best practices ұстану
тиімді болса, осы бағытта жүру ұсынылады.

00:33:20.000 --> 00:33:35.000
Біз дәрістің екінші бөліміне жеттік. Сенімділік пен
қол жетімділікке қатысты терминдерді енгіземіз.

00:33:35.000 --> 00:33:44.000
Amazon компаниясының бас техникалық директоры Вернер
Фогельс: “Бәрі үнемі құлдырайды”, - деп айтады.

00:33:44.000 --> 00:33:52.609
Бұл дегеніміз, аппараттық құралға сүйенбеуіңіз керек,
ол әрдайым сәтсіздікке ұшырайды, әсіресе сіздің

00:33:52.633 --> 00:34:02.000
инфрақұрылымыңыз ұлғайған сайын, бір жерде
бірдеңе дұрыс болмай қалу ықтималдығы артады.

00:34:02.000 --> 00:34:10.151
Тиісінше, сіздің инфрақұрылымыңыз оның кез-келген
жерде бұзылуын болжауы керек және сіздің жүйеңіз

00:34:10.175 --> 00:34:19.000
мұндай оқиғаларға автоматты түрде жауап беруі керек
және ең дұрысы автоматты түрде қалпына келуі керек.

00:34:19.000 --> 00:34:28.000
Бұл сіздің инфрақұрылымыңыздың мүмкіндігінше
сенімді және қолжетімді болуына әкеледі.

00:34:28.000 --> 00:34:35.673
Сонымен сенімділік дегеніміз не?
Сенімділік - бұл сіздің жүйеңіздің пайдаланушыларға

00:34:35.697 --> 00:34:43.000
бастапқыда жасалған функционалдылықты
қамтамасыз ету мүмкіндігінің бір бөлігі.

00:34:43.000 --> 00:34:49.000
IT-жүйелері туралы айтатын болсақ, бұл
осы жүйенің барлық компоненттерін, аппараттық

00:34:49.000 --> 00:34:54.000
құралды, қосымша параметрлерін
және сіздің деректеріңізді қамтиды.

00:34:54.000 --> 00:35:01.000
Сенімділікті жақсы түсіну үшін жүйенің
мысалы ретінде машинаны алайық.

00:35:01.000 --> 00:35:06.000
Машина бірнеше түрлі компоненттерден
тұратын жүйе болып табылады.

00:35:06.000 --> 00:35:10.558
Мысал ретінде, бұл қозғалтқышты
салқындату жүйесі болуы мүмкін,

00:35:10.582 --> 00:35:15.000
не көлікті іске қосу үшін жанармай
бүрку жүйесі болуы мүмкін.

00:35:15.000 --> 00:35:24.000
Бұл тежегіштің тоқтап, қауіпсіз
жүру мүмкіндігі болуы мүмкін.

00:35:24.000 --> 00:35:32.000
Шашырату жүйесі жұмыс істемейтінін елестетіп 
көрейік. Бұл жағдайда машина қол жетімді емес.

00:35:32.000 --> 00:35:41.988
Егер шашырату жүйесі ұзақ уақыт жұмыс
істемесе және біз көлігімізді бірнеше рет

00:35:42.012 --> 00:35:52.000
жүргізе алмасақ, біздің көлігіміз сенімді
емес деп айтамыз, бұл жүйе сенімсіз.

00:35:52.000 --> 00:36:02.000
IT жүйесінің сенімділігін өлшеу үшін
кейбір формулалар енгізіледі.

00:36:02.000 --> 00:36:13.000
Ең көп таралған нұсқа - MTBF, Mean Time Between
Failures, бұл бұзылу арасындағы орташа уақыт.

00:36:13.000 --> 00:36:19.035
Ол қалай есептеледі: біз сіздің
сервисіңіздің жалпы жұмыс уақытын

00:36:19.059 --> 00:36:25.000
аламыз да оны апаттар санына бөлеміз.
Келесі мысал келтірейік.

00:36:25.000 --> 00:36:35.913
Егер сіздің сервисіңіз 12 айда 12 рет
бұзылса, бұл сіздің жүйеңіз соншалықты

00:36:35.937 --> 00:36:46.849
сенімді емес екенін білдіреді.
Ал 12 айды 12 апатқа бөлу арқылы біз өткен және

00:36:46.873 --> 00:36:58.425
болашақта өзімізді талдап, салыстыра
аламыз және жүйенің сенімдірек бола ма, жоқ

00:36:58.449 --> 00:37:10.000
па екенін түсінеміз немесе оны басқа
анықтамалық IT-жүйелермен салыстыра аламыз.

00:37:10.000 --> 00:37:14.000
Жүйеңіздің сенімділігін есептеудің
тағы бір тәсілі бар.

00:37:14.000 --> 00:37:24.000
Сізде дүйсенбіден жұмаға дейін тұрақты
және сенбіде апатқа ұшыраған жүйе бар делік.

00:37:24.000 --> 00:37:28.000
Сенбі және жексенбіде сіз өз сервисіңізді
қалпына келтіру үшін жұмыс жасайсыз.

00:37:28.000 --> 00:37:33.308
Содан кейін сіз дүйсенбіге дейін қалпына
келтіресіз, ал келесі аптада апта сайын

00:37:33.332 --> 00:37:39.000
дәл солай қайталанады. Осылайша,
сіздің жүйеңіз аптасына 5 күн жұмыс істейді.

00:37:39.000 --> 00:37:48.738
Бұл дегеніміз, слайдтың оң жағында
System Brought Online, яғни жүйе қол жетімді

00:37:48.762 --> 00:37:58.000
және System Fails-ке көрсеткіш, яғни
апатқа дейінгі орташа уақыт - 5 күн.

00:37:58.000 --> 00:38:08.316
Әрі қарай, бізде төменгі жағында System
Fails-тен System Repaired-ке дейінгі келесі көрсеткіш

00:38:08.340 --> 00:38:18.207
бар, бұл сіздің жүйеңізді қалпына келтіруге
кететін орташа уақыт. Біздің жағдайда бұл 2

00:38:18.231 --> 00:38:28.604
күн. Егер Mean Time Between Failures осы екеуінің
қосындысы деп айтсақ, онда апат арасындағы

00:38:28.628 --> 00:38:39.000
орташа уақыт 5 күн плюс 2 күнді құрайды,
сондықтан 7 күн - біздің сенімділік көрсеткішіміз.

00:38:39.000 --> 00:38:44.000
Келесі терминге көшейік.
Бұл Availability, яғни қол жетімділік.

00:38:44.000 --> 00:38:48.000
Бұл reliability, яғни сенімділікпен
тығыз байланысты.

00:38:48.000 --> 00:38:54.488
Егер сіздің жүйеңіз сенімді болмаса, жүйеңіз
белгілі бір уақыт ішінде істен шығады. Егер сіздің

00:38:54.512 --> 00:39:01.000
жүйеңіз жұмыс істемесе, бұл сіздің пайдаланушыларыңыз
үшін қол жетімді емес дегенді білдіреді.

00:39:01.000 --> 00:39:08.988
Қол жетімділік қалай өлшенеді?
Стандартты формула - бұл жүйенің дұрыс жұмыс

00:39:09.012 --> 00:39:17.000
істеген уақытының жалпы уақытқа, біз
өлшейтін жалпы кезеңге бөлінген мөлшері.

00:39:17.000 --> 00:39:24.153
Жүйенің қол жетімділігін 
сипаттайтын екі нұсқа бар. Бұл тоғыздар

00:39:24.177 --> 00:39:30.988
саны. Мысал ретінде, егер сіз 
қол жетімділіктің бес тоғызын

00:39:31.012 --> 00:39:37.535
айтсаңыз, бұл сіздің жүйеңіз
99,999% уақытында қол жетімді

00:39:37.559 --> 00:39:45.000
екенін білдіреді. Тағы бір нұсқа - бұл
 пайызды тікелей белгілеу.

00:39:45.000 --> 00:39:59.000
Мысалы, біздің жүйе бір жыл ішінде
99,9% қол жетімді деп айтамыз.

00:39:59.000 --> 00:40:03.988
Алдыңғы терминмен, яғни
Availability, байланысты келесі термин,

00:40:04.012 --> 00:40:09.000
High availability болып табылады,
яғни жоғары қол жетімділік.

00:40:09.000 --> 00:40:16.998
Бұл термин инфрақұрылымның жекелеген компоненттерінің
өнімділігінің төмендеуіне қарамастан, жұмысын

00:40:17.022 --> 00:40:21.541
жалғастыратын және сіздің
соңғы пайдаланушыларыңыз үшін

00:40:21.565 --> 00:40:26.000
қол жетімді болып қалатын
инфрақұрылымдарға қатысты.

00:40:26.000 --> 00:40:34.847
Бұл қалпына келтіру мүмкіндігінше тез
жүретін инфрақұрылымдар және кез-келген

00:40:34.871 --> 00:40:45.000
әкімшілік жұмысты орындау немесе жүйені
жаңарту үшін қажетті уақыт барынша азайтылады.

00:40:45.000 --> 00:40:54.000
Адамның араласуы да азайтылады немесе
толығымен алынып тасталды.

00:40:54.000 --> 00:41:04.000
Бұл инфрақұрылымдар әдетте апаттан қалпына
келтіру үшін бір минуттан аз уақыт кетеді.

00:41:04.000 --> 00:41:12.000
Бұл кестеде инфрақұрылымның
қолжетімділік деңгейлері көрсетілген.

00:41:12.000 --> 00:41:20.488
Біз 99% қол жетімділік туралы айтатын
болсақ, және бір жыл туралы айтсақ, 1%

00:41:20.512 --> 00:41:29.000
жағдайда жүйе қол жетімсіз болуы мүмкін,
ол 3 күн және 15 сағатты құрайды.

00:41:29.000 --> 00:41:34.596
Бұл жағдайда, егер сізге әртүрлі
жұмыстарды немесе жүйенің қол

00:41:34.620 --> 00:41:40.216
жетімділігіне байланысты кенеттен
туындаған проблемаларды шешу

00:41:40.240 --> 00:41:45.833
үшін барлығы 3 күн мен 15
сағаттан аспайтын уақыт қажет болса,

00:41:45.857 --> 00:41:52.000
онда сіздің инфрақұрылымыңыз
уақыттың 99% қол жетімді деп айтамыз.

00:41:52.000 --> 00:41:58.725
Егер біз тағы бір тоғызды қоссақ,
ол 99,9 болса, онда жүйе бір жыл

00:41:58.749 --> 00:42:06.000
ішінде 8 сағат 45 минут ішінде қол
жетімсіз болуы мүмкін.

00:42:06.000 --> 00:42:13.232
Сонымен, тағы тоғыз қосу
арқылы сіз біздің қол жетімділіктің

00:42:13.256 --> 00:42:20.488
ең жоғары деңгейіне жететінімізді 
көре аласыз. Біз 5 тоғыздық

00:42:20.512 --> 00:42:28.235
деп айтатын болсақ, бұл 99.999%
қолжетімділік, яғни инфрақұрылым

00:42:28.259 --> 00:42:35.000
бір жыл ішінде 5 минут бойы
қол жетімсіз болуы мүмкін.

00:42:35.000 --> 00:42:44.000
Сіздің инфрақұрылымыңыздың қол жетімділігіне
әсер ететін факторларды қарастырайық.

00:42:44.000 --> 00:42:51.283
Ең бірінші фактор - төзімділік (бұзылуға тұрақтылық).
Бұл кейбір компоненттер сәтсіз болса

00:42:51.307 --> 00:42:59.000
да, қосымшаңыздың жұмысын жалғастыруға мүмкіндік
беретін кірістірілген резервтеуді білдіреді.

00:42:59.000 --> 00:43:10.577
Қарапайым тілмен айтқанда, жүйенің негізгі
ресурстары құлаған кезде ауыса алатын резервтік

00:43:10.601 --> 00:43:24.000
ресурстардың болуы. Резервтеудің мысалы бір негізгі
деректер базасымен бірге бір read реплика болады.

00:43:24.000 --> 00:43:27.988
Негізгі дерекқорға бірдеңе
болған кезде автоматты ауысу орын

00:43:28.012 --> 00:43:32.000
алады және сіздің read реплика
негізгі дерекқорға айналады.

00:43:32.000 --> 00:43:38.085
Әрі қарай жалғастырайық.
Келесі фактор - recoverability, яғни апаттан

00:43:38.109 --> 00:43:45.000
кейін автоматты түрде қалпына келетін
инфрақұрылымда нақты логиканың болуы.

00:43:45.000 --> 00:43:51.488
Мұнда, бұл жұмыс істеуі үшін, жүйе,
егер сәтсіздік орын алса, қандай

00:43:51.512 --> 00:43:58.000
компонент жұмысын
тоқтатқанын дұрыс анықтауы керек.

00:43:58.000 --> 00:44:11.488
Әрі қарай, бұзылулардың белгілі бір түрлері
үшін сізде сәйкесінше жауап беретін механизмдер

00:44:11.512 --> 00:44:18.244
болуы керек, не инфрақұрылымды
өзгертетін немесе сәтсіздікке ұшыраған

00:44:18.268 --> 00:44:25.000
компоненттерді ауыстыру үшін
қосымша ресурстарды сұрау.

00:44:25.000 --> 00:44:31.000
Үшінші фактор - scalability, яғни
автомасштабтау мүмкіндігі.

00:44:31.000 --> 00:44:42.000
Сіздің жүйеңіз сервисіңіздің жүктемесіне
байланысты мөлшерде өсе алуы керек.

00:44:42.000 --> 00:44:49.587
Сондай-ақ, бұл жерде сіздің
инфрақұрылымыңыздың қолжетімділігін шексіз арттыру

00:44:49.611 --> 00:44:57.000
мүмкін емес екенін атап өткен жөн,
өйткені бұл қосымша шығындарға әкеледі.

00:44:57.000 --> 00:45:05.000
Сондықтан қол жетімділік әрқашан ойын секілді,
сіздің инфрақұрылымыңызға кететін шығындар

00:45:05.000 --> 00:45:13.000
мен қол жетімділік пайызы арасындағы
теңгерімді талдау болып табылады.

00:45:13.000 --> 00:45:17.000
Осылайша біз дәрістің екінші
бөлімінің соңына жеттік.

00:45:17.000 --> 00:45:24.000
Біз сенімділік, қолжетімділік, жоғары қолжетімділік
сияқты маңызды терминдермен таныстық және сіздің

00:45:24.000 --> 00:45:31.000
инфрақұрылымыңыздың қолжетімділігіне
әсер ететін факторларды талқыладық.

00:45:31.000 --> 00:45:38.026
Біз бүгінгі дәрісіміздің соңғы бөліміне
жеттік және сізді AWS Trusted Advisor

00:45:38.050 --> 00:45:45.000
сервисімен таныстырамыз. Бұл сізге нақты 
уақыттағы ұсыныстар беретін сервис.

00:45:45.000 --> 00:45:56.988
Бұл ұсыныстар бес бағытқа бөлінген және сіздің
инфрақұрылымыңыз AWS Well-Architected Framework

00:45:57.012 --> 00:46:09.000
аясындаға белгілі бір best
practice-ке сәйкес келетіндігін айтады.

00:46:09.000 --> 00:46:13.507
Көріп отырғаныңыздай, ұсыныстар 
бес бағытқа бөлінеді. Бұл cost

00:46:13.531 --> 00:46:19.000
optimization, performance, security,
fault tolerance және service limits.

00:46:19.000 --> 00:46:24.000
Орындалған best practice саны
жасыл түспен көрсетілген.

00:46:24.000 --> 00:46:29.121
Әрі қарай, қызғылт сары
архитектураңызды best practice-ке

00:46:29.145 --> 00:46:35.000
сәйкес келтіру үшін түзету
керек best practice санын көрсетеді.

00:46:35.000 --> 00:46:50.000
Қызыл түс өте маңызды жағдайларды көрсетеді және
осы тармақтарға назар аудару және түзету ұсынылады.

00:46:50.000 --> 00:46:57.000
AWS Trusted Advisor ұсыныстардың
мысалдарын қарастырайық.

00:46:57.000 --> 00:47:05.000
Бірінші және ең танымал мысал - бұл Root
аккаунтында MFA қосу туралы ұсыныс.

00:47:05.000 --> 00:47:11.732
Тексеріс қалай өтейді?
Root аккаунты үшін MFA қосылмаған болса,

00:47:11.756 --> 00:47:18.488
alert (ескерту) іске қосылады және
сәйкес ұсыныс Root аккаунтыңыз

00:47:18.512 --> 00:47:25.244
үшін MFA құрылғысын, виртуалды
немесе аппараттық құрал нұсқасын

00:47:25.268 --> 00:47:32.000
қосу болып табылады.
Тағы бір нұсқа - Password policy тексеру.

00:47:32.000 --> 00:47:44.000
Егер сіздің парольдеріңізді басқару policy болмаса,
онда оны жасау туралы ұсыныс сәйкесінше болады.

00:47:44.000 --> 00:47:55.982
Келесі мысал Security топтарында, егер 2580 немесе 
443 порттарына кіруді қамтамасыз ететін ереже болса

00:47:56.006 --> 00:48:07.988
және сонымен бірге CIDR блогы /0, яғни бүкіл
Интернетті көрсетсе, онда alert іске қосылады және

00:48:08.012 --> 00:48:19.303
ұсыныс ретінде сізден осы ережелердің барлығын
жойып, тиісті порттарға тек белгілі бір компьютерге,

00:48:19.327 --> 00:48:32.000
яғни бір IP-мекенжайға немесе корпоративтік
ортаның CIDR блогына қол жеткізуді сұрайды.

00:48:32.000 --> 00:48:37.732
Тағы бір мысал EBS снапшоттарын қамтиды.
Ұсыныс сары түспен келеді,

00:48:37.756 --> 00:48:43.488
егер бізде 7-ден 30
күнге дейінгі снапшоттар болса,

00:48:43.512 --> 00:48:49.294
қызыл деңгей болса, бізде 30
күннен асқан снапшоттар немесе

00:48:49.318 --> 00:48:55.000
кейбір қатқыл дискілер үшін
снапшоттар жасалмаған болса.

00:48:55.000 --> 00:49:05.000
Осымен біз дәрістің соңғы бөлімінің соңына жеттік
және AWS Trusted advisor сервисімен таныстық.

00:49:05.000 --> 00:49:11.416
Бұл сіздің IT-инфрақұрылымыңыз Well-Architected
Framework аясындағы best practice-ке сәйкес

00:49:11.440 --> 00:49:19.000
келетіндігін нақты уақыт режимінде
тексеруге мүмкіндік беретін сервис.

00:49:19.000 --> 00:49:23.738
Осымен, біз дәрісіміздің
соңына жеттік. Біз Well-Architected Framework

00:49:23.762 --> 00:49:29.000
не екенін, бізге не үшін
керек екенін мұқият қарастырдық.

00:49:29.000 --> 00:49:34.157
Әрі қарай, біз сенімділік пен қол
жетімділік сияқты кейбір маңызды

00:49:34.181 --> 00:49:39.000
терминдерді және олардың қалай
өлшенетінін қарастырдық.

00:49:39.000 --> 00:49:44.316
Соңында біз инфрақұрылымымыздың
Well-Architected Framework-пен сәйкестігін

00:49:44.340 --> 00:49:49.000
автоматты түрде тексеретін
Trusted advisor сервисімен таныстық.

00:49:49.000 --> 00:49:54.251
Қосымша ақпарат алғыңыз келсе,
бүгінгі дәрісте қарастырылған тақырыптар

00:49:54.275 --> 00:49:59.000
туралы көбірек білу үшін келесі
сілтемелерді пайдалана аласыз.

00:49:59.000 --> 00:50:09.000
Сіз қарастырған сервистер мен терминдер
туралы жақсы түсінікке ие болдыңыз деп үміттенемін.

00:50:09.000 --> 00:50:25.000
Назарларыңызға рахмет.
Келесі белсенділіктерімізде көріскенше!