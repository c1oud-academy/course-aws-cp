WEBVTT

00:00:00.000 --> 00:00:06.000
Қайырлы күн, құрметті студенттер! Сізді
келесі дәрісте көргеніме қуаныштымын.

00:00:06.000 --> 00:00:12.988
Бүгінгі дәрістің тақырыбы — Дерекқор.
Дерекқорға қатысты AWS сервистері туралы

00:00:13.012 --> 00:00:20.000
сөйлесеміз. Жарайды, бастайық.
Біздің бүгінгі дәрісіміз төрт бөлімнен тұрады.

00:00:20.000 --> 00:00:27.000
Бірінші Amazon Relational Database Service,
қысқаша Amazon RDS туралы айтатын боламыз.

00:00:27.000 --> 00:00:33.000
Келесі - Amazon DynamoDB, NoSQL шешімі.
Кейін - Amazon Redshift.

00:00:33.000 --> 00:00:38.982
Және соңында, AWS-тің in-house
шешімі туралы сөйлесеміз. Бұл

00:00:39.006 --> 00:00:44.988
Amazon Aurora дерекқоры.
Біз Amazon-ның ең танымал дерекқор

00:00:45.012 --> 00:00:50.641
сервисінен, Amazon Relational
Database Service сервисінен

00:00:50.665 --> 00:00:57.000
бастаймыз. Көбінесе сіз оны 
Amazon RDS атауымен кездестіресіз.

00:00:57.000 --> 00:01:05.000
Бұл сізге managed реляционды дерекқор
шешімдерін ұсынатын сервис.

00:01:05.000 --> 00:01:12.000
Осылайша, дерекқорды басқару
тапсырмаларының көпшілігі AWS-ке беріледі.

00:01:12.000 --> 00:01:17.488
Мұнымен айналысудың қажеті жоқ, ал
сізде негізгі бизнес міндеттеріңізге назар

00:01:17.512 --> 00:01:23.000
аударуға мүмкіндігіңіз болады.
Сонымен, managed және unmanaged дегеніміз не?

00:01:23.000 --> 00:01:29.488
S3 сервисін мысалға алып талдап
көрейік, атап айтқанда S3 ішіндегі

00:01:29.512 --> 00:01:36.000
feature, ол бізге static website
hosting орнатуға мүмкіндік береді.

00:01:36.000 --> 00:01:46.988
Бір жағынан жергілікті провайдер бар деп елестетіп
көрейік. Сіз дерекқорды, бір серверді сатып аласыз.

00:01:47.012 --> 00:01:58.000
Серверде сіз веб-серверді орнатып, сайтыңыздың
мазмұнын жүктеп, сайтты орналастыра бастайсыз.

00:01:58.000 --> 00:02:11.945
Веб-сайтыңызды осы виртуалды машинада орнату 
кезінде сіз жүктемені теңестіру, веб-сервердің

00:02:11.969 --> 00:02:27.000
өзін конфигурациялау және автомасштабтау сияқты
көптеген кеңейтілген опциялардан өтуіңіз керек.

00:02:27.000 --> 00:02:31.718
Яғни, егер жүктеме көбейсе, сіз қандай
да бір жолмен пайдаланушыларыңызды

00:02:31.742 --> 00:02:36.000
азайтасыз немесе барлық
пайдаланушыларыңызға қызмет көрсетесіз.

00:02:36.000 --> 00:02:41.754
Бұл сізге көбірек сыйымдылық қажет
екенін және виртуалды инстанстардың саны

00:02:41.778 --> 00:02:48.000
автоматты түрде артатынын білдіреді.
Бұл өз бетіңізше шешуіңіз керек тармақтар.

00:02:48.000 --> 00:02:54.382
Осы уақытқа дейін біз статикалық
веб-сайтты unmanaged түрде

00:02:54.406 --> 00:03:02.000
орналастырудың мысалы туралы
айттық, яғни сіз бәрін өзіңіз жасайсыз.

00:03:02.000 --> 00:03:05.488
Егер біз managed шешім туралы
айтатын болсақ, мысал ретінде Amazon

00:03:05.512 --> 00:03:09.000
S3-ті айтуға болады, атап
айтқанда feature static website hosting.

00:03:09.000 --> 00:03:14.488
Минималды түзетулер жасаған кезде, сіз
өзіңіздің объектілеріңізді, яғни веб-сайтыңыздың

00:03:14.512 --> 00:03:20.000
мазмұнын S3 bucket-ке жүктейсіз, және сіздің
веб-сайтыңыз бапталып, қол жетімді болады.

00:03:20.000 --> 00:03:24.668
Веб-серверді инстанста орнатудың
қажеті жоқ және автомасштабтаумен

00:03:24.692 --> 00:03:29.000
айналысудың қажеті жоқ, себебі
оның бәрі ішінде орнатылған.

00:03:29.000 --> 00:03:41.000
Сондай-ақ, қол жетімділік үшін қосымша
құралдарды талдап,  баптаудың қажеті жоқ.

00:03:41.000 --> 00:03:47.014
Amazon S3 оның әрқашан қол жетімді
болуын, қателікке бейімділігі төмен,

00:03:47.038 --> 00:03:54.000
автоматты түрде масштабталуын қамтамасыз
етеді, сол үшін сәйкесінше төлем алады.

00:03:54.000 --> 00:04:01.488
Бірақ сіздің сайтыңызға байланысты, сіздің
сайтыңыздағы жүктемеге байланысты бұл

00:04:01.512 --> 00:04:09.000
шешім тиімді немесе тиімсіз болуы мүмкін.
Мұны нақты мысалмен қарастырған жөн.

00:04:09.000 --> 00:04:17.108
Бірақ веб-сайтты орнатуға уақыт
жоғалтпағаныңыз сізге бірнеше

00:04:17.132 --> 00:04:27.000
адам-сағатты үнемдеді. Және басынан
Managed шешім тиімді екенін көресіз.

00:04:27.000 --> 00:04:32.897
Amazon RDS-ке оралсақ, ол
Managed шешім ретінде әрекет етеді.

00:04:32.921 --> 00:04:40.000
Unmanaged шешім ретінде EC2
инстансында дерекқорды орнату әрекет етеді.

00:04:40.000 --> 00:04:45.000
Бұл жағдайда сіз осы дерекқорды орнатудың
барлық қадамдарынан өз бетіңізше өтесіз.

00:04:45.000 --> 00:04:50.732
Сіз оны масштабтауға, құлдырауға
жауап беру үшін және, тиісінше, оның

00:04:50.756 --> 00:04:56.488
қол жетімділігі үшін дербес жауаптысыз.
Реляционды дерекқорларды өз

00:04:56.512 --> 00:05:01.661
бетіңізше орнату кезінде туындайтын
қиындықтарды егжей-тегжейлі

00:05:01.685 --> 00:05:08.000
қарастырайық. Мұның бәрі барлық
қолдаудың сізге артылатындығынан басталады.

00:05:08.000 --> 00:05:13.371
Әрі қарай, барлық
бағдарламаларды, патчтарды және

00:05:13.395 --> 00:05:20.000
қауіпсіздік патчтарын теңшеу
және орнату да сізге қатысты.

00:05:20.000 --> 00:05:29.000
Үшіншісі - сақтық көшірмелерді орнату және
дерекқорды қалпына келтіру процесін орнату.

00:05:29.000 --> 00:05:41.000
Егер біз масштабтау туралы айтатын болсақ, онда
AWS бұлт провайдерімен шексіз масштабтауға болады.

00:05:41.000 --> 00:05:47.000
Себебі біз дерекқорлардың көшірмелері мен
көшірмелерінің қажетті санын сұрай аламыз.

00:05:47.000 --> 00:05:53.000
Біз сондай-ақ тігінен масштабтай аламыз, бұл біздің
дерекқорымыздың қуаттылығын арттыруды білдіреді.

00:05:53.000 --> 00:06:01.000
Бұл жергілікті деректер орталығына
қарағанда әлдеқайда жылдам болады.

00:06:01.000 --> 00:06:06.563
Себебі сізге тек дерекқордың түрін
өзгерту керек, оны қайта іске қосу керек

00:06:06.587 --> 00:06:12.000
және сол дерекқор іске қосылады,
бірақ бұл жолы жаңа, қуатты инстанста.

00:06:12.000 --> 00:06:18.705
Сервер қауіпсіздігі мәселелері
ғана емес, сонымен қатар

00:06:18.729 --> 00:06:26.803
деректер қауіпсіздігі, сонымен
қатар амалдық жүйені, қауіпсіздік

00:06:26.827 --> 00:06:34.902
патчтарын, амалдық жүйенің
патчтарын баптау, орнату - бұл барлық

00:06:34.926 --> 00:06:43.000
процестерді, үлкен блоктар
секілді, сіз өзіңіз жасауыңыз керек.

00:06:43.000 --> 00:06:50.625
Бұл слайдта сіз жергілікті деректер
орталығынан бастап, содан кейін EC2 виртуалды

00:06:50.649 --> 00:06:57.988
серверінде хостингтен, Amazon RDS
managed шешіміне дейінгі үш түрлі дерекқор

00:06:58.012 --> 00:07:05.542
хостинг опциясын көресіз. Сіз жұмыстар
тізімі барлық үш нұсқа үшін бірдей екенін

00:07:05.566 --> 00:07:13.000
көре аласыз, ал көк түспен белгіленгендер
AWS-ке берілетін жұмысты көрсетеді.

00:07:13.000 --> 00:07:18.512
Дәстүрлі хостинг, дәстүрлі
деректер орталығы туралы айтатын

00:07:18.536 --> 00:07:25.000
болсақ, онда дерекқорды басқарудың
барлық жұмыстары сізге беріледі.

00:07:25.000 --> 00:07:33.000
Ол үшін жеке адам, дерекқор бойынша маман бөлінеді,
ол осы тармақтардың әрқайсысын өз бетінше жасайды.

00:07:33.000 --> 00:07:45.000
Келесі нұсқа - EC2 виртуалды серверінде хостинг
туралы айтқанда, AWS-ке соңғы екі нұсқаны береміз.

00:07:45.000 --> 00:07:50.000
Неге? Себебі бұл екі нұсқа аппараттық
құралдармен жұмыс істеуге байланысты.

00:07:50.000 --> 00:07:56.062
AWS қауіпсіздік мақсатында ешкімді өзінің
деректер орталықтарына жібермейтіндіктен,

00:07:56.086 --> 00:08:02.000
ол барлығын мүмкіндігінше тиімді жұмыс
істеу үшін автоматтандырды және баптады.

00:08:02.000 --> 00:08:10.000
Аппараттық құралға қатысты барлық
нәрсені де AWS клиенттерінен өзіне алады.

00:08:10.000 --> 00:08:16.092
Аппараттық құралға қатысы жоқ барлық
нәрсе сізде қалады және сіз осы виртуалды

00:08:16.116 --> 00:08:23.000
сервердегі амалдық жүйені, дерекқорды,
қосымшаларды және т.б. өзіңіз баптауыңыз керек.

00:08:23.000 --> 00:08:29.000
Үшінші нұсқа туралы айтатын
болсақ, дерекқорды басқару

00:08:29.000 --> 00:08:34.000
тапсырмаларының көпшілігі
AWS-ке берілгенін көресіз.

00:08:34.000 --> 00:08:40.141
Қалғаны - Application
optimization, оны сіз өзіңіз жасайсыз

00:08:40.165 --> 00:08:45.988
және төмендегі барлық
жұмысты дерекқор инстансын кіріс

00:08:46.012 --> 00:08:52.365
ретінде орнатқан кезде жібере
аласыз, және олар AWS жағындағы

00:08:52.389 --> 00:08:58.000
барлық жұмыстарды
автоматтандыру кезінде ескеріледі.

00:08:58.000 --> 00:09:04.982
Amazon RDS жағдайында IT
ресурсы дерекқор инстансы болып

00:09:05.006 --> 00:09:11.988
табылады. Ол оның class-ы мен 
storage-імен анықталады.

00:09:12.012 --> 00:09:18.679
Class туралы айтқанда, біз
қанша CPU, қанша жедел жады

00:09:18.703 --> 00:09:26.000
және қандай желілік арна
қажет екенін қосымша көрсетеміз.

00:09:26.000 --> 00:09:35.488
Storage туралы айтқанда, біз SSD немесе
HDD қатқыл дискісінің түрін көрсетеміз,

00:09:35.512 --> 00:09:45.000
сонымен қатар осы қатқыл дискілерде
қанша гигабайт жад қажет екенін көрсетеміз.

00:09:45.000 --> 00:09:52.655
Егер біз қолдайтын қозғалтқыштар
туралы айтатын болсақ, бұл оң жақтағы

00:09:52.679 --> 00:10:01.000
тізім, MySQL, Amazon Aurora, Microsoft
SQL, Postgres, MariaDB және Oracle.

00:10:01.000 --> 00:10:09.488
Енді Amazon RDS ішінде қол жетімді опцияны
қарастырайық. Бұл read репликалар. Read репликалар -

00:10:09.512 --> 00:10:18.000
дерекқор инстансының толық көшірмесі бапталған
кезде, бірақ онда тек оқу операциялары қолжетімді.

00:10:18.000 --> 00:10:25.617
Сіздің негізгі дерекқорыңызда жазу операциясы
орын алған кезде, барлық өзгерістер жазылады

00:10:25.641 --> 00:10:33.000
және барлық read репликаларға асинхронды
түрде жіберіледі және сол жерде қолданылады.

00:10:33.000 --> 00:10:43.000
Осылайша, қысқа уақыттан кейін сіздің read
репликаларыңыз негізгі дерекқормен бірдей болады.

00:10:43.000 --> 00:10:54.000
Бұл опция MySQL, MariaDB, Postgres және
Amazon Aurora дерекқорлары үшін қол жетімді.

00:10:54.000 --> 00:11:01.258
Әрбір read репликаларды сұраныс бойынша
немесе негізгі дерекқорға бірдеңе болса,

00:11:01.282 --> 00:11:09.000
ол қол жетімсіз болған жағдайда негізгі
дерекқор деңгейіне дейін жаңартуға болады.

00:11:09.000 --> 00:11:14.419
Бұл опция disaster recovery орнату
кезінде жиі қолданылады, сіздің

00:11:14.443 --> 00:11:19.695
инфрақұрылымыңыз екі аймақта
орнатылған кезде, негізгі аймаққа

00:11:19.719 --> 00:11:25.946
бірдеңе болған кезде, сіздің қосымшаңыздың
барлық трафигі пайдаланушыларға

00:11:25.970 --> 00:11:31.000
қызмет көрсетуді жалғастыру
үшін басқа аймаққа жіберіледі.

00:11:31.000 --> 00:11:36.278
Аймақ өте сирек істен шығады,
бірақ ондай жағдайлар болып

00:11:36.302 --> 00:11:41.579
тұратындықтан, өте ірі
компаниялар DR-ге қол жеткізе алады,

00:11:41.603 --> 00:11:46.462
бірақ disaster recovery-ді
бір рет орнату арқылы олар

00:11:46.486 --> 00:11:52.000
қосымшаның әрқашан қол
жетімді болатынына кепілдік береді.

00:11:52.000 --> 00:12:02.100
Айта кету керек, read репликаларды басқа
аймақта баптауға болады. Осылайша, негізгі аймақта

00:12:02.124 --> 00:12:12.000
сізде негізгі дерекқор инстансы бар, ал
резервтік аймақта сіз read репликаны баптайсыз.

00:12:12.000 --> 00:12:18.482
Бүкіл аймақ істен шыққан кезде
Amazon RDS те істен шығады және сіздің

00:12:18.506 --> 00:12:24.988
негізгі дерекқор инстансы қол 
жетімді болмайды. Бұл жағдайда екінші

00:12:25.012 --> 00:12:31.157
аймақтағы read реплика автоматты
түрде негізгі дерекқор деңгейіне

00:12:31.181 --> 00:12:38.000
дейін жаңартылады және жазу
операциялары сол жерде қол жетімді болады.

00:12:38.000 --> 00:12:48.000
Енді сізде read репликаларды қашан қолдану керек
деген сұрақ туындауы мүмкін. Атауында бәрі айқын.

00:12:48.000 --> 00:12:57.231
Егер сізде негізінен оқуды іске қосатын
дерекқор болса, read репликаны теңшеу

00:12:57.255 --> 00:13:06.000
арқылы оқу жүктемелерін бірнеше
дерекқор инстанстарына таратуға болады.

00:13:06.000 --> 00:13:14.488
Бұл дерекқордың жүктемесін азайтады және егер
сіз барлық оқу операцияларын read репликаларына

00:13:14.512 --> 00:13:23.000
таратып, негізгі дерекқорды босатсаңыз, жазу
операциясы үшін толық қол жетімді болуы мүмкін.

00:13:23.000 --> 00:13:28.655
Тағы бір мысал, сізде белгілі
бір себептермен іске қосылатын

00:13:28.679 --> 00:13:35.007
күрделі сұраулар болған кезде.
Бұл, мысалы, қосымша пайдаланушысы

00:13:35.031 --> 00:13:41.700
кейбір функцияларды іске қосқан
кезде болуы мүмкін және бұл мүмкіндік

00:13:41.724 --> 00:13:48.000
өте қымбат және дерекқорлардағы
күрделі сұрауларды іске қосады.

00:13:48.000 --> 00:13:54.500
Басқа мысалда, сіз күнделікті негізде,
күніне бір рет, мүмкін күніне бірнеше рет,

00:13:54.524 --> 00:14:02.000
басшылыққа есеп беру мақсатында деректерді
жинау үшін күрделі сұрауларды орындау бапталған.

00:14:02.000 --> 00:14:11.000
Яғни, барлық ақпарат жиналады, жинақталады және 
есеп түрінде құрастырылып, одан әрі беріледі.

00:14:11.000 --> 00:14:18.988
Кез келген күрделі сұраулар дерекқорға
жүктеме түсіретіндіктен, сізде бір дерекқор

00:14:19.012 --> 00:14:27.000
бар, бұл бір бүтін инстанс, бұл күрделі
сұраулар қарапайым сұрауларға әсер етеді.

00:14:27.000 --> 00:14:33.000
Осылайша, қарапайым сұраулар да
жұмыс істей береді, бірақ баяу болады.

00:14:33.000 --> 00:14:43.799
Сондықтан, best practice - read жұмыс
жүктемелерінің көп бөлігін read репликаға ауыстыру

00:14:43.823 --> 00:14:54.000
және жазу операцияларын жазу операциялары
қол жетімді негізгі дерекқорда қалдыру.

00:14:54.000 --> 00:14:59.988
Дегенмен, репликация процесі
асинхронды екенін әрқашан есте сақтаңыз,

00:15:00.012 --> 00:15:06.000
сондықтан барлық read операцияларды
read репликаға ауыстыруға болмайды.

00:15:06.000 --> 00:15:14.329
Бірінші қадам ретінде, read жазбаның
кейбір бөлігін read репликаға ауыстыруға

00:15:14.353 --> 00:15:24.000
болатындығын көргенде, әрқашан дерекқор
инстансының қуаттылығын арттыруды қарастырыңыз.

00:15:24.000 --> 00:15:28.478
Неліктен read реплика
екінші не үшінші нұсқа болып

00:15:28.502 --> 00:15:33.988
табылады, бірақ біріншісі
емес, өйткені шұғыл қажеттіліксіз

00:15:34.012 --> 00:15:38.994
қосымша read реплика сіздің
Amazon RDS шығындарыңызды

00:15:39.018 --> 00:15:44.000
екі есе арттырады, себебі
сізде екі бірдей инстанс бар.

00:15:44.000 --> 00:15:49.316
Бұл жағдайда барлық артықшылықтар
мен кемшіліктерді қарастырғаннан

00:15:49.340 --> 00:15:54.000
кейін, сіз read репликаларды
қолдануды бастауыңыз керек.

00:15:54.000 --> 00:16:05.000
Amazon RDS-ті қашан пайдалану және пайдаланбау
керектігін пункт бойынша қарастырайық.

00:16:05.000 --> 00:16:12.428
Amazon RDS-ті пайдаланбау керек деп айтқан
кезде, EC2 инстансында дерекқорларды орналастырудан

00:16:12.452 --> 00:16:19.000
немесе басқа қолайлы AWS сервисін
пайдаланудан бастап бірнеше түрлі нұсқалар бар.

00:16:19.000 --> 00:16:23.238
Amazon RDS-ті пайдалану керек
болған жағдайларды қарастырайық,

00:16:23.262 --> 00:16:27.988
бізде өте күрделі сұраулар,
транзакциялар болған кезде қолданамыз.

00:16:28.012 --> 00:16:32.528
Күрделі сұраулар бірнеше join-дар
бар сұрауларды білдіреді, яғни

00:16:32.552 --> 00:16:37.000
сіз бір уақытта бірнеше
кестелермен жұмыс жасайсыз.

00:16:37.000 --> 00:16:43.000
Содан кейін, егер сізде
30 000-ға дейін IOPS болса,

00:16:43.000 --> 00:16:49.000
бұл осы дерекқорға секундына
жазу және оқу операциясы.

00:16:49.000 --> 00:16:56.466
Әрі қарай, егер сізге жоғары сенімділік
қажет болса және сізге тек бір дерекқор

00:16:56.490 --> 00:17:03.540
инстансы жеткілікті болса. Кейбір
жағдайларда, сізде өте үлкен көлемді

00:17:03.564 --> 00:17:10.770
деректер болған кезде, Amazon RDS қолайлы
емес, өйткені сіздің деректеріңіз Big

00:17:10.794 --> 00:17:18.000
Data немесе құрылымдалмаған
үлкен деректер санатына енеді.

00:17:18.000 --> 00:17:26.000
Онда басқа қолайлы сервистерді
пайдалану ұсынылады.

00:17:26.000 --> 00:17:32.232
Amazon RDS-ті қолдануға
болмайтын жағдайлар туралы айтатын

00:17:32.256 --> 00:17:38.488
болсақ, сізде IOPS көлемі, жазу
және оқу операциялары үлкен

00:17:38.512 --> 00:17:44.744
болған кезде, мысалы, секундына
150 000 жазу немесе одан да

00:17:44.768 --> 00:17:51.000
көп, бұл жағдайда сізде шын
мәнінде ауыр жүктемелер болады.

00:17:51.000 --> 00:18:00.000
S3 ішіндегі Data Lake параметрлерін немесе
Amazon Redshift сервисін қарастыру керек.

00:18:00.000 --> 00:18:05.732
Тағы бір мәселе - деректерді
shard-тарға бөлуге болатын кезде,

00:18:05.756 --> 00:18:11.205
бұл тәуелсіз деректер, олар
өз бетінше жұмыс істей алады,

00:18:11.229 --> 00:18:17.103
өздігінен қолданыла алады,
деректердің көлемі соншалықты үлкен

00:18:17.127 --> 00:18:23.000
болғандықтан, бұл деректерді
shard-тарға бөлуге тура келеді.

00:18:23.000 --> 00:18:33.488
Тағы бір мәселе - күрделі SQL сұрауларын
пайдаланудың қажеті жоқ кезде, бұл қарапайым GET және

00:18:33.512 --> 00:18:44.000
PUT операциялары, бұл жағдайда NoSQL дерекқорларын,
мысалы, DynamoDB сервисін қарастыру керек.

00:18:44.000 --> 00:18:52.127
Соңғы пункт - сіздің дерекқорыңызды дәл
баптау қажет болған кезде. Бұл жағдайда

00:18:52.151 --> 00:18:59.966
бұл опция Amazon RDS үшін қол жетімді
болмауы мүмкін, бұл сізге оны өзіңіз

00:18:59.990 --> 00:19:08.058
орналастыру немесе басқа AWS сервистерін 
қарастыруға мүмкіндігін береді. Енді

00:19:08.082 --> 00:19:17.000
Amazon RDS сервисін пайдаланудың жалпы
құнына әсер ететін факторларды қарастырайық.

00:19:17.000 --> 00:19:29.000
Біріншісі - дерекқордың жұмыс істейтін уақыты.
Дерекқорды тоқтатқан кезде төлем алынбайды.

00:19:29.000 --> 00:19:36.024
Дерекқорды орнаттық деп елестетіп көрейік, ол 4
сағат бойы іске қосылып тұрды, 4 сағаттан кейін сіз

00:19:36.048 --> 00:19:43.000
оны айдың соңына дейін тоқтаттыңыз, бұл жағдайда
сіз айдың соңында осы 4 сағат үшін есеп аласыз.

00:19:43.000 --> 00:19:48.740
Тағы бір мәселе, сіздің дерекқор
инстансыңыз неғұрлым үлкен

00:19:48.764 --> 00:19:55.000
және қуатты болса, соғұрлым ол
әр сағат сайын қымбатқа түседі.

00:19:55.000 --> 00:20:05.488
Деректер базасын сатып алудың екі
нұсқасы бар, бұл On-demand, біз дерекқорды

00:20:05.512 --> 00:20:16.000
қажетті уақыт ішінде іске қосқан кезде.
Біз тоқтатқан сәттен төлем алынбайды.

00:20:16.000 --> 00:20:27.488
Екінші нұсқа - Reserved Instances туралы айтсақ,
дерекқордың белгілі бір түрін 1 жыл немесе 3 жыл

00:20:27.512 --> 00:20:39.000
бойы қолданамыз деп айта аламыз, сондықтан AWS
қанша төлегенімізге байланысты жеңілдіктер береді.

00:20:39.000 --> 00:20:49.347
Reserved Instances, жоғарыда айтқанымыздай, аптасына
7 күн, тәулігіне 24 сағат тұрақты жұмыс жүктемесі

00:20:49.371 --> 00:20:59.000
болған кездегі опция болып табылады. Егер бұлай
болмаса, On-demand нұсқасында қалу ұсынылады.

00:20:59.000 --> 00:21:05.150
Тағы бір нұсқа, Amazon RDS сервисінің
құнына әсер ететін фактор, Deployment

00:21:05.174 --> 00:21:11.000
type, бұл қанша дерекқор инстанстары іске
қосылғанын көрсететін параметр.

00:21:11.000 --> 00:21:16.000
Деректер базасын бір availability аймағына
орналастырған кезде, бұл бір инстанс.

00:21:16.000 --> 00:21:22.488
Multiple AZ опциясын қосқанда, бірнеше
availability аймақтарында, әр аймақта

00:21:22.512 --> 00:21:29.000
бір дерекқор инстансы бапталынады.
Бұл жағдайда сіз әр инстанс үшін төлейсіз.

00:21:29.000 --> 00:21:37.988
Дерекқорды екі availability аймағында орналастырдық
делік. Осылайша, шығындар сәйкесінше бір

00:21:38.012 --> 00:21:47.000
availability аймағында іске қосылғаннан екі есе
көп болады. Бұған read replica опциясы да кіреді.

00:21:47.000 --> 00:21:52.488
Яғни, read replica - бұл деректер базасының
инстансы, бірақ жазу операцияларына тыйым

00:21:52.512 --> 00:21:58.000
салынады, дегенмен бұл аппараттық құрал
тұрғысынан толыққанды инстанс.

00:21:58.000 --> 00:22:05.000
Сіз осы нақты инстанс сипаттамаларына
сәйкес тарифі бойынша төлейсіз.

00:22:05.000 --> 00:22:25.000
Сонымен қатар, ескеру керек соңғы нәрсе - деректерді
тасымалдау, егер ол бір аймақта болса, төленбейді.

00:22:25.000 --> 00:22:34.336
Егер бізде outbound data transfer болса, яғни
басқа аймаққа, біз бұл деректерді AWS-тен

00:22:34.360 --> 00:22:45.000
жергілікті түрде сұраймыз, бұл жағдайда outbound
data transfer үшін төлем тарифке сәйкес алынады.

00:22:45.000 --> 00:22:53.000
Осымен біз бірінші бөлімнің соңына жеттік,
Amazon RDS сервисін қарастырдық.

00:22:53.000 --> 00:22:58.724
Ең маңызды сәттерге назар аударайық. Біріншісі - 
бұл managed service. Осылайша әкімшілік

00:22:58.748 --> 00:23:05.000
тапсырмалардың көпшілігі AWS-ке беріледі, және 
біз бизнес міндеттерімізге назар аудара аламыз.

00:23:05.000 --> 00:23:15.000
Amazon RDS-пен жұмыс істеу үшін біз AWS Management
Console, AWS CLI, AWS SDK қолдана аламыз.

00:23:15.000 --> 00:23:26.000
Бұл managed шешім болғандықтан, масштабтау
және availability мәселелерін де AWS қабылдайды.

00:23:26.000 --> 00:23:30.171
Бізге бизнес талаптарын
қанағаттандыру үшін дерекқорымызды

00:23:30.195 --> 00:23:34.000
толығымен теңшейтін
кейбір кірістерді енгізу қажет.

00:23:34.000 --> 00:23:41.105
Егер біз қолдау көрсетілетін қозғалтқыштар
туралы айтатын болсақ, бұл Amazon Aurora, AWS-тің

00:23:41.129 --> 00:23:48.000
in-house шешімі, одан кейін Postgres, MySQL,
MariaDB, Oracle және Microsoft SQL Server.

00:23:48.000 --> 00:23:52.689
Енді біз дәрісміздің екінші
бөлігіне жеттік және мұнда

00:23:52.713 --> 00:23:58.000
Amazon DynamoDB NoSQL шешімі
туралы айтатын боламыз.

00:23:58.000 --> 00:24:04.286
Бұл сервисті талдауды бастамас бұрын,
реляционды дерекқордың реляционды емес

00:24:04.310 --> 00:24:11.000
дерекқордан, яғни NoSQL дерекқорынан 
қалай ерекшеленетінін қарастырайық.

00:24:11.000 --> 00:24:16.988
Егер біз сақтау бірліктері туралы айтатын
болсақ, relational database жағдайында

00:24:17.012 --> 00:24:23.000
бізде кестелер бар, кестелерде жазбалар
бар және әр жазбада баған бар.

00:24:23.000 --> 00:24:30.000
Ол бекітілген, яғни осы кестенің
схемасы мен құрылымы бекітілген.

00:24:30.000 --> 00:24:38.000
Егер сіз жаңа баған қоссаңыз, ол
барлық жазбалар үшін қосылады.

00:24:38.000 --> 00:24:44.712
NoSQL дерекқорлары туралы
айтатын болсақ, біз белгілі бір кілт-мән

00:24:44.736 --> 00:24:51.000
құрылымымен жұмыс істейміз. Бұл жағдайда
біздің құрылымымыз динамикалық болады.

00:24:51.000 --> 00:25:00.668
Мысалы, бізде сәйкес мәндері бар белгілі бір кілттер
жиынтығы бар бір жазба болуы мүмкін, ал келесі

00:25:00.692 --> 00:25:05.834
жазбада кілттердің мүлдем басқа,
әр түрлі тізімі және сәйкесінше

00:25:05.858 --> 00:25:11.000
мәндері болуы мүмкін.
Осылайша, құрылым - динамикалық.

00:25:11.000 --> 00:25:15.597
Біз қалай сұрайтынымыз және деректермен
қалай жұмыс істейтініміз туралы айтқанда,

00:25:15.621 --> 00:25:21.000
реляционды дерекқор жағдайында
біз SQL тілін қолданамыз.

00:25:21.000 --> 00:25:28.000
Реляционды емес дерекқор туралы айтқанда,
біз GET және PUT операцияларын қолданамыз.

00:25:28.000 --> 00:25:35.000
Осылайша, өкінішке орай, біз NoSQL дерекқор
жағдайында күрделі операцияларды немесе күрделі

00:25:35.000 --> 00:25:42.000
сұрауларды жасай алмаймыз. Егер біз реляционды
дерекқорды масштабтау туралы айтатын болсақ,

00:25:42.000 --> 00:25:50.000
бұл бір нысан, бір дерекқор және масштабтау
тігінен орындалады. Яғни, осы нақты дерекқордың,

00:25:50.000 --> 00:25:56.000
атап айтқанда дерекқор орналастырылған
сервердің қуаттылығы артады.

00:25:56.000 --> 00:26:01.781
NoSQL шешімі туралы айтатын болсақ, бұл
жағдайда NoSQL дерекқорының ерекшелігі

00:26:01.805 --> 00:26:08.000
- көп дерек болуы мүмкін және сәйкесінше
бәрі көлденеңінен масштабталады.

00:26:08.000 --> 00:26:16.000
Біз shard-тармен жұмыс істей аламыз, яғни басқа
shard-тарға тәуелді емес деректер бөліктері.

00:26:16.000 --> 00:26:21.567
Осылайша, NoSQL дерекқоры
реляционды дерекқорлардан

00:26:21.591 --> 00:26:28.000
ондаған, жүздеген, мыңдаған
есе үлкен болуы мүмкін.

00:26:28.000 --> 00:26:31.624
Реляционды дерекқорларда
орналасқан деректердің өзі

00:26:31.648 --> 00:26:36.000
жеткілікті құрылымдалған және
анық деректер болып табылады.

00:26:36.000 --> 00:26:41.000
NoSQL дерекқорлары туралы айтатын болсақ,
деректер динамикалық және нақты құрылымы жоқ.

00:26:41.000 --> 00:26:47.185
Тиісінше, біз жартылай құрылымдалған
деректермен жұмыс істейміз.

00:26:47.209 --> 00:26:53.000
Реляционды дерекқор туралы
айтатын болсақ, бұл Amazon RDS.

00:26:53.000 --> 00:26:59.000
NoSQL дерекқорлары туралы айтатын
болсақ, бұл Amazon DynamoDB.

00:26:59.000 --> 00:27:05.281
Яғни, бұл NoSQL дерекқорларымен жұмыс
істеу үшін Managed және Serverless

00:27:05.305 --> 00:27:12.000
сервситерін ұсынатын шешім. Бұл 
дерекқордың көлемі іс жүзінде шексіз.

00:27:12.000 --> 00:27:17.988
Біз items-тармен жұмыс істейміз, яғни ол
реляционды дерекқордағы жолға ұқсас және әртүрлі

00:27:18.012 --> 00:27:24.000
атрибуттарды қамтуы мүмкін. Оларды әр жол
деңгейінде динамикалық түрде өзгертуге болады.

00:27:24.000 --> 00:27:29.488
DynamoDB-де болатын барлық
сұраулар Single-Digit Millisecond

00:27:29.512 --> 00:27:35.000
болып табылады, яғни олар
бірнеше миллисекунд ішінде өңделеді.

00:27:35.000 --> 00:27:42.143
DynamoDB бірнеше негізгі 
компоненттерден тұрады. Бұл кестелер,

00:27:42.167 --> 00:27:48.488
items және атрибуттар.
Кестелер - бұл items жиынтығы.

00:27:48.512 --> 00:27:54.771
Item - бұл кілттер мен мәндер
жиынтығынан тұратын JSON

00:27:54.795 --> 00:28:02.000
құжаты. Осылайша, атрибут осы 
құжаттағы кілт болып табылады.

00:28:02.000 --> 00:28:13.000
Бізде DynamoDB кестесінен деректерді
сұрауға болатын екі нұсқа бар.

00:28:13.000 --> 00:28:17.488
Біріншіден, біз оның primary
key, яғни бірегей кілтін қолдана

00:28:17.512 --> 00:28:22.000
аламыз және қажетті құжаттарды
тікелей жүктей аламыз.

00:28:22.000 --> 00:28:27.000
Бұл деректерді жүктеудің ең
арзан және жылдам әдісі.

00:28:27.000 --> 00:28:30.738
Екінші нұсқа - SCAN пайдалану,
яғни барлық items-терді,

00:28:30.762 --> 00:28:34.000
сәйкестіктерге арналған барлық
құжаттарды сканерлеу және

00:28:34.000 --> 00:28:39.536
сәйкес келетін барлық items-тер
пайдаланушыға қайтарылады.

00:28:39.560 --> 00:28:45.000
Бұл жағдайда бізде көп
мүмкіндіктер бар.

00:28:45.000 --> 00:28:51.000
Біз атрибуттарға, басқа негізгі емес
атрибуттарға қосымша шарттар қоя аламыз.

00:28:51.000 --> 00:28:57.488
Бірақ SCAN операциясы IT-ресурстарын
пайдалану тұрғысынан өте қымбат

00:28:57.512 --> 00:29:04.000
екенін атап өткен жөн, және,
тиісінше, ол ақшалай түрде де қымбат.

00:29:04.000 --> 00:29:09.657
Осылайша, ұсыныс DynamoDB
кестесін құрылымдау болып табылады,

00:29:09.681 --> 00:29:16.000
яғни сіздің сұрауларыңыздың
көпшілігі primary key арқылы жасалады.

00:29:16.000 --> 00:29:21.488
Бұл DynamoDB сервисінің
құнын мүмкіндігінше азайтады, ал

00:29:21.512 --> 00:29:27.000
сіздің барлық сұрауларыңыз
мүмкіндігінше тез өңделеді.

00:29:30.000 --> 00:29:32.988
Енді бізде primary key-дің
қандай түрлері бар екенін

00:29:33.012 --> 00:29:36.000
қарастырайық. Екі түрі бар: 
single key және compound key.

00:29:36.000 --> 00:29:45.194
Single key - бұл бір атрибут бірегей кілт болған
кезде. Яғни, бізде pk атрибуты бар деп айтамыз,

00:29:45.218 --> 00:29:55.000
біз оны осылай атаймыз және әр жолдың
мәні бірегей мән болып табылады.

00:29:55.000 --> 00:30:03.520
Егер біз өз өнімдеріміз туралы ақпаратты
веб-сайтта DynamoDB кестесінде сақтаймыз

00:30:03.544 --> 00:30:13.000
десек, әр элементтің бірегей идентификаторын
осы атрибутқа енгіземіз.

00:30:13.000 --> 00:30:19.599
Тағы бір primary key опциясы
- бұл compound key, partition

00:30:19.623 --> 00:30:27.000
key және sort key тіркесімі
бірегей болуы керек.

00:30:27.000 --> 00:30:31.339
Бұл жағдайда partition key өздігінен
бірегей болмауы мүмкін, sort key де

00:30:31.363 --> 00:30:36.000
өздігінен бірегей болмауы мүмкін, бірақ
тіркесімі бірегей болуы керек.

00:30:40.000 --> 00:30:47.000
Осылайша біз екінші бөлімнің соңына жеттік.
Біз Amazon DynamoDB сервисін мұқият қарастырдық.

00:30:47.000 --> 00:30:50.000
Ең маңызды сәттерге
назар аударайық.

00:30:50.000 --> 00:30:57.000
Бұл NoSQL дерекқорларын қамтамасыз ететін
managed және serverless сервис.

00:30:57.000 --> 00:31:05.000
NoSQL дерекқорлары - бұл JSON
объектілерімен жұмыс істейтін кесте.

00:31:05.000 --> 00:31:11.663
Бұл JSON объектілерінің құрылымдары
динамикалық болып табылады, сондықтан

00:31:11.687 --> 00:31:19.000
егер біз құрылымдалмаған деректермен
жұмыс жасасақ, DynamoDB біз үшін қолайлы.

00:31:19.000 --> 00:31:27.000
Құрылымдық деректермен жұмыс істегенде,
Amazon RDS біз үшін жақсырақ нұсқа болады.

00:31:29.000 --> 00:31:36.000
Біз дәрісіміздің үшінші бөліміне жеттік және
Amazon Redshift сервисі туралы айтатын боламыз.

00:31:36.000 --> 00:31:43.540
Amazon Redshift - бұл бізге data
warehouse ұсынатын managed сервис. 

00:31:43.564 --> 00:31:51.000
Яғни, бұл барлық деректер бойынша
аналитикалық сұраулар жүргізетін дерекқор.

00:31:51.000 --> 00:31:57.000
Бұл бірнеше көздерден деректерді
біріктіре алатын деректер базасы.

00:31:57.000 --> 00:32:03.481
Егер біз Amazon RDS реляционды
дерекқорымен салыстырсақ, онда біз

00:32:03.505 --> 00:32:11.000
транзакциялық деректермен жұмыс
жасаймыз. Яғни, онда күрделі сұраулар аз.

00:32:11.000 --> 00:32:17.488
Біз негізінен пайдаланушылар туралы
кейбір деректерді енгіземіз, мысалы,

00:32:17.512 --> 00:32:24.000
веб-сервис дұрыс жұмыс істеуі үшін
деректерімізді оқимыз.

00:32:24.000 --> 00:32:31.988
Кейбір бизнес шешімдерін қабылдау үшін бізге
талдау жасау, әртүрлі көздерден деректерді жинау және

00:32:32.012 --> 00:32:40.000
осы жинақталған деректерді басшылықпен бөлісу қажет
болғанда, Amazon Redshift сервисі сәйкес келеді.

00:32:40.000 --> 00:32:45.505
Redshift - бұл әртүрлі сақтау
сервистеріне қол жеткізе алатын

00:32:45.529 --> 00:32:50.666
және сол жерден деректерді
ала алатын және осы деректер

00:32:50.690 --> 00:32:56.333
бойынша әртүрлі перспективаларды
біріктіру және алу үшін осы

00:32:56.357 --> 00:33:02.000
деректер бойынша күрделі SQL
сұрауларын өңдей алатын сервис.

00:33:02.000 --> 00:33:07.000
Дереккөздердің мысалдарына Amazon S3,
Amazon DynamoDB, Amazon RDS жатады.

00:33:07.000 --> 00:33:10.586
Көріп отырғаныңыздай,
деректермен жұмыс істейтін негізгі

00:33:10.610 --> 00:33:14.000
сервистерді Redshift
сервисімен біріктіруге болады.

00:33:14.000 --> 00:33:21.000
Amazon Redshift ішкі құрылымы
екі бөліктен тұрады.

00:33:21.000 --> 00:33:28.439
Біріншісі - бір leader node,
яғни бұл төменгі нодаларға командаларды

00:33:28.463 --> 00:33:35.902
жіберетін нода және бұл төменгі
нодалар осы SQL сұрауларын деректерге

00:33:35.926 --> 00:33:42.951
өңдейді және соңғы нәтижені
leader node-қа жібереді.

00:33:42.975 --> 00:33:50.000
Осылайша, осы деректермен
жұмыс оңтайландырылады.

00:33:50.000 --> 00:33:55.531
Мұның бәрі сервис пайдаланушылары
үшін анық, нәтижесінде біз үлкен көлемдегі

00:33:55.555 --> 00:34:01.000
деректермен жұмыс істеу үшін
өте қуатты қозғалтқыш аламыз.

00:34:01.000 --> 00:34:08.000
Amazon Redshift пайдаланудың
негізгі use cases қарастырайық.

00:34:08.000 --> 00:34:12.194
Бірінші және ең танымал
- жергілікті DWH, яғни Data

00:34:12.218 --> 00:34:17.000
Warehouse, бұлтты шешімге,
яғни Amazon Redshift, көшіру.

00:34:17.000 --> 00:34:24.988
Екіншісі - Big Data, яғни құрылымдалған немесе
құрылымдалмаған ақпараттың көп мөлшерін жинақтайтын

00:34:25.012 --> 00:34:33.000
компаниялар бар және кейбір маңызды ақпаратты
алу үшін осы деректерді талдауға шешім қабылдайды.

00:34:33.000 --> 00:34:40.866
Бұл жағдайда бұл деректер бұлтқа
жіберіледі, атап айтқанда Amazon

00:34:40.890 --> 00:34:48.000
Redshift, онда деректер стандартты
SQL көмегімен талданады.

00:34:48.000 --> 00:34:52.769
Үшінші нұсқа - Amazon Redshift
қолдану арқылы белгілі бір

00:34:52.793 --> 00:34:57.000
төлем сервисін ұсыну, яғни
Software as a Service.

00:34:57.000 --> 00:34:59.988
Сізде кейбір деректер
негізінде кейбір есептеулер мен

00:35:00.012 --> 00:35:03.000
талдаулар жасайтын веб-сайт
бар деп елестетіп көріңіз.

00:35:03.000 --> 00:35:10.000
Мысалы, нақты шешім қабылдау үшін
сақтандыру деректерін талдауға болады.

00:35:10.000 --> 00:35:13.437
Бұл жағдайда сақтандыру
компаниялары бұл деректерді сіздің

00:35:13.461 --> 00:35:17.746
веб-сайтыңызға жүктейді, осы
веб-сайт арқылы сіздің Redshift-ке жетеді

00:35:17.770 --> 00:35:21.873
және кейбір стандартты талдау
жасалады және нәтижелердің бір бөлігі

00:35:21.897 --> 00:35:26.000
осы сақтандыру компанияларына,
сіздің клиенттеріңізге қайтарылады.

00:35:26.000 --> 00:35:31.988
Біз үшінші бөлімнің соңына
жеттік және Amazon Redshift туралы

00:35:32.012 --> 00:35:38.000
толығырақ әңгімелестік.
Ең маңызды сәттерге назар аударайық.

00:35:38.000 --> 00:35:49.000
Amazon Redshift - бұл сізге Data Warehouse,
DWH, деректер қоймасын ұсынатын managed сервис.

00:35:49.000 --> 00:35:54.482
Бұл құрылымдалған, құрылымдалмаған
ақпаратты қамтуы мүмкін,

00:35:54.506 --> 00:35:59.988
сонымен қатар деректерді
жүктеу, оған күрделі және ауыр SQL

00:36:00.012 --> 00:36:05.494
сұрауларын іске қосу және
кейбір маңызды бизнес ақпаратын

00:36:05.518 --> 00:36:11.000
алу үшін сыртқы дереккөздеріне
қол жеткізе алатын дерекқор.

00:36:11.000 --> 00:36:17.147
Amazon Redshift сервисі Amazon
S3, Amazon RDS, Amazon DynamoDB

00:36:17.171 --> 00:36:23.000
сияқты негізгі сақтау
сервистерімен біріктірілген.

00:36:23.000 --> 00:36:31.000
Біз дәрістің соңғы бөліміне жеттік және Amazon
Aurora туралы егжей-тегжейлі айтатын боламыз.

00:36:31.000 --> 00:36:38.997
Amazon Aurora - бұл реляционды
дерекқорды қамтамасыз ететін сервис,

00:36:39.021 --> 00:36:47.624
in-house шешім, яғни екі реляционды
дерекқор қозғалтқышына негізделген

00:36:47.648 --> 00:36:55.816
AWS ішкі жасақтамасы. Бұл MySQL 
және Postgres. Бұл шешім кез-келген

00:36:55.840 --> 00:37:05.000
басқа Amazon RDS қозғалтқышына
қарағанда бірнеше артықшылықтарды ұсынады.

00:37:05.000 --> 00:37:15.000
Бағасы бойынша Amazon RDS-пен
салыстырғанда арзанырақ.

00:37:15.000 --> 00:37:23.914
Сонымен қатар, бұл AWS-тің ішкі
шешімі болғандықтан, дерекқорды басқару

00:37:23.938 --> 00:37:34.000
тапсырмаларының одан да көп бөлігі
AWS-ке беріледі және жүктемелеріңіз азаяды.

00:37:34.000 --> 00:37:44.103
Айта кетейін, Amazon Aurora MySQL және
Postgres-ке негізделген болса да, ол әлі

00:37:44.127 --> 00:37:55.000
де MySQL және Postgres-де жоқ бірқатар
қосымша мүмкіндіктерді қамтиды.

00:37:55.000 --> 00:38:05.488
Болашақта, егер сіз Aurora-дан басқа дерекқорға
ауысқыңыз келсе, ол өте қымбат және қиын болуы

00:38:05.512 --> 00:38:16.000
мүмкін, себебі ол MySQL және Postgres
қозғалтқыштарына 100% тасымалданбайды.

00:38:16.000 --> 00:38:25.000
Болашақта Aurora-ны қолдануды бастамас бұрын, мен
артықшылықтар мен кемшіліктерді талдауды ұсынамын.

00:38:25.000 --> 00:38:35.221
Егер AWS-пен жұмыс істейтін болсаңыз, сіз үшінші
тарап бұлт провайдерлерін қарастырмасаңыз және

00:38:35.245 --> 00:38:46.092
басқа бұлт провайдеріне көшудің қажеті болмаса,
сондай-ақ, стандартты RDS, MySQL, Postgres не басқа

00:38:46.116 --> 00:38:55.857
қозғалтқыштарында жоқ, бизнесіңіз үшін маңызды
барлық артықшылықтарды алғыңыз келсе, онда сіз

00:38:55.881 --> 00:39:07.000
Aurora-мен жұмыс істеуді жалғастыра аласыз, барлық
артықшылықтарға ие боласыз, және ол арзан болады.

00:39:07.000 --> 00:39:13.930
Егер бұлт провайдерін өзгерту
немесе қозғалтқышты өзгерту қаупі бар

00:39:13.954 --> 00:39:21.409
болса, онда мен Aurora-мен жұмыс
жасамас бұрын ойлануға кеңес беремін,

00:39:21.433 --> 00:39:29.366
өйткені жұмысты бастау әрқашан оңай.
Ауысу қажет болғанда, Aurora-дан басқа

00:39:29.390 --> 00:39:37.000
кез келген дерекқорға көшуге көп
ресурс, күш пен ақша жұмсалуы мүмкін.

00:39:40.000 --> 00:39:44.000
Бұл слайдта Amazon Aurora сервисінің
негізгі артықшылықтары көрсетілген.

00:39:44.000 --> 00:39:50.682
Бұл сервис managed сервис болып
табылады, оны орнату өте оңай, өйткені

00:39:50.706 --> 00:39:57.000
бұл жергілікті шешім және біз тек
пайдаланғанымыз үшін төлейміз.

00:39:57.000 --> 00:40:00.936
Қол жетімділік туралы
айтатын болсақ, Amazon Aurora

00:40:00.960 --> 00:40:05.528
бастапқыда жоғары қол жетімді
болу үшін жасалған, өйткені

00:40:05.552 --> 00:40:10.000
сіздің деректеріңіз 3 availability
аймақтарында қайталанады,

00:40:10.552 --> 00:40:14.000
ал сақтық көшірмелер
Amazon S3-те сақталады.

00:40:17.000 --> 00:40:21.583
Amazon Aurora 15 read
репликаға дейін баптай алады және

00:40:21.607 --> 00:40:26.616
бұл деректердің жоғалу қаупін азайтады.
Негізгі дерекқорда

00:40:26.640 --> 00:40:31.089
проблемалар туындаған
кезде, read replic-тардың бірі

00:40:31.113 --> 00:40:36.000
автоматты түрде негізгі
дерекқор деңгейіне жаңартылады.

00:40:39.000 --> 00:40:46.000
Осымен төртінші бөлімді аяқтаймыз.
Ең маңызды сәттерге назар аударайық.

00:40:46.000 --> 00:40:53.000
Amazon Aurora - бұл реляционды деректер
базасын ұсынатын AWS ішкі шешімі.

00:40:53.000 --> 00:41:04.556
Оның Amazon RDS-тен бірнеше артықшылықтары
бар, басқа Amazon RDS қозғалтқыштарына қарағанда

00:41:04.580 --> 00:41:16.000
арзанырақ және қозғалтқышта
бірқатар ыңғайлы жақсартулар да бар.

00:41:16.000 --> 00:41:28.000
MySQL немесе Postgres қозғалтқыш ретінде әрекет
ете алады. Ескеретін жалғыз нәрсе - бұл ішкі шешім.

00:41:28.000 --> 00:41:37.000
Amazon Aurora-ны пайдалануды бастағаннан
кейін сіз AWS-ке, нақты сол сервиске байланасыз.

00:41:37.000 --> 00:41:47.988
Егер басқа бұлт провайдеріне немесе қозғалтқышқа,
мысалы, Amazon RDS-тің MySQL қозғалтқышына

00:41:48.012 --> 00:41:59.000
ауыспайтын болсаңыз, онда болашақта ол қымбат тұруы
мүмкін және көптеген ресурстарды қажет етуі мүмкін.

00:41:59.000 --> 00:42:04.975
Егер мұндай қауіп болмаса және
сіз AWS және Amazon Aurora-ны

00:42:04.999 --> 00:42:11.988
реляционды дерекқор ретінде соңына
дейін қолданатындығыңызға сенімді

00:42:12.012 --> 00:42:18.130
болсаңыз, онда бұл өте жақсы
шешім, жақсы нұсқа және мен оны

00:42:18.154 --> 00:42:25.000
пайдалануды ұсынамын.
Осымен, біз барлық бөлімдерімізді аяқтадық.

00:42:25.000 --> 00:42:30.000
Қарастырылған ақпаратты қорытындылайтын
келесі слайдты талдайық.

00:42:30.000 --> 00:42:39.000
Егер бізге реляционды дерекқор қажет болса,
Amazon RDS біз үшін ең жақсы сервис болып табылады.

00:42:39.000 --> 00:42:47.000
Егер бізге шексіз масштабтауға болатын NoSQL
дерекқоры қажет болса, біз Amazon DynamoDB таңдаймыз.

00:42:47.000 --> 00:42:59.820
Егер бізге қозғалтқышты әрқалай теңшеуге болатын
дерекқор қажет болса, бізге дерекқор жұмыс істеп

00:42:59.844 --> 00:43:14.000
тұрған операциялық жүйеге кіру қажет, бұл жағдайда
EC2 инстансындағы дерекқорды өзіміз баптау ұсынылады.

00:43:14.000 --> 00:43:21.732
Егер бізге белгілі бір шешім қажет
болса, мысалы, machine learning

00:43:21.756 --> 00:43:29.488
үшін, деректер қоймасы үшін
немесе графиктермен жұмыс істеу үшін,

00:43:29.512 --> 00:43:37.365
онда AWS жағында осы мақсат үшін
арнайы жасалған деректермен жұмыс

00:43:37.389 --> 00:43:45.000
істейтін жеке сервистер бар.
Осымен біздің дәрісіміз аяқталды.

00:43:45.000 --> 00:43:55.000
Қысқаша қорытындылай келе, біз AWS ішіндегі
ең негізгі төрт дерекқор сервистерімен таныстық.

00:43:55.000 --> 00:44:04.000
Бұл Amazon RDS Relational Database Service, DynamoDB,
содан кейін Amazon Redshift және Amazon Aurora.

00:44:04.000 --> 00:44:12.383
Бұл слайд талдаған сервистер туралы
көбірек білу үшін қажет болуы мүмкін

00:44:12.407 --> 00:44:20.000
сілтемелерді қамтиды.
Осымен біз сессиямызды аяқтаймыз.

00:44:20.000 --> 00:44:27.000
Сіз өткен сервистер туралы жақсырақ
түсіндіңіз деп үміттенемін.

00:44:27.000 --> 00:44:32.000
Назарларыңызға рахмет. 
Келесі белсенділіктерімізде көріскенше!