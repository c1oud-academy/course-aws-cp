Добрый день, уважаемые студенты! Я рад вас видеть. Мы продолжаем погружение в облачные технологии. И Сегодня у нас модуль второй. Мы поговорим про Cloud economics and billing, а именно, это все то, что связано с оплатой облачных услуг – как происходит ценообразование сервисов AWS, как можно будет посмотреть ваши затраты и как ими управлять. Сегодняшняя сессия поделена на пять частей. В первой части мы поговорим про основы ценообразования сервисов AWS. Далее мы познакомимся с таким понятием как Total cost of ownership, т.е. итоговая цена владения IT-инфраструктурой. После этого, в третьей части мы познакомимся с сервисом AWS Organizations, этот сервис набирает популярность и чаще используется при построении IT-архитектуры в облаке в последние годы. В предпоследней части мы поговорим о группе сервисов AWS, связанных с оплатой и управлением затратами. Ну и в последней части мы поговорим про техподдержку – какие виды бывают и чем отличаются.
Первая секция: Основы ценообразования сервисов AWS.
Когда мы говорим про то, как идёт оплата за сервис, здесь есть три основных драйвера. Это – compute, т.е. вычисление; это – storage, т.е. хранение и data transfer, т.е. передача данных. В итоге, в зависимости от вида AWS сервиса мы платим сервису за то, что и как мы используем, а именно, используем какие-то вычислительные ресурсы, либо за хранение определённого объёма данных, либо за передачу этих данных.
Теперь, поговорим подробнее про Data Transfer. Это когда данные с одного места переходят в другое место и пунктом назначения, либо пунктом отправки является само облако. Когда мы передаём наши данные в облако, облачному провайдеру, то он за это оплаты не берет. Как легко запомнить? Т.е. он с радостью принимает все то, что у нас есть, но когда нам нужно что-то запросить, это уже не бесплатно. Этот вопрос косвенно, либо прямо может прийти на AWS экзамене. Также следует отметить, что передача данных между сервисами в рамках одного региона тоже является бесплатной. Мы с вами помним, что внутри региона есть availability зоны, а сама availiabilty зона – это одна или несколько дата-центров. Таким образом, вы можете передавать свои данные между несколькими дата-центрами в рамках одного региона и за это никакой платы не будет. В большинстве случаев это верно, но есть некоторые исключения для некоторых сервисов и всегда следует смотреть страницу Pricing для каждого сервиса, который вы начинаете использовать для того, чтобы понять за какой из трёх драйверов ценообразования за AWS сервис вы будете оплачивать.
Следующий момент, который следует также отметить: мы с вами сказали, что данные, которые мы передаём в облако – бесплатно, обратно принимаем – платно. Так вот, данные, которые мы принимаем, агрегируются от всех сервисов, которые мы приняли, и весь этот объем переданной информации передаётся одной строчкой AWS Data Transfer Out в ежемесячно выставленном счёте от AWS в разрезе сервисов, в разрезе всего того, за что мы должны ему оплатить. Приведу пример,  мы получили данные от сервиса Amazon S3 в объёме 10 гигабайтов и из другого сервиса, к примеру, Amazon EC2 с наших серверов, напрямую подключившись через интернет, тоже 10 гигабайтов. Таким образом, мы просуммируем – всего от AWS за текущий месяц мы получили 20 гигабайтов и эти 20 гигабайт будут указаны просуммированными в одной строчке AWS Data Transfer Out. С момента основания AWS появилось большое количество сервисов, но это никак не изменило то, как идёт оплата за сервисы AWS. Как мы с вами помним, мы оплачиваем только то, что мы используем, таким образом, мы не заключаем никаких ни долгосрочных, ни среднесрочных, ни краткосрочных контрактов. Мы ни чему не обязаны, в тот момент, когда мы начинаем использовать сервис начинает начисляться некоторая сумма за то, что мы используем. В тот момент, когда мы высвобождаем наши ресурсы при использовании любого сервиса, то перестаёт начисляться оплата за использование. В конце каждого месяца приходит счёт с расписанной информацией о том, какой сервис, в каком объёме был в использовании и сколько это стоит. Также следует отметить, что мы можем оплачивать меньше, если мы резервируем. Мы про это проговорим. Также мы платим меньше, если мы используем больше и платим меньше, когда AWS растёт. Про каждый пункт мы поговорим на нескольких следующих слайдах.
Первый – Pay for what you use – плати только за то, что ты используешь. Этот принцип наглядно показан на слайде с правой стороны. С левой стороны мы видим стандартную, традиционную модель, когда мы используем локальный дата-центр, локальную IT-инфраструктуру. Плюсы и минусы мы все помним, мы все знаем. Мы видим, что с AWS, с облачным провайдером, с облачными технологиями мы можем платить за любой период много, когда нам нужно, а на следующий период освободиться, высвободить эти ресурсы и перестать за них платить. Таким образом, мы можем сэкономить на том, что мы платим только за то, что мы используем, а то, что мы не используем, мы можем быстро вернуть. Это экономит некоторые средства. В крупных компаниях доходит до достаточно больших сумм. Здесь я хотел бы добавить ещё один новый нюанс – некоторые сервисы, которые вы используете, это приложения, разработанные сторонними компаниями. Таким образом, для того, чтобы использовать их внутри AWS, нужна лицензия. У AWS есть договорённость со всеми этими компаниями, которые предоставляют свои услуги как AWS сервис – возможность оплачивать лицензию по модели pay-as-you-go pricing, которая включена по умолчанию. Например, когда вы запускаете инстанс от Oracle или инстанс базы данных от Microsoft, которые являются платными базами данных и требуют лицензии, то вы уже в цене, которую оплачиваете AWS, также оплачиваете за услуги лицензирования. Если же у вас есть своя собственная лицензия, то и здесь AWS приготовил для вас решение – есть специальный сервис, куда вы загружаете свои лицензии и можете использовать в соответствующих сервисах. Таким образом, вы при наличии этих лицензий у вас, уже купленных, не переплачиваете AWS, платите только за использование и лицензионный сбор не будет входить за оплату. В случае же если у вас нет лицензии, то это очень удобно, потому как работа с лицензиями это те оплаты, которые происходят наперёд, лицензии стоят недёшево. Таким образом, это один из примеров капитальных расходов. Простой пример, когда капитальные расходы не есть хорошо, если вы использовали базу данных в течение шести месяцев, а лицензия у вас на год, т.е. если вы не используете эту лицензию, деньги не возвращаются в традиционной модели и вся та оплата, она уходит впустую. В случае, когда мы говорим, что мы используем AWS по pay-as-you-go pricing и приходим не со своими лицензиями, а уже используем внутри AWS, то мы намного облегчаем себе работу с управлением лицензиями и высвобождаем для себя больше времени для занятия основной частью бизнеса, делать то, что действительно нужно и не отвлекаться на побочные работы, такие как управление лицензиями.
Второй пункт – это Pay less when you reserve, или другими словами, мы можем оплачивать меньше, если мы резервируем. Также это называется RI, либо Reserved Instances. Это специальная модель оплаты, доступная для достаточно популярных и затратных сервисов внутри любой IT-инфраструктуры и это нормально, а именно сервисы Amazon Elastic Compute Cloud, т.е. Amazon EC2 и Amazon RDS (Relational database service). Первое – это когда мы запрашиваем серверные мощности (виртуальный сервер), на котором мы можем настроить её так, как мы хотим, полный контроль. Amazon RDS – это когда мы получаем готовую базу данных как сервис. Это достаточно популярные сервисы, которые используются практически в любой IT-инфраструктуре и оплата за эти два сервиса может занимать значительную часть ежемесячной оплаты. Для того, чтобы пойти навстречу и снизить расходы в целом на облако, AWS разработала новую модель оплаты Reserved Instances, которая помогает вам потенциально сохранить до 70% затрат на эти сервисы. Как это работает? Когда мы говорим pay-as-you-go, подразумевается on-demand модель оплаты (on-demand – по запросу). Значит, вы можете запросить поднять виртуальный сервер на 20 минут, после чего её отключить и когда придёт ежемесячный счёт на оплату, вы получите сумму, которая равняется 20 минутам использования того сервера того типа, который вы подняли. Это on-demand. On-demand идеально подходит для нагрузок, которые непостоянны, либо сложно прогнозируемы. Когда мы говорим про нагрузки постоянные, т.е. это может быть какая-то стабильно работающая компания, либо тип нагрузок на инфраструктуру сам по себе постоянный. Например, это точно не веб-сайт, когда нагрузка может меняться в зависимости от времени суток. Возможно, это какие-то расчёты, которые могут быть распределены во времени и они достаточно стабильны. Для таких случаев AWS даёт возможность сэкономить и говорит – если вы подтверждаете, что вы на определённый период готовы использовать определённый объем вычислительных мощностей, то есть такое-то количество инстансов такого-то типа, подписываете это контрактом, то AWS, зная,  что придёт оплата, становится легче планировать дальнейшее развитие своей глобальной инфраструктуры, развитие своих дата-центров. За это она готова давать скидки, и мы имеем возможность экономить на затратах на облако.
Выделяют три вида возможных вариантов оплаты по модели Reserved Instances. Это No Upfront Reserved Instance, Partial Upfront Reserved Instance и All Upfront Reserved Instance. Я специально выделил первые буквы, потому что обычно они встречаются в виде аббревиатуры, т.е. NURI, PURI и AURI. Чем они отличаются? Они отличаются тем, какое количество оплаты за вычислительные мощности вы оплачиваете сразу при заключении контракта и какую скидку вы получаете, они обратно пропорциональны. Например, No Upfront Reserved Instance – это когда вы ничего не оплачиваете, вы лишь подписываете контракт и показываете облачному провайдеру своё намерение, что вы такой-то период будете такой-то объем вычислительных мощностей использовать. Даже эта информация, если она гарантирована, она полезна для облачного провайдера, и он с радостью даёт нам за это скидки. Если же мы говорим про Partial Upfront Reserved Instance, то мы при заключении контракта оплачиваем 50% того, что мы должны были оплатить с учётом скидки. Как это происходит? За период высчитывается итоговая сумма с учётом скидки и с учётом того, что мы половину сразу оплатим. Половину вы сразу оплачиваете и за весь этот период оставшиеся 50% оплаты равномерно распределяется на этот период и со скидкой за нее оплачиваете. За PURI, естественно, даются скидки больше, чем за NURI. И последние All Upfront Reserved Instance – когда высчитывается за период все расходы с учётом того, что все сразу оплатите, вы получаете максимальную скидку, которую вообще возможно, и должны будете оплатить его сразу, а потом за каждый месяц в счетах, которые приходят от AWS ежемесячно за те нагрузки, которые, допустим за Amazon EC2, либо за Amazon RDS, вы будете видеть сколько вы потребили, т.е. какое количество какой объем мощностей вы использовали в этом месяце, но как оплата будет стоять ноль, потому что вы заранее уже оплату произвели.
Два момента, которые следует запомнить. Первый – не запоминайте аббревиатуры, запомните смысл. Аббревиатуры придут на экзамене, а именно NURI, PURI и AURI вам нужно запомнить, что начинается с N это No, т.е. нет оплаты. P – это Partial, частично. A – All, полностью. Потому как может прийти либо прямой вопрос с этими аббревиатурами, либо косвенный. Другой момент –  когда мы говорим про период заключения контракта, выделяют два вида. Это на один год подписывается контракт или на три года. Таким образом, минимальная скидка, которую вы можете получить, это в случае, когда вы делаете контракт NURI, т.е. No Upfront Reserved Instance, на один год – это минимальная полезная информация, минимальный контракт Reserved Instance для AWS. Так как вы ничего сразу не оплачиваете и это минимальный период, который возможен, он даёт минимальную скидку, и вы меньше рискуете, т.е. знать, что вы в течение трёх лет будете использовать такие-то нагрузки, это тоже нужно хорошо спрогнозировать и это может быть не так, зависит от компании. Это минимально, что вы получаете. Если думать дальше, следуя подобной логике, то максимальную скидку вы получаете в случае, когда вы заключаете контракт AURI, т.е. оплачиваете все сразу и контракт заключаете на три года. В этом случае вы получаете максимальную скидку. Последний момент, который очень важен при работе с Reserved Instance (RI), это то, что вы должны покупать объёмы через Reserved Instance модель только те мощности, которые нагружены 24 часа, либо приблизительное количество часов в день в течение всего месяца. Понимаете да, почему? Остановите это видео. Подумайте почему. Хорошо продолжаем. Вопрос ещё раз – почему мы должны резервировать только те инстансы, которые нагружены 24 часа в сутки 7 дней в неделю и весь месяц? Ответ прост – потому что, таким образом, вы сэкономите максимально, во-первых, и, во-вторых, может быть получится так, что, представим, у вас есть инстансы, которые нагружены полноценно на 15  дней в месяц, то есть полмесяца. И вы покупаете Reserved Instance, зная, что каждые 15 дней каждого месяца в течение года вы будете их нагружать. И да, вы с одной стороны сэкономите, потому что вы знаете нагрузки. Вы будете оплачивать меньше за единицу времени за каждый час использования Amazon EC2, но вы переплатите фактически, потому что вам вот эту сумму, т.е. оплату за часы, цену за часы нужно будет платить и за оставшиеся 15 дней месяца, когда они просто будут простаивать. Поэтому вот этот момент учтите и в крупных компаниях, зная, что у них определённый объем инстансов или вычислительных мощностей постоянно требуется, то именно на них покупается Reserved Instance, а все остальное используется on-demand, потому что так выходит максимально выгодно. Вот этот момент запомните, он вам пригодится не только на экзамене, но и в будущем, когда вы устроитесь на работу.
И последний третий пункт – Pay less when you use more and as AWS grows, т.е. мы платим меньше, когда используем больше, и мы платим меньше, когда сам AWS расширяется и растёт. Давайте поясню. Есть такое понятие как Tiered pricing. В чем её идея? Идея в том, что вы с определённых объёмов использования вычислительных мощностей, ресурсов AWS, будете платить меньше за каждую последующую eдиницу вот этой мощности ресурса. Например, мы используем сервис Amazon S3. Я сейчас возьму цены с воздуха, а реальные цены вы можете всегда найти и посмотреть. Допустим, за каждый терабайт хранения данных в Amazon S3 стоит 5$. Далее, у Amazon S3 есть некая таблица с Tiered Pricing, которая говорит, что данные в объёме до 50 ТБ за 1 ТБ стоят 5$. Как только вы начинаете хранить больше, то за 51-ый терабайт, который вы храните, то есть с 51-го по, например, 100-й ТБ вы за каждый терабайт будете платить не 5$, а 4$. Таким разом, вы за объёмы каждый последующий раз будете платить меньше, оно выходит выгоднее. Этот момент учитывайте тоже, когда вы используете сервисы. У некоторых сервисов дойти до следующего Tiered pricing, не всегда легко, но это все сильно зависит от самого бизнеса. Поэтому работая с определённым сервисом, обязательно смотрите Pricing страницу и учитывайте эти моменты.
Следующее это то, что за тот период с 2006 г., как работает AWS, он в 75 раз снизил цены за сервисы. Например, как это выглядело? Выходит новость о том, что за Amazon EC2 за каждый час работы такого-то инстанса, нужно оплачивать 2$, и написано в новости, что с этого момента теперь нужно не 2$ оплачивать, а 1,5$. Таких новостей, приятных, хороших, было 75 раз за историю существования AWS. Она этим гордится. Это действительно хороший тренд. Клиентам становится дешевле использовать облако, облачные технологии. Это говорит о том, что AWS расширяется, она не уменьшается и за счёт тех масштабов, про это мы с вами говорили, за счёт масштабов есть возможность уменьшать себестоимость предоставления этого сервиса и, соответственно, уменьшив немного маржу, делать счастливее клиентов.
Третий вариант – это Custom pricing options. Это такой нестандартный подход к оплате за AWS. Представим, что вы компания, у которой инфраструктура в месяц стоит 100 000$. Таким образом, в год вы миллионы долларов тратите только на вашу IT-инфраструктуру. Это достаточно большие суммы. Эти суммы могут уходить даже при всех возможных акциях, в том числе RI, Tiered pricing и все эти моменты, которые помогает оптимизировать ваши затраты в облаке. В этом случае есть возможность, т.е. когда у вас такие затраты, скорее всего, у вас премиальный доступ к техподдержке и есть выделенный человек со стороны AWS, который вас консультирует. Таким образом, вы можете проконсультироваться с этим человеком и уточнить возможность персональной скидки для вашей компании, либо за определённые сервисы, либо какую-то общую скидку за те расходы, которые вы несёте на облако. Зачастую бывает такое что, да, скидки выдаются, некоторые скидки выдаются разово, некоторые скидки выдаются в виде кредитов, а некоторые скидки, в целом, выдаются за единицу использования ресурса, что очень хорошо и оно фактически является не временной, а постоянной скидкой. Custom pricing, эту тему мы не будем охватывать подробно на этом курсе, я лишь сказал те моменты, которые я сам знаю и когда вы встретитесь, это нужно будет уже индивидуально разговаривать с представителем AWS и таким образом, сокращать свои расходы на облако.
Следующая возможность использования AWS не со скидками, а даже бесплатно, это – программа AWS Free Tier. Эта программа предназначена для новых клиентов, новых аккаунтов AWS и длится 12 месяцев, т.е. целый год.  Идея в том, что с этой программой вы можете для себя понять, подходят ли вам некоторые AWS сервисы, которые вы хотите проверить и попробовать что-то простое сделать на стороне AWS, чтобы понять, в целом, этот облачный провайдер, либо вообще решения через облако, самое главное бесплатно. Идея в том, что в AWS Free Tier участвует большинство сервисов AWS,  и на каждый сервис выдаются определенные кредиты. Например, если мы говорим про Amazon EC2, виртуальный сервер, на Amazon EC2 каждый месяц выдается 720 часов – это ровно 30 дней. Фактически, вы можете расходовать как хотите ее, например, вы можете запустить один cервер и он 30 дней будет у вас непрерывно работать, что-то вы можете с ним делать, что хотите. Другой вариант – вы можете запустить, если это 720 часов, то 70 серверов параллельно на 10 часов и что-то там с ними сделать, какие-то расчеты, возможно, это все будет бесплатно, так как входит в рамки AWS Free Tier. Как только вы это все проделываете, на текущий  месяц расходуются все кредиты, в начале следующего месяца эти кредиты  пополняются, но неиспользованные кредиты не переносятся, и  вы для Amazon EC2 получаете еще 720 часов, ни  больше, ни меньше и можете расходовать  дальше и так целый  год. Для того, чтобы, скажем так, не рисковать и  случайно не перешагнуть  за лимиты AWS Free Tier и не потратиться лишний раз, были разработаны специальные так называемые 10-minute tutorials, т.е. 10-минутные обучающие материалы,  которые выполняют определенную задачу.  Это, может быть, простая инфраструктура, может быть какая-то задача с привлечением нескольких сервисов, но основная идея всех этих задач в том, что они, в случае если вы не превышаете типы или количество того, что в задаче указано, вы гарантированно не превышаете  AWS Free Tier. Таким образом, вы безопасно для себя можете попробовать и  более, скажем так, практически ознакомиться с облаками. С этой программой  для новичков  в облаке очень удобно начинать, очень удобная возможность,  если интересно, если  хочется получить больше практических знаний, либо самостоятельно использовать консоль, посмотреть как она выглядит, то полноценная консоль без ограничений вам доступна, регистрируйтесь, смотрите. Это все то, что вы можете использовать  помимо тех лабораторных работ, которые у нас будут на курсе. 
Есть определённый список AWS сервисов, которые предоставляются на безвозмездной основе, т.е. бесплатно. Это сделано по нескольким причинам. Я предварительно попытаюсь вам объяснить какие это сервисы. Все мы знаем, что сервисы – это IT-ресурсы, как мы до этого сказали, например, когда говорим про Amazon EC2, это IT-ресурс, вам выделяется виртуальный сервер. Когда мы говорим про Amazon RDS – передается база данных как сервис, уже готовая, ничего не устанавливаете, не настраиваете, готовая база данных, берите, работаете, IT-ресурс. Когда мы говорим про сервисы, которые бесплатные, сами по себе они не являются IT-ресурсом в большинстве случаев, а являются тем сервисом, которые или управляют или объединяют другие сервисы, другие IT-ресурсы. Как пример вы можете видеть Amazon VPC, Elastic Beanstalk, Auto Scaling, AWS Cloud Formation – это достаточно важный сервис, и IAM (AWS Identity and Access Management) – все, что связано с безопасностью, с доступами, проходит через этот сервис. Зачастую это те сервисы, которые очень важны, всегда используются. Во-первых, потому что это удобно клиентам. Они упрощают работу в облаке, где-то эту работу автоматизируют. Для самой AWS, так как это не является IT-ресурсом, они не несут каких-то затрат на поддержку этого сервиса, потому что нет ресурса, а лишь написанный код, и он используется для того, чтобы управлять другими сервисами и ресурсами. Таким образом, эти сервисы как бы мотивируют клиентов AWS использовать больше, делать сложные и иметь возможность делать сложные архитектуры и, в целом, оставаться и двигаться дальше вместе с AWS. Это достаточно правильный подход, это клиентоориентированность. Мы с этими сервисами ещё столкнёмся. Вы теперь знаете, что некоторые сервисы по определённым причинам могут быть бесплатными.
Мы подошли к концу первой части. Давайте пройдёмся по самым основным моментам, которые нужно запомнить. Первое – это то, что мы разобрали, как происходит расчёт за услуги облачного провайдера. Также мы рассмотрели новую модель оплаты – это Reserved Instances, какие виды бывают, чем отличаются, когда и почему нужно их использовать. Дальше мы рассмотрели сервисы, которые являются бесплатными и почему они таковыми являются. И на этом мы переходим к следующей части.
Вторая секция: Итоговая стоимость владения
Во второй части мы познакомимся с таким понятием как Total cost of ownership, т.е. итоговая цена владения IT-инфраструктурой. Перед тем как мы её разберём, я хотел бы вам напомнить, что у нас есть два вида развёртывания IT-инфраструктуры: это локальная On-premise, и облачная, т.е. Cloud. Мы сейчас не говорим о гибридной модели, которая тоже существует. Если мы сравниваем On-premise с Cloud, это сравнение достаточно трудоёмкое, потому что в облаке есть то, чего нет в локальной инфраструктуре и обратное тоже верно, в локальной инфраструктуре есть то, что сильно отличается от того, что есть в облаке. Самый простой пример – это наши капитальные расходы, т.е. в локальной инфраструктуре мы несём эти капитальные расходы – это постоянные расходы. Если мы хотим увеличить наши вычислительные мощности, то это долго и, может быть, дорого, потому что мы покупаем целое оборудование сразу. Когда мы перестаём использовать наши ресурсы в локальной инфраструктуре, то постоянные расходы, которые мы несём, они никуда не уходят. В случае, когда мы говорим с облаком, там все гибко и мы оплачиваем только то, что мы используем. Подобного рода различия они есть и бывает достаточно сложно сравнить, что же все-таки лучше и выгоднее для бизнеса – оставаться локально или переходить в облако? Я думаю, вы уже ответили на вопрос. Ответ кроется в том, что же такое итоговая стоимость владения IT-инфраструктурой. Когда мы пытаемся сравнить две сложно сравнимые сущности, такие как развёртывание IT-инфраструктуры локальной и в облаке, ввиду их различия, то единственный вариант объективно сравнить и принять правильное решение, это привести все к одной метрике или несколько метрик. В этом нам помогает Total cost of ownership (TCO), который разбивает расходы на IT-инфраструктуру на несколько основных групп, и внутри каждой группы указывает какие потенциальные косвенные и прямые расходы могут быть, которые надо учитывать при объективном расчёте стоимости владения.
Основные группы расходов это – серверные мощности, стоимость хранения, т.е. это не только стоимость ваших жёстких дисков, но ещё и стоимость администрирования, хранения. Также если у вас локальный дата-центр, то этот дата-центр тоже нужно обслуживать. Помимо IT-специалистов там есть другие не IT-сотрудники, которые помогают правильно обслуживать дата-центр. Элементарно уборщицы, которые протирают пыль, убирают мусор и другие ненужные предметы, которых не должно там быть, чтобы не произошёл сбой в работе дата-центра. Вентиляция та же. Вы можете возразить, что вряд ли будут содержать отдельного человека, который отвечает за вентиляцию. Да, такое тоже может быть, но когда она ломается, то компания учитывает в своих расходах вызов компании либо специалиста, который починит. Это тоже те расходы, которые входят в стоимость владения IT-инфраструктурой. Следующая группа – это сети, т.е. не только оборудование, но и обслуживание этих сетей. Когда вы только настраиваете ваш локальный дата-центр, то работы по монтажу сетей, кабелей тоже сидят в стоимости владения. Но и самое основное, зачастую одно из самых крупных среди всех групп, это – затраты на зарплаты сотрудников. Здесь такой момент, что те разработчики, которые у вас есть, они останутся в облаке, потому что кто-то должен разрабатывать продукт, расходы будут одинаковы. Я сейчас хочу выделить тех сотрудников, которые перестают быть нужными в момент, когда мы переходим в облако, а это именно те люди, которые обслуживают техпомещения, наш дата-центр, те люди, которые, например, администрируют базу данных и т.д. Это те люди, необходимость в которых либо совсем исключается, либо потребность в этих специалистах сильно сокращается. Например, то что мы перейдём в облако и будем использовать Amazon RDS, не говорит о том, что нам не нужны администраторы баз данных. Нет, они нам нужны, но потребность в объёме работ по обслуживанию баз данных намного меньше, потому что большую часть уже берет на себя AWS. Например, чтобы локально поддерживать десять баз данных, администрировать их, нам нужно два администратора баз данных. Тогда как в облаке часть работы забирает на себя AWS и уже не нужно двух сотрудников держать, достаточно одного, и вот это те расходы, разница которой должна объективно указываться при сравнении общей стоимости владения.
Мы с вами проговорили те моменты, которые надо учитывать при расчёте общей итоговой стоимости владения локальной IT-инфраструктурой. Если мы говорим про облачную, то я ранее упоминал, что есть специальный сервис AWS Pricing Calculator, который помогает вам в зависимости от ваших входных данных и требований к IT-инфраструктуре, высчитать ежемесячную стоимость владения IT-инфраструктурой в облаке, хоть и недостаточно детально, но в той мере, чтобы показывать реалистичную общую картину. Когда делают расчёт и сравнение облачной и локальной инфраструктур, то следует ещё отметить, что есть так называемые дополнительные Benefits, т.е. преимущества при переходе в облако. Они делятся на две группы: Hard Benefits и Soft Benefits. Hard Benefits это те, что мы получаем напрямую. Soft Benefits это те, которые мы получаем косвенно. Я бы хотел подробнее рассказать про Soft Benefits и дать вам пару примеров. Один из косвенных плюсов это то, что процессы внутри вашей компании будут двигаться намного быстрее. Это именно те процессы, которые были завязаны на циклы закупки железа, т.е. локально этот процесс мог занимать дни и недели, а то и месяцы, сейчас это занимает минуты. Получается, вы можете планировать быстрее, вы можете двигаться быстрее, таким образом, и разработчики двигаются быстрее, а это потенциальная возможность быстрее разрабатывать и выдавать клиентам новые features, функционал для вашего предложения и соответственно быстрее и больше получать обратную прибыль. Другой момент это то, что вы начинаете быстрее двигаться, процессы быстрее начинают двигаться и приводят к большей удовлетворённости ваших клиентов. И ещё один момент это то, что с локальной инфраструктурой вы всегда остаётесь локально. Значит, для того чтобы запуститься на нескольких регионах, вам также нужно открывать локальную инфраструктуру там, чтобы быть на адекватном физическом расстоянии от клиентов, потому как если вы откроете напрямую сайт, который хостится где-то там далеко, то ping, т.е. скорость загрузки и скорость ответа через интернет будет маленькой и это будет ощущаться. Неприятно и неудобно будет работать на вашем сайте, если это сайт и доставлять какой-то дискомфорт вашим потенциальным клиентам. Поэтому у AWS, это глобальная инфраструктура, регионы по всему миру, и вы буквально за короткое время имеете возможность всю вашу инфраструктуру склонировать на другой регион для того, чтобы стать ближе к вашим клиентам и стать глобальными. Это, во-первых, становится возможным. Во-вторых, с облаками можно это сделать быстрее.
Секция 3: AWS Organizations
Мы с вами переходим к третьей части нашей сессии и проговорим про сервис AWS Organizations. Это такой сервис, который набирает популярность в последние годы. Я поясню, почему. До недавнего времени, когда компания разворачивала облачную инфраструктуру, она создавала ровно столько AWS аккаунтов, сколько у нее было environments, т.е. среда, в которой развёрнута копия вашей IT-инфраструктуры. Например, test environment (среда), где тестируют, dev environment, где разрабатывают это приложение, дальше оно перетекает в test environment, с test environment попадает в Preprod, т.е. Pre-Production environments, где дополнительно проверяется, после этого при отсутствии ошибок она уходит в Production. И вот для каждого environment регистрировали отдельный e-mail, отдельный аккаунт. Это было достаточно распространённым явлением, потому как много environments и не нужно было. Последние годы ввиду развития CI/CD  DevOps методологии и применения, мы на этом ещё остановимся подробнее, мы пришли к тому, что можно поддерживать большое количество сред (environments) при меньших трудозатратах, как человеческих, так и ресурсных. Таким образом, компании стремятся все больше environments создать по тем или иным причинам, но каждую регистрировать отдельно неудобно и для этого используют специальный сервис AWS Organizations. Он позволяет одним мастера-аккаунтом управлять всеми аккаунтами, зарегистрированными в вашей компании, таким образом, вы можете управлять вашими аккаунтами и доступом централизованно. Также вы можете автоматически создавать новые аккаунты. Не менее важная часть, особенность AWS Organizations, это Consolidated Building, т.е. вам не нужно заходить отдельно в каждый аккаунт, чтобы посмотреть ежемесячный счёт выставленный, а включить этот функционал и вы на центральный аккаунт ежемесячно будете получать агрегированный счёт по всем вашим аккаунтам, внутри будет разделение по аккаунтам, а также возможность смотреть по сервисам. Но идея в том, что все это объединено в одном месте.
Давайте поговорим подробнее об основных понятиях сервиса AWS Organizations. Как видно на слайде, у нас есть Root Account, т.е. основной аккаунт, с которого мы всем управляем. Далее, есть такое понятие, как OU (Organizational Unit) или другими словами, это папка. Если мы представим аккаунт как файл, то OU – это папка, а Root – это единственная основная папка. Таким образом, вы можете иметь вложенные папки и в каждой папке может, как на примере, что в первой вложенной папке есть один аккаунт, а дальше есть ещё одна папка, внутри которой два аккаунта. С левой стороны слайда. Это возможно сделать. Таким образом можно организовать, чтобы вести более структурированный учёт ваших аккаунтов. Как пример, если у вас есть несколько продуктов, то вы можете организовать в разные OU, и чтобы ваши аккаунты сидели в нужных местах. Внутри каждого продукта у вас может быть, например, dev-аккаунт. Может быть два-три dev-аккаунта, это совершенно нормально, потому как в одном аккаунте вы можете исправлять ошибки версии, которые deployed или развёрнуты на вашем боевом приложении, боевом environment, а на другом dev-аккаунте вы тестируете новый функционал. Таким образом, вы можете создать новый OU с названием dev, внутри OU название направления либо продукта и там хранить, точнее расположить ваши аккаунты.
Другим немаловажным функционалом, который есть в сервисе AWS Organizations, это так называемый Policy. Идея этих Policy в том, чтобы предоставить возможность ограничивать аккаунт или группы аккаунтов через OU. Приведем пример. Представим, что вы компания, разрабатывающая некий IT-продукт и ввиду специфики вашего бизнеса вы не используете определённый список сервисов. Может быть, потому что они дорогие или они не подходят под вашу специфику, и так далее. Вы хотите запретить использование этих сервисов всем аккаунтам, чтобы у них не было возможности ничего с этим сервисом сделать. В этом случае, вы пишете Policy, которая полностью запрещает доступ к этим сервисам и этот Policy привязываете к Root-аккаунту. Таким образом, все, что находится под Root-аккаунтом, это все ваши аккаунты через все ваши OU и доступ к этим сервисам будет заблокирован. Это очень удобно.
Другой момент, например, вы хотите для сервиса Amazon EC2 для крупных типов, которые дорогие, запретить использование на dev-аккаунтах, чтобы разработчики не включали без необходимости чересчур мощную машину. Вы знаете, что они могут свою работу сделать и менее мощными машинами и вы не понесете дополнительных затрат, если разработчик захочет включить мощную машину, чтобы стало чуточку быстрее. Разработчик не видит этих расходов, поэтому он может этого и не знать. Для этого вы можете написать такую Policy, которая блокирует запуск создания Amazon EC2 instance типа такого-то и выше, которые дорогие, и привязать эту Policy к Organizational Unit Dev. Таким образом, у вас на этих аккаунтах закроется доступ на указанные вами типы инстансов. Ещё один пример, показывающий, что можно делать с Policy, это то, что необязательно указывать чёрный список того, что нельзя делать. Вы можете внутри Policy прописать белый список cервисов и API операции, которые вы можете сделать в рамках этого сервиса, и которые будут доступны. Если этот список меньше того, что разрешено, можно сделать таким образом: вы указываете белый список и привязываете, либо к Root, либо к соответствующему OU. Забегая наперёд, скажу, если доступ к ресурсу не предоставлен явно, то он неявно запрещен, заблокирован. Поэтому при White list все то, что не разрешено явно, оно будет заблокировано. Про тонкости работы с IAM и написанием Policy мы будем заниматься на следующих наших занятиях.
Давайте остановимся на основных моментах, касающихся сервиса AWS Organizations. Первое – это возможность запрещать, либо разрешать использование тех или иных сервисов на ваши аккаунты через Policy;  возможность организовать и структурировать все ваши аккаунты через так называемые папки OU; используя AWS Organizations, вы можете автоматизировать создание новых аккаунтов, используя API.  Это те доступные операции (Operations), которые есть у сервиса AWS Organizations. Одна из основных возможностей то, что можно собирать счета со всех ваших AWS аккаунтов за каждый месяц в одном месте и видеть не отдельно в каждом аккаунте, а в одном месте – вашем мастер-аккаунте.
Когда мы говорим про безопасность с AWS Organizations, мы подразумеваем два пункта: первый – так называемые Service Control Policies, которые позволяют добавлять Policy на несколько аккаунтов, либо на целый OU, либо даже на целый Root-аккаунт, чтобы распространить на все аккаунты. Когда мы говорим про доступы, специфичные для каждого аккаунта, то мы подразумеваем сервис AWS Identity and Access Management (IAM), который позволяет, не отвлекаясь на основные запреты и разрешения на сервисы, персонально для каждой роли или для каждого пользователя выдать только те права, которые необходимы для осуществления своих функций.
Какими путями мы можем добраться до AWS Organizations? Это уже знакомая нам AWS Management Console. На неё будет отдельное демо. Другой – это наш AWS Command Line Interface (CLI). Третий – это Software Development Kits (SDK) – это библиотеки, специфичные для каждого языка программирования, чтобы на более высоком уровне автоматизировать всю деятельность, связанную с облаком, написав какой-то код. Четвёртый – это использование так называемого API через HTTPs для вызова определённых функций или операций напрямую.
Мы плавно переходим к предпоследней части нашей сессии и поговорим про AWS Billing and Cost Management, это все то, что связано с затратами в облаке, управлением расходами. Объединяющим сервисом, даже не сервисом, а группой сервисов AWS Billing and Cost Management – это специальная страница, на которой вы переходите, видите DashBoard следующего вида, на котором можете видеть ваши затраты в различных перспективах. С этого DashBoard можно перейти уже на конкретные сервисы AWS для выполнения соответствующих операций. К примеру, есть AWS Budgets – специальный сервис, который позволяет вам настроить бюджет облака, и при превышении этого бюджета будет совершаться некое действие. Может прийти уведомление, либо вы можете запретить превышение бюджета, но в этом случае есть риск того, что система перестанет работать, потому что облако отключит её из-за превышения бюджета.
Следующее – это AWS Cost and Usage Report. Этот сервис позволяет вам генерировать детальные отчёты, о том какой сервис, какая операция, в какое время, какой ресурс был использован, сколько это стоит и другие подробности, чтобы с этими детальными данными по вашим расходам иметь возможность строить более сложные и кастомизированные отчёты.
И третий сервис, он достаточно интересный и полезный сервис – AWS Cost Explorer.  На нем можно через достаточно удобный User Interface накликать себе просмотр отчёта по вашим расходам в удобной для вас перспективе. Вы можете сортировать по разным группам, например, сгруппировать ваши расходы по аккаунтам; по сервису и так далее. Более того, можно фильтровать, вы можете сгруппировать по сервису, при этом исключить или наоборот, включить некоторые аккаунты, тогда вы увидите соответствующую перспективу на ваши расходы, чтобы сделать какие-то выводы, возможно, оптимизировать. AWS Cost Explorer базируется на всех тех же данных, которые генерирует AWS Cost and Usage Report, второй сервис на слайде.
Давайте посмотрим на каждый из перечисленных сервисов. Самый первый, который охватывает другие наши сервисы, он помимо того, что объединяет сервисы, связанные с затратами в облаке, также предоставляет хранение всех счетов AWS, которые у вас были. Там вы можете увидеть, это часть скриншота с AWS Management Console, в которой вы видите ваши затраты с AWS Marketplace Charges, это когда вы покупаете сторонний продукт или приложение и используете в облаке, либо AWS Service Charges – это те сервисы, которые есть в AWS и соответствующие расходы. Когда мы говорим про AWS Cost Explorer, вы видите подобный график. Он сейчас в упрощённом виде. Есть отдельные блоки внутри страницы, которая помогает вам фильтровать, есть соответствующая Dropdown, т.е. выпадающее меню для группировки по нужным вам разрезам. Далее, если мы говорим про AWS Budgets, то интерфейс выглядит следующим образом. Вы можете прописать на уровне каждого сервиса, либо затрат на ваш аккаунт расходы, которые вы заложили и соответствующие действия, что будет происходить. Также он показывает текущие расходы на сегодняшний день и Forecasted, т.е. прогнозируемый расход, который будет при том же уровне, темпе потребления ресурсов и до конца месяца, т.е. расход за весь месяц. И последнее – это Cost and Usage Reporting. Вы можете видеть лишь малую часть отчёта, который генерируется, а также примеры полей, которые есть для построения своих персональных отчётов.
Мы переходим к последней части нашей сессии и поговорим про техподдержку. Что из себя представляет техподдержка AWS? Первое – это Technical Account Manager (TAM). Это – живой отдельно выделенный человек для вашего аккаунта, с которым можно выйти на связь, чтобы проконсультироваться по любым вопросам. Второе – это AWS Trusted Advisor – это специально разработанный сервис, который позволяет вам видеть  рекомендации по оптимизации затрат, либо любых других моментов, которые рекомендует сделать команда AWS в виде удобного сервиса. Третье – это AWS Support Concierge – это опять же живой человек, с ним общение идет по переписке и здесь вы можете получить любые ответы на ваши вопросы, не связанные с техническими моментами, т.е. не на уровне сервисов, где что как сделать подсказать помочь, а больше про ваши затраты на уровне аккаунта и другие подобные не технические вопросы.
Когда мы говорим про Support plans, существует четыре вида: Basic Support, Developer Support, Business Support, Enterprise Support. В порядке перечисления они становятся дороже, но и несут некоторый функционал, возможности, которые могут быть нужны для вашего бизнеса. Чем именно они отличаются, недостатки и преимущества, мы разберём позже на следующих занятиях, я не хочу сейчас вас сильно нагружать. Цель этого слайда – дать вам информацию, что есть такие Support plans, выделяют четыре вида, и пару слов скажу о Basic Support. Он дается вам по умолчанию при создании нового AWS аккаунта, он бесплатный, вы за него не платите. В нем есть возможность задать любой вопрос, касающийся ваших затрат на облако, и они вам ответят. Ответ приходит в течение 24 часов, если повезёт, придёт раньше, если нет то +\- 2-4 часа будете ждать. Другой момент, у вас нет возможности спросить какой-то технический вопрос про какой-то определённый сервис. Идея в том, что вы ищете это внутри документации, если не находите в документации, то на просторах интернета, но при этом есть возможность увеличивать лимиты, квоты на уровне аккаунта на любой из сервисов. Это важно, потому что для только созданных аккаунтов стараются максимально поставить большое количество лимитов, которые можно поменять, чтобы потенциально новые клиенты не навредили себе, не «выстрелили себе в ногу» и не нагенерили случайно большие затраты, не специально, не важно. И чтобы подобных разочарований не было, они максимально ограничивают, но эти ограничения гибкие, их можно поменять, а все то, что разрешено, оно в большинстве случаев подходит для изначально с нуля созданных аккаунтов. Если же вам нужно что-то увеличить, то в любом из Support plans, начиная от Basic Support, есть возможность через сервис AWS Quotas запросить увеличение лимита. Вам её увеличат, если это возможно, если увеличить нельзя, то вы по соответствующей линии получите эту информацию среди списка всех лимитов, которые есть.
Приведу один пример таких лимитов. На уровне каждого аккаунта можно создать не более ста Amazon S3 buckets. Это ограничение – Soft, это значит, его можно подвинуть, вы запрашиваете, какое количество вам нужно. Для некоторых сервисов поддержка дополнительно проверяет, действительно ли у вас дошло до ста Amazon S3 buckets и вам действительно ли нужно увеличить или нет. В некоторых случаях запрашивают, в некоторых не запрашивает. Таким образом, Soft можно подвинуть, он увеличивается и для вас расширяется. Все то, что Hard лимит, есть и такое, это связано с особенностями реализации этих сервисов, и, к сожалению, их подвинуть не получится.
На этом всё, это базовая информация, которую вам достаточно знать. Что следует запомнить и придёт на экзамене – это названия Support plans, есть такие вопросы: Basic, Developer, Business и Enterprise. Есть вопросы,  уточняющие некоторые детали и отличия Support plans, о них мы поговорим на следующих занятиях. Я ранее упоминал, что вы не можете создавать кейсы, т.е. не можете написать какой-то технический вопрос техподдержке на Basic Support plan, поэтому вы видите, что для любой срочности кейсов, начиная от low, normal, high, urgent, critical, нет возможности создать кейс. И начиная от Developer, и выше мы можем создать с каждым разом большее количество кейсов с увеличенным приоритетом, т.е. меньший приоритет это справа – Low. Высший приоритет это Critical, это очень срочно. Когда мы говорим low, это кейсы с периодом ожидания до 24 часов, у вас ничего не сломается за это время в IT-инфраструктуре. Когда мы говорим Normal, желательно получить ответ не позднее 12 часов. Если мы говорим High, то есть высокий приоритет – это 4 часа. Urgent – это cрочный вопрос в течение часа. И есть Critical, доступен только в Enterprise plan, там вам ответят в течение 15 минут, не более. Вы видите, что с увеличением plan количество доступных состоянии по срочности ваших вопросов расширяется.
Вам не нужно запоминать детально эту таблицу. Вы в целом помните, что есть пять видов срочности кейса, кейсы можно создавать с Developer plan и выше. У каждой срочности есть свой промежуток времени, внутри которого вам гарантированно ответят, это начиная с low, не более 24 часов до получения ответа, до Critical, когда вы получаете ответ в течение 15 минут после запроса. Все остальное, если есть возможность можете запомнить, если нет, то когда придёт вопрос, с учётом того, что вот основные моменты вы запомнили, можно будет подумать и правильно ответить на вопрос.
На этом мы подошли к концу нашей сегодняшней сессии. Давайте пройдёмся по основным моментам. Мы сегодня говорили про то, как происходит ценообразование сервисов AWS. После этого мы ознакомились с понятием Total Cost of Ownership, что это такое, для чего нужно, как его считают. Далее мы познакомились с так называемым сервисом AWS Pricing Calculator для возможности расчётов на стороне облака на вашу IT-инфраструктуру. Далее проговорили про AWS Organizations, это такой сервис, который набирает популярность и поняли почему он набирает популярность. Далее познакомились с теми четырьмя сервисами, которые связаны с затратами на облако Billing DashBoard и другие детали. Ну и самым последним мы проговорили про техподдержку от AWS, какая она бывает, какие виды, какие существуют виды Support plan и чем они отличаются. Здесь вы можете видеть ссылки, которые помогут вам получить более подробную информацию. На этом у меня все, спасибо большое, рад был вас видеть, увидимся на следующих занятиях!
