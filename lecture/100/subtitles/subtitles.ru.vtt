WEBVTT

00:00:00.000 --> 00:00:05.840
Добрый день, уважаемые студенты!
Я рад вас всех видеть на очередной лекции.

00:00:05.840 --> 00:00:10.600
Тема сегодняшней лекции это хранение, т.е.
Storage. Итак, давайте начнем. Сегодняшняя

00:00:10.600 --> 00:00:22.400
лекция состоит из четырех секций. Мы разберем
четыре основные сервисы, связанные с хранением.

00:00:22.400 --> 00:00:29.800
Это Amazon Elastic Block Store, т.е. жесткий диск,
который мы привязываем к инстансу Amazon EC2.

00:00:29.800 --> 00:00:33.520
Далее, это сервис Amazon S3, т.е. Amazon
Simple Storage Service, для объектного хранения.

00:00:33.520 --> 00:00:39.119
После чего разберем Amazon EFS,
Amazon Elastic File System - сервис, который

00:00:39.143 --> 00:00:45.640
предоставляет нам жесткие диски с общим
доступом для нескольких инстансов Amazon EC2.

00:00:45.640 --> 00:00:54.080
И самым последним разберем Amazon S3 Glacier,
это объектное холодное хранение.

00:00:54.080 --> 00:01:00.560
Есть определенные use cases, когда нам
необходим этот вариант IT-ресурса.

00:01:00.560 --> 00:01:08.033
Итак, мы с вами начинаем с Amazon
Elastic Block Store, чаще всего вы будете

00:01:08.057 --> 00:01:16.440
видеть этот сервис как Amazon EBS в
сокращенном варианте. Что же такое Amazon EBS?

00:01:16.440 --> 00:01:24.120
Это постоянное блочное хранение, т.е. жесткие диски,
которые вы подключаете к вашим инстансам Amazon EC2.

00:01:24.120 --> 00:01:30.720
Под постоянным имеется в виду при отключении вашего
инстанса, данные на жестких дисках сохраняются.

00:01:30.720 --> 00:01:38.054
Также жесткие диски Amazon EBS
это то место, куда устанавливается

00:01:38.078 --> 00:01:43.920
операционная система на
вашем инстансе Amazon EC2.

00:01:43.920 --> 00:01:52.128
Для высокой доступности Amazon EBS
реплицирует ваши данные в несколько

00:01:52.152 --> 00:02:00.360
разных ресурсах, прозрачным для
вас в рамках текущей availability zone.

00:02:00.360 --> 00:02:07.773
Таким образом, поломка жесткого диска для
вас прозрачна и Amazon берет на себя поддержку

00:02:07.797 --> 00:02:15.040
и гарантию того, что ваши Amazon EBS
Volume доступны и с ними ничего не происходит.

00:02:15.040 --> 00:02:20.766
Также здесь следует отметить, что
с Amazon EBS вы можете выделить

00:02:20.790 --> 00:02:26.068
необходимое количество
гигабайтов для ваших жестких дисков

00:02:26.092 --> 00:02:31.778
и по необходимости увеличивать
либо уменьшать, чтобы оплачивать

00:02:31.802 --> 00:02:37.120
только за то, что вы используете.
Есть два типа хранения.

00:02:37.120 --> 00:02:43.040
Мы с вами говорим, что Amazon EBS - это блочное
хранилище, а Amazon S3 - это объектное хранилище.

00:02:43.040 --> 00:02:47.871
Чем же оно отличается?
Давайте рассмотрим на примере изменения

00:02:47.895 --> 00:02:52.170
одного символа в файле
с размером 1 гигабайт, т.е. вы

00:02:52.194 --> 00:02:57.066
представляете, какой объем
символов внутри этого одного файла

00:02:57.090 --> 00:03:01.800
и что же происходит, когда
вы меняете только один символ.

00:03:01.800 --> 00:03:07.348
Когда мы говорим про блочное
хранилище, вы изменяете конкретное

00:03:07.372 --> 00:03:12.920
место в этом жестком диске,
только необходимую ячейку памяти.

00:03:12.920 --> 00:03:18.407
Когда мы говорим про объектное
хранилище, то для того, чтобы обновить один

00:03:18.431 --> 00:03:24.520
символ внутри этого большого файла, нам
необходимо перезаписать весь этот файл.

00:03:24.520 --> 00:03:31.100
Таким образом, вы видите, что мы
не можем частично менять файлы

00:03:31.124 --> 00:03:38.342
при объектном хранении. Это требует 
большую пропускную способность,

00:03:38.366 --> 00:03:45.691
нежели блочное хранение, когда
изменение файлов, вне зависимости от

00:03:45.715 --> 00:03:53.040
его размера, требует внесения
изменения только в определенном месте.

00:03:53.040 --> 00:04:01.920
А вся остальная часть большого файла может оставаться
нетронутой. Здесь возникают различного рода нюансы.

00:04:01.920 --> 00:04:10.788
Когда мы говорим про блочное хранилище, то мы
можем работать с меньшим пропускным каналом к

00:04:10.812 --> 00:04:19.680
сети. Когда мы говорим про объектное хранилище,
то может потребоваться более широкий канал.

00:04:19.680 --> 00:04:27.788
Но с другой стороны, цена за
хранение гигабайта данных в блочном

00:04:27.812 --> 00:04:35.920
хранении может быть на порядок
дороже, чем объектное хранилище.

00:04:35.920 --> 00:04:41.528
Таким образом, в зависимости от вашей
бизнес-задачи, вы будете принципиально

00:04:41.552 --> 00:04:47.160
для себя выбирать работать с блочным
хранилищем, либо с объектом хранилищем.

00:04:47.160 --> 00:04:54.950
Еще один важный момент, который следует
отметить, это то, что при частой перезаписи лишь

00:04:54.974 --> 00:05:03.840
небольшой части ваших файлов, возможно, говорит
о том, что следует использовать блочное хранилище.

00:05:03.840 --> 00:05:13.024
Когда вы работаете с маленькими, например, JSON
файлами, когда большая часть этого файла меняется,

00:05:13.048 --> 00:05:22.800
либо размер этих файлов не такой большой,
то объектное хранилище может быть для вас

00:05:22.800 --> 00:05:29.480
лучшим вариантом. Давайте пройдемся по основным
преимуществам использования сервиса Amazon EBS.

00:05:29.480 --> 00:05:33.847
Это то, что этот сервис предоставляет
вам возможность индивидуально

00:05:33.871 --> 00:05:37.640
создавать жесткие диски для
ваших инстансов Amazon EC2.

00:05:37.640 --> 00:05:44.568
Также мы говорим, что это хранение
блочного уровня, и все жесткие

00:05:44.592 --> 00:05:52.280
диски прозрачно для вас реплицируются
внутри той же availability zone.

00:05:52.280 --> 00:05:56.398
Таким образом, поломка
физически одного жесткого диска,

00:05:56.422 --> 00:06:00.540
она для вас прозрачна, так как
происходит автоматическое переключение на

00:06:00.564 --> 00:06:08.600
копию внутри той же availability zone, и ваш
EC2 инстанс продолжает работать без перебоев.

00:06:08.600 --> 00:06:14.517
Также есть возможность делать 
некие снапшоты, т.е. образы

00:06:14.541 --> 00:06:21.200
ваших жестких дисков, которые
сохраняются в сервисе Amazon S3.

00:06:21.200 --> 00:06:32.000
С этих снапшотов можете восстанавливать жесткие
диски и поднимать новые инстансы Amazon EC2.

00:06:32.000 --> 00:06:38.480
Существует четыре типа жестких дисков
внутри сервиса Amazon EBS.

00:06:38.480 --> 00:06:45.120
Подразделяются на две категории. Первые это SSD, т.е.
Solid State Drives, другие это HDD, т.е. Hard Disk Drives.

00:06:45.120 --> 00:06:50.560
SSD мы все знаем, они быстрее.
Внутри SSD делится тоже на два вида.

00:06:50.560 --> 00:06:59.080
Это General Purpose, общего назначения, т.е. 90-95%
случаев General Purpose для вас подходящий вариант.

00:06:59.080 --> 00:07:05.850
Когда мы говорим Provisioned IOPS, это
та опция, тот тип жестких дисков, который

00:07:05.874 --> 00:07:13.760
предоставляет вам больший канал IOPS, т.е.
операции записи и чтения на ваши жесткие диски.

00:07:13.760 --> 00:07:18.344
Если ваше приложение активно
записывает и читается с жестких

00:07:18.368 --> 00:07:22.640
дисков, то Provisioned IOPS
может быть опцией для вас.

00:07:22.640 --> 00:07:27.222
Здесь следует отметить, что Provisioned
IOPS стоит намного дороже, чем

00:07:27.246 --> 00:07:32.160
General Purpose, поэтому рекомендуется
всегда начинать с General Purpose.

00:07:32.160 --> 00:07:37.511
Если вам нужно больше IOPS,
больше производительность жестких

00:07:37.535 --> 00:07:43.600
дисков, то в этом случае есть
смысл рассматривать Provisioned IOPS.

00:07:43.600 --> 00:07:48.610
Когда мы говорим про жесткие диски
для установки операционной системы,

00:07:48.634 --> 00:07:53.280
то это всегда SSD, либо General
Purpose, либо Provisioned IOPS.

00:07:53.280 --> 00:08:00.282
Таким образом, вторая группа, т.е.
HDD, жесткие диски предыдущего поколения,

00:08:00.306 --> 00:08:06.560
они не могут быть использованы
для установки операционной системы.

00:08:06.560 --> 00:08:12.248
Вы можете использовать эти жесткие
диски как дополнительное хранилище,

00:08:12.272 --> 00:08:17.960
дополнительные жесткие диски для
дешевого хранения некоторых данных.

00:08:17.960 --> 00:08:22.160
Есть два варианта, это
Throughput-Optimized и Cold.

00:08:22.160 --> 00:08:30.652
Когда мы говорим Throughput-Optimized, оптимальный
вариант в рамках группы HDD, т.е. Hard Disk

00:08:30.676 --> 00:08:39.080
Drives, и подходит в большинстве случаев для
стандартных нагрузок, опять же для целей хранения.

00:08:39.080 --> 00:08:45.908
Когда мы говорим про холодное хранение, 
т.е. если у вас приложения нетребовательны

00:08:45.932 --> 00:08:52.168
к операциям чтения и записи на
жесткие диски, то, чтобы сократить расходы

00:08:52.192 --> 00:08:58.724
на конкретный сервис Amazon EBS,
рекомендуется рассмотреть опцию Cold, которая

00:08:58.748 --> 00:09:05.280
по производительности чуть хуже, но
при этом по стоимости также стоит дешевле.

00:09:05.280 --> 00:09:13.480
Актуальные цены вы всегда можете посмотреть на
официальной странице сервиса во вкладке Pricing.

00:09:13.480 --> 00:09:22.320
Давайте теперь подробнее рассмотрим, какие же есть
use cases для каждого типа жестких дисков EBS.

00:09:22.320 --> 00:09:28.808
Когда мы говорим General Purpose, из того, что
можно дополнительно отметить, это использование

00:09:28.832 --> 00:09:35.320
Virtual desktops, это когда у вас есть удаленный
рабочий стол и ваши сотрудники работают там.

00:09:35.320 --> 00:09:42.108
Еще один пример, который
стоит упомянуть, General Purpose

00:09:42.132 --> 00:09:48.920
также следует применять для
ваших development и test сред.

00:09:48.920 --> 00:09:53.600
Обычно, когда это не Production
среда, то нагрузки там минимальные.

00:09:53.600 --> 00:10:02.088
Обычно эти нагрузки искусственные, поэтому для целей
тестирования и разработки дешевый вариант, который

00:10:02.112 --> 00:10:10.600
можем использовать для установки операционной
системы, рекомендуется применять General Purpose.

00:10:10.600 --> 00:10:16.828
Если мы говорим про Provisioned
IOPS, это те приложения, которые

00:10:16.852 --> 00:10:23.080
сильно зависят от операции чтения
и записи на ваши жесткие диски.

00:10:23.080 --> 00:10:28.408
Как пример, может быть, у вас на
вашем Amazon EC2 установлена база

00:10:28.432 --> 00:10:33.677
данных, т.е. вы решили по тем 
или иным причинам не использовать

00:10:33.701 --> 00:10:38.995
Service Managed Database RDS, а
решили самостоятельно установить

00:10:39.019 --> 00:10:43.640
на виртуальный сервер вашу
базу данных и там работать.

00:10:43.640 --> 00:10:52.520
В этом случае база данных – это тот пример, 
когда операции чтения и записи выше среднего.

00:10:52.520 --> 00:10:56.320
Таким образом, Provisioned IOPS
больше подходит в этом случае.

00:10:56.320 --> 00:11:01.760
Если мы говорим про следующий
третий вид, это Throughput-Optimized.

00:11:01.760 --> 00:11:09.292
Как примеры могут быть работа с
Big data, Data warehouse, т.е. склад

00:11:09.316 --> 00:11:16.848
данных, обработка логов и т.д.
Если мы говорим про Cold, это все те

00:11:16.872 --> 00:11:24.120
опции, когда нам необходимо
сократить расходы на хранение, либо у

00:11:24.144 --> 00:11:31.960
нас достаточно большой объем
данных, которые не часто запрашиваются.

00:11:31.960 --> 00:11:40.560
В этом случае Cold – опция, тип жестких
дисков наиболее подходит.

00:11:40.560 --> 00:11:48.880
Давайте отметим еще парочку преимуществ использования
сервиса Amazon EBS касательно снапшотов.

00:11:48.880 --> 00:11:53.888
Мы говорили, что снапшот – это
некая сохраненная копия вашего

00:11:53.912 --> 00:11:58.920
жесткого диска и она привязывается
к определенному времени.

00:11:58.920 --> 00:12:04.075
Можно настроить ежедневные,
еженедельные, либо более

00:12:04.099 --> 00:12:09.760
сложный график создания
снапшотов ваших жестких дисков.

00:12:09.760 --> 00:12:15.125
Когда создается самый первый
снапшот, то он называется baseline

00:12:15.149 --> 00:12:20.080
snapshot, т.е. он сохраняет 
полностью весь жесткий диск.

00:12:20.080 --> 00:12:27.968
Так как мы работаем с блочным хранилищем, то
у нас есть возможность все следующие снапшоты

00:12:27.992 --> 00:12:35.880
хранить не всю целую копию жесткого диска, а
лишь сохранить изменения с последнего снапшота.

00:12:35.880 --> 00:12:43.840
Таким образом, представим, что у вас есть 10
снапшотов на каждый день за последние 10 дней.

00:12:43.840 --> 00:12:49.148
И это не говорит о том, что при размере,
например, 10 гигабайтов вашего жесткого

00:12:49.172 --> 00:12:54.480
диска, то все 10 снапшотов будут весить
100 гигабайтов, т.е. 10 умноженные на 10.

00:12:54.480 --> 00:13:01.080
А наоборот, первый будет весить только 10 гигабайтов,
а все последующие будут хранить лишь изменения.

00:13:01.080 --> 00:13:11.389
Если мы говорим о том, что ваш жесткий
диск не менялся сильно, то может получится так,

00:13:11.413 --> 00:13:21.600
что все оставшиеся ваши снапшоты, т.е.
9 снапшотов могут весить меньше 1 гигабайта.

00:13:21.600 --> 00:13:25.240
Если мы говорим про шифрование, т.е.
encryption, то оно также доступно.

00:13:25.240 --> 00:13:31.618
Вы можете подключить сервис AWS KMS
для шифрования ваших жестких дисков,

00:13:31.642 --> 00:13:37.840
и доступно это в рамках сервиса
Amazon EBS без дополнительной платы.

00:13:37.840 --> 00:13:43.760
Вы лишь оплачиваете отдельно за сервис AWS KMS
за использование и создание ключей шифрования.

00:13:43.760 --> 00:13:49.124
Если мы говорим про эластичность, 
т.е. elasticity, то здесь следует

00:13:49.148 --> 00:13:54.920
отметить, что размер вашего жесткого
диска может динамически меняться.

00:13:54.920 --> 00:13:59.227
Более того, вы можете даже
не останавливать ваш инстанс,

00:13:59.251 --> 00:14:03.480
а динамически увеличить
размер вашего жесткого диска.

00:14:03.480 --> 00:14:09.540
Также есть возможность менять тип
жестких дисков динамически, т.е. нет

00:14:09.564 --> 00:14:16.328
необходимости вам заниматься копированием 
от одного жесткого диска на другой

00:14:16.352 --> 00:14:22.504
жесткий диск другого типа. Достаточно 
вызвать соответствующую команду по

00:14:22.528 --> 00:14:29.200
изменению типа, и все необходимые
действия будут произведены на стороне AWS.

00:14:29.200 --> 00:14:34.960
Из чего складывается оплата за сервис Amazon EBS?
Оно состоит из четырех составляющих.

00:14:34.960 --> 00:14:41.348
Первое – это объемы, т.е.
вы оплачиваете за гигабайт ежемесячно

00:14:41.372 --> 00:14:47.760
за суммарное количество гигабайтов
на всех ваших жестких дисках.

00:14:47.760 --> 00:14:54.581
Далее это – IOPS, т.е.
если мы говорим про General

00:14:54.605 --> 00:15:02.680
Purpose SSD, то цена за IOPS
включена в оплату за Volume.

00:15:02.680 --> 00:15:11.320
Если мы говорим про Magnetic, вы дополнительно
оплачиваете за каждый request input output операции.

00:15:11.320 --> 00:15:15.289
Если мы говорим Provisioned
IOPS, то вы оплачиваете

00:15:15.313 --> 00:15:19.920
дополнительно за объем IOPS,
который вы для себя указали.

00:15:19.920 --> 00:15:26.888
Следующая категория это снапшоты, 
т.е. снапшоты – это копии

00:15:26.912 --> 00:15:33.880
ваших жестких дисков, которые
хранятся в сервисе Amazon S3.

00:15:33.880 --> 00:15:41.538
Таким образом, вы будете оплачивать
по тарифам Amazon S3 сумму

00:15:41.562 --> 00:15:49.220
в зависимости от объемов
гигабайтов ваших снапшотов суммарно.

00:15:49.220 --> 00:15:55.561
Поэтому когда мы говорим про
снапшоты, для экономии оплаты за

00:15:55.585 --> 00:16:03.091
хранение внутри Amazon S3 рекомендуется
правильно настроить расписание

00:16:03.115 --> 00:16:10.256
создания снапшотов, т.е.
как пример вам нет необходимости создавать

00:16:10.280 --> 00:16:16.880
ежедневные снапшоты и хранить
все снапшоты за последний год.

00:16:16.880 --> 00:16:23.160
Достаточно хранить ежедневные
снапшоты за последнюю неделю.

00:16:23.160 --> 00:16:31.260
Далее от недели до одного месяца можно хранить
снапшоты еженедельные, т.е. еще три снапшота.

00:16:31.260 --> 00:16:38.040
Далее все те снапшоты, которые старше одного
месяца до одного года можно хранить ежемесячно.

00:16:38.040 --> 00:16:47.226
Добавляется еще 11 снапшотов. Таким образом можно
сэкономить на хранении ваших снапшотов, но при этом

00:16:47.250 --> 00:16:57.080
иметь достаточную гибкость в случае если нужно
восстановить предыдущее состояние жестких дисков.

00:16:57.080 --> 00:17:03.368
И последнее это Data transfer, 
мы с вами помним, что мы за

00:17:03.392 --> 00:17:09.680
трансфер данных в рамках одного
региона ничего не оплачиваем.

00:17:09.680 --> 00:17:14.441
Мы не оплачиваем за inbound traffic, 
т.е. когда мы данные загружаем

00:17:14.465 --> 00:17:19.155
внутри AWS, но при этом если мы
копируем наши жесткие Amazon EBS

00:17:19.179 --> 00:17:24.157
Volume, жесткие диски с одного
региона на другой, то здесь необходимо

00:17:24.181 --> 00:17:29.160
оплатить стандартную оплату за
data transfer между двумя регионами.

00:17:29.160 --> 00:17:33.108
Далее уже скопированные
жесткие диски на втором регионе

00:17:33.132 --> 00:17:37.520
уже будут оплачиваться по
стандартным тарифам того региона.

00:17:37.520 --> 00:17:46.480
На этом мы подошли к концу первой секции. Давайте
пройдемся по основным моментам сервиса Amazon EBS.

00:17:46.480 --> 00:17:50.040
Это сервис, который предоставляет
вам блочное хранилище.

00:17:50.040 --> 00:17:55.600
Простыми словами, это жесткие диски, которые
вы подключаете к вашим инстансам Amazon EC2.

00:17:55.600 --> 00:18:01.448
На этих жестких дисках устанавливается
операционная система, а также

00:18:01.472 --> 00:18:07.320
вы можете подключать дополнительные
жесткие диски для целей хранения.

00:18:07.320 --> 00:18:14.920
Выделяют две группы типов жестких дисков,
это HDD, которые медленные, но дешевле.

00:18:14.920 --> 00:18:22.360
И второй вариант – это SSD, более продвинутый
вариант, работает быстрее, но при этом стоит дороже.

00:18:22.360 --> 00:18:31.440
Здесь важный момент, вы для установки операционной
системы можете выбрать только тип SSD.

00:18:31.440 --> 00:18:37.520
Все ваши жесткие диски прозрачно для вас
реплицируются внутри той же availability zone.

00:18:37.520 --> 00:18:45.268
Таким образом, физическая поломка конкретного
жесткого диска не отражается на работе

00:18:45.292 --> 00:18:49.154
вашего инстанса Amazon EC2,
вашего приложения, так как происходит

00:18:49.178 --> 00:18:53.040
автоматическое переключение на реплику, 
т.е. копию жесткого диска.

00:18:53.040 --> 00:19:00.667
Можно настроить шифрование, это происходит
также прозрачно, нет никаких сложностей,

00:19:00.691 --> 00:19:07.480
подключается сервис AWS KMS и они
работают достаточно нативно совместно.

00:19:07.480 --> 00:19:12.877
Все ваши volumes могут быть
динамически увеличены либо уменьшены в

00:19:12.901 --> 00:19:18.880
размере, а также вы с легкостью
можете менять тип ваших жестких дисков.

00:19:18.880 --> 00:19:25.360
Когда мы говорим про backup ваших жестких
дисков, то мы создаем снапшоты.

00:19:25.360 --> 00:19:34.500
Снапшоты это копия ваших жестких дисков,
хранящихся внутри сервиса Amazon S3.

00:19:34.500 --> 00:19:41.880
Мы переходим с вами ко второй части нашей лекции
и поговорим про сервис Amazon Simple Storage Service.

00:19:41.880 --> 00:19:50.680
Чаще вы будете видеть название этого 
сервиса в сокращенном варианте Amazon S3.

00:19:50.680 --> 00:19:57.440
Amazon S3 – это сервис, который предоставляет
объектное хранилище для ваших данных.

00:19:57.440 --> 00:20:04.346
Мы с вами ранее упоминали, что при изменении
даже одного символа внутри файла, для того

00:20:04.370 --> 00:20:11.920
чтобы обновить этот файл внутри объектного
хранилища, необходимо его полностью перезагрузить.

00:20:11.920 --> 00:20:19.640
В зависимости от вашей бизнес-задачи, нужно будет
использовать блочное, либо объектное хранилище.

00:20:19.640 --> 00:20:27.256
Все ваши данные, которые хранятся в рамках
Amazon S3, они организованы по bucket-ам,

00:20:27.280 --> 00:20:34.160
т.е. вы создаете некий bucket, внутри
bucket-a уже заливаете ваши объекты.

00:20:34.160 --> 00:20:39.442
Вы можете создавать структуру
из папок, оно на стороне

00:20:39.466 --> 00:20:44.748
AWS Management Console
будет отображаться как структура

00:20:44.772 --> 00:20:50.054
папок, но на самом деле это
хранение файлов с ключом,

00:20:50.078 --> 00:20:55.360
с путем до этого файла,
который содержит в себе слэшы.

00:20:55.360 --> 00:21:05.535
Таким образом, внутри под капотом, все происходит не
как папки и файлы, а по-другому, при этом отображение

00:21:05.559 --> 00:21:17.160
для удобства, для легкости восприятия и удобной
работы можете видеть и работать как файлы и папки.

00:21:17.160 --> 00:21:22.560
Давайте пройдемся по основным
преимуществам сервиса Amazon S3.

00:21:22.560 --> 00:21:26.640
Мы с вами говорили, что Amazon
S3 это объектное хранилище.

00:21:26.640 --> 00:21:33.765
Это сервис, который предоставляет 
durability, т.е. надежность

00:21:33.789 --> 00:21:41.508
хранения ваших данных 99.99,
либо по-другому говорят 11 девяток,

00:21:41.532 --> 00:21:49.426
т.е. практически 100% надежность
хранения ваших данных и гарантирует

00:21:49.450 --> 00:21:56.400
вам, что вы свои данные не потеряете.
Как это реализовано?

00:21:56.400 --> 00:22:05.856
Это реализовано следующим образом: в рамках
сервиса Amazon S3 происходит прозрачная операция

00:22:05.880 --> 00:22:14.920
по репликации нескольких копии всех объектов, 
которые вы храните внутри этого сервиса.

00:22:14.920 --> 00:22:24.848
Таким образом, когда происходит техническая поломка
железа, которая хранит именно определенный ваш

00:22:24.872 --> 00:22:34.800
объект, то для последующей работы и в доступном
состоянии для вас остаются реплики этого объекта.

00:22:34.800 --> 00:22:45.028
Далее происходит автоматическое понимание, что на
стороне AWS под капотом что-то произошло с этим

00:22:45.052 --> 00:22:49.843
железом и все объекты,
которые хранились в этом жестком

00:22:49.867 --> 00:22:55.280
диске, они еще раз реплицируются
уже в другие жесткие диски.

00:22:55.280 --> 00:23:02.895
Таким образом, этот процесс
автоматизирован на стороне AWS и благодаря вот

00:23:02.919 --> 00:23:11.160
этому процессу репликации достигается
99.99% надежности хранения ваших данных.

00:23:11.160 --> 00:23:18.328
Если мы говорим про размер объектов, которые
вы можете хранить, то максимальный размер,

00:23:18.352 --> 00:23:25.520
который вы можете сохранить внутри Amazon
S3 может достигать 5 ТБ для одного объекта.

00:23:25.520 --> 00:23:38.120
Таким образом, вы внутри Amazon S3 можете
хранить снапшоты ваших баз данных как объект.

00:23:38.120 --> 00:23:43.625
Amazon S3 является managed сервисом.
Таким образом, вы не управляете

00:23:43.649 --> 00:23:48.661
никакой инфраструктурой, не
делаете никаких настроек, а лишь

00:23:48.685 --> 00:23:53.980
вам предоставляется сервис в
готовом виде и вы загружаете любое,

00:23:54.004 --> 00:23:59.720
фактически неограниченное
количество объектов внутри этого сервиса.

00:23:59.720 --> 00:24:16.560
И все процессы, которые должны быть выполнены для
поддержания хранения ваших данных обеспечиваются AWS.

00:24:16.560 --> 00:24:25.621
Если мы говорим про шифрование, то можно
настроить для сервиса Amazon S3 хранение

00:24:25.645 --> 00:24:34.480
как в покое, т.е. at rest, также и 
in transit, т.е. во время передачи данных.

00:24:34.480 --> 00:24:42.622
Другой интересной фичей Amazon S3 является настройка
так называемых event notifications, т.е. вы можете

00:24:42.646 --> 00:24:50.548
для определенных event-ов, связанных с сервисом
Amazon S3, например это может быть загрузка нового

00:24:50.572 --> 00:24:58.914
файла, либо удаление файла, по определенному пути
навесить на нее триггер и по триггеру либо настроить

00:24:58.938 --> 00:25:07.280
уведомления через сервис Amazon SNS, либо загрузку
этого event-а в Amazon SQS для последующей обработки.

00:25:07.280 --> 00:25:15.068
Также вы можете передать это
лямбде для того, чтобы лямбда

00:25:15.092 --> 00:25:22.880
напрямую получила этот event и
произвела некоторые действия.

00:25:22.880 --> 00:25:27.640
Когда мы работаем с сервисом Amazon S3,
мы храним различного рода данные.

00:25:27.640 --> 00:25:33.828
Это в свою очередь, говорит
о том, что частота обращения,

00:25:33.852 --> 00:25:40.040
частота работы с этими
данными могут сильно различаться.

00:25:40.040 --> 00:25:45.680
Некоторые данные вы будете запрашивать и возможно
изменять, либо только читать каждый день.

00:25:45.680 --> 00:25:53.219
Некоторые данные вы возможно будете
запрашивать раз в несколько месяцев, а некоторые

00:25:53.243 --> 00:26:01.600
данные, которые за всю жизнь существования
этих данных могут быть не запрошены ни один раз.

00:26:01.600 --> 00:26:09.396
Есть такие данные, use case, как самый явный
пример это по некоторым регуляторным требованиям,

00:26:09.420 --> 00:26:16.796
определенным положениям в зарегулированных
сферах таких как финансовая сфера, медицина,

00:26:16.820 --> 00:26:25.078
государственный сектор – это те направления, те
сферы, где по некоторым регуляторным требованиям

00:26:25.102 --> 00:26:33.360
вам несколько лет, до 5-10 лет необходимо хранить
эти данные, так как они могут быть востребованы.

00:26:33.360 --> 00:26:38.840
Если будут востребованы, то компания обязана
предоставить некоторую информацию.

00:26:38.840 --> 00:26:45.683
Таким образом, ввиду того, что
такие кейсы в целях регуляторных

00:26:45.707 --> 00:26:52.108
могут не возникнуть, то эти
данные могут по большей своей

00:26:52.132 --> 00:26:59.028
части храниться несколько лет, а
потом по истечению необходимого

00:26:59.052 --> 00:27:05.400
минимального времени хранения
могут быть успешно удалены.

00:27:05.400 --> 00:27:10.734
Давайте пройдемся теперь по
типам хранения внутри Amazon S3,

00:27:10.758 --> 00:27:16.908
которые были специально разработаны
для того, чтобы лучше подходить

00:27:16.932 --> 00:27:22.674
под ваши бизнес-задачи и при
этом иметь возможность экономить и

00:27:22.698 --> 00:27:28.440
сделать более cost-effective решение
с помощью сервиса Amazon S3.

00:27:28.440 --> 00:27:35.720
Самый первый и самый популярный тип хранения,
класс хранения это – Amazon S3 Standard.

00:27:35.720 --> 00:27:44.651
Это тот класс хранения, который подходит
для более 90% случаев и это тот класс,

00:27:44.675 --> 00:27:53.605
когда вы можете надежно, т.е.
11 девяток хранить ваши данные. Вы можете в режиме

00:27:53.629 --> 00:28:03.123
онлайн запрашивать ваши данные и
соответственно для того, чтобы это все обеспечить,

00:28:03.147 --> 00:28:12.640
необходимы те или иные ресурсы, а вот все
это формирует итоговую цену этого класса.

00:28:12.640 --> 00:28:20.108
Если мы хотим сделать наши расходы
меньше, то мы можем рассмотреть

00:28:20.132 --> 00:28:27.600
следующий класс хранения,
называется Amazon S3 Intelligent Tiering.

00:28:27.600 --> 00:28:34.638
Идея этого класса в том, что Amazon
за вас анализирует, как часто происходит

00:28:34.662 --> 00:28:42.547
работа, обращение, перезапись каждого
объекта внутри всех ваших бакетов, там где вы

00:28:42.571 --> 00:28:50.363
подключите этот класс и по своей внутренней
логике переносит ваши объекты на уровне

00:28:50.387 --> 00:28:57.988
каждого объекта от одного класса
хранения на другой, для того, чтобы сэкономить

00:28:58.012 --> 00:29:04.927
ваши расходы на сервис Amazon S3.
При этом никак не меняется эффективность

00:29:04.951 --> 00:29:12.719
работы сервиса Amazon S3, т.е. если ваши 
данные часто запрашиваются и должны быть

00:29:12.743 --> 00:29:20.127
доступны онлайн по требованию, то
соответственно Intelligent Tiering ни в коем

00:29:20.151 --> 00:29:28.400
случае не переведет эти объекты в класс,
который не может сразу извлечь ваши объекты.

00:29:28.400 --> 00:29:32.870
Обратный случай, когда он
видит, что ваши объекты совсем не

00:29:32.894 --> 00:29:37.364
запрашиваются, то почему бы
эти данные не перенести в класс

00:29:37.388 --> 00:29:41.967
хранения дешевле, но который
может быть недоступен сразу или

00:29:41.991 --> 00:29:46.960
может быть в класс хранения,
который менее надежен, но дешевле.

00:29:46.960 --> 00:29:56.400
Если мы говорим про следующий
класс, это Standard-Infrequent Access.

00:29:56.400 --> 00:30:02.641
Этот класс хранения отличается
от стандартного тем, что здесь вы

00:30:02.665 --> 00:30:09.800
можете хранить ваши объекты, которые
вы не часто запрашиваете, дешевле. Когда мы

00:30:09.800 --> 00:30:17.240
говорим про стандартный класс, вы оплачиваете
только за суммарное количество гигабайтов в месяц.

00:30:17.240 --> 00:30:22.290
Когда мы говорим Standard-Infrequent
Access, вы оплачиваете

00:30:22.314 --> 00:30:27.800
за суммарное количество гигабайтов
данных, которые вы храните.

00:30:27.800 --> 00:30:32.832
При этом тариф за каждый гигабайт 
ниже, т.е. дешевле, но при этом

00:30:32.856 --> 00:30:37.888
добавляется еще один компонент,
который формирует итоговую цену.

00:30:37.912 --> 00:30:43.291
Это оплата за Retrieval fee, т.е.
за извлеченное количество гигабайтов,

00:30:43.315 --> 00:30:48.000
за каждый гигабайт, вы отдельно
оплачиваете некоторую сумму.

00:30:48.000 --> 00:30:52.248
Таким образом, если вы положите
ваши часто запрашиваемые

00:30:52.272 --> 00:30:56.520
данные в Infrequent Access,
это будет очень невыгодно.

00:30:56.520 --> 00:31:02.878
Вы будете переплачивать
фактически ввиду того, что

00:31:02.902 --> 00:31:10.560
стоимость извлечения может
быть больше стоимости хранения.

00:31:10.560 --> 00:31:15.577
Обратный случай, если у вас
данные, которые вы не часто

00:31:15.601 --> 00:31:22.108
запрашиваете, то может получиться
так, что за счет скидки за хранение

00:31:22.132 --> 00:31:27.940
и за счет того, что вы не так
часто запрашиваете, итоговая сумма

00:31:27.964 --> 00:31:33.680
Standard-Infrequent Access может
быть выгоднее, чем Standard.

00:31:33.680 --> 00:31:40.240
Следующий класс хранения – это One Zone-Infrequent
Access. Чем он отличается от предыдущих?

00:31:40.240 --> 00:31:45.748
Это тем, что ваши данные хранятся
в рамках одной Availability zone,

00:31:45.772 --> 00:31:51.280
тогда как предыдущие классы
хранения Standard, Standard-Infrequent

00:31:51.304 --> 00:31:56.735
Access и все другие, они хранятся
как минимум в трех Availability

00:31:56.759 --> 00:32:01.680
zone-aх. За счет этого 
достигается надежность 11 девяток.

00:32:01.680 --> 00:32:06.468
Когда мы говорим про One
Zone-Infrequent Access, то это одна

00:32:06.492 --> 00:32:11.280
Availability zone, соответственно
там не 11 девяток, а меньше.

00:32:11.280 --> 00:32:21.268
Этот класс хранения может быть идеальным
вариантом, если вы храните данные, которые

00:32:21.292 --> 00:32:31.280
могут быть легко восстановлены, либо
потеря которых некритична для вашего бизнеса.

00:32:31.280 --> 00:32:42.028
В этом случае вы можете хранить данные в
одной Availability zone, какая-то небольшая часть

00:32:42.052 --> 00:32:49.294
может потеряться и при этом вы не так много,
т.е. намного меньше будете оплачивать по

00:32:49.318 --> 00:32:56.560
сравнению с Standard классом хранения.
Осталось еще два класса хранения, это Glacier.

00:32:56.560 --> 00:33:03.168
Это тот класс хранения, который
позволяет вам надежно хранить архивные

00:33:03.192 --> 00:33:09.800
данные, т.е. те данные, которые вы
скорее всего не будете запрашивать.

00:33:09.800 --> 00:33:16.408
Есть вероятность того, что вы эти данные
запросите, но в большинстве случаев они

00:33:16.432 --> 00:33:23.040
так и останутся незапрошенными и вы
должны хранить данные лишь некоторый период.

00:33:23.040 --> 00:33:31.068
Amazon S3 Glacier предоставляет самый
дешевый тариф за гигабайт хранения

00:33:31.092 --> 00:33:39.120
данных, при этом вы не можете извлечь
ваши данные сразу в режиме онлайн.

00:33:39.120 --> 00:33:46.049
Есть три опции как вы эти данные можете
извлечь, это самый быстрый, который извлекает

00:33:46.073 --> 00:33:53.580
ваши данные в течение нескольких минут и
самый медленный, для извлечения которых требуется

00:33:53.604 --> 00:34:01.070
несколько часов. Но при этом понятно, что
тот, который за минуту извлекает по тарифу стоит

00:34:01.094 --> 00:34:08.560
дороже, а тот, который за несколько часов
будет извлекать ваши данные, он стоит дешевле.

00:34:08.560 --> 00:34:17.248
Но при этом помните, что когда мы работаем с Glacier
и вы часто запрашиваете ваши данные, что неприемлемо

00:34:17.272 --> 00:34:25.960
для этого класса, то оплата за этот класс хранения
может выйти дороже, чем стандартный класс хранения.

00:34:25.960 --> 00:34:31.244
Поэтому нужно знать с какими
данными вы работаете и соответственно

00:34:31.268 --> 00:34:36.960
настраивать life cycle policy, про
который мы поговорим чуть попозже.

00:34:36.960 --> 00:34:41.840
Самый последний класс
хранения – это Glacier Deep Archive.

00:34:41.840 --> 00:34:46.513
Это те данные, которые вы
можете хранить максимально

00:34:46.537 --> 00:34:52.128
дешево, которые по регуляторным
требованиям должны храниться

00:34:52.152 --> 00:34:57.284
несколько лет и обычно сюда
относят данные, к которым вы

00:34:57.308 --> 00:35:02.440
обращаетесь возможно один
или два раза в течение года.

00:35:02.440 --> 00:35:08.760
Эти данные идеально подходят
для хранения в Glacier Deep Archive.

00:35:08.760 --> 00:35:14.036
Если мы говорим про извлечение
данных, то данные обычно

00:35:14.060 --> 00:35:20.120
извлекаются не раньше, чем 12 часов, 
т.е. в течение 12 часов.

00:35:20.120 --> 00:35:31.800
Это нужно учитывать при работе с классами
хранения Glacier и Glacier Deep Archive.

00:35:31.800 --> 00:35:39.920
Мы с вами двигаемся дальше. Повторю
некоторые нюансы по работе с сервисом Amazon S3.

00:35:39.920 --> 00:35:45.440
Мы с вами сказали, что все наши данные
организованы внутри bucket-ов и внутри

00:35:45.464 --> 00:35:51.640
bucket-ов вы создаете некое подобие
структуры папок и файлов и храните ваши объекты.

00:35:51.640 --> 00:36:04.000
Они именуются некоторым образом и имя должно быть
уникальным для всего сервиса Amazon S3, глобально.

00:36:04.000 --> 00:36:10.616
Представим, что в регионе
us-east-1 был создан bucket Елжан

00:36:10.640 --> 00:36:18.399
Мауленов, то в другом регионе,
например, eu-west-1, это европейский

00:36:18.423 --> 00:36:25.655
регион, я не могу создать bucket
с таким же именем, так как пул

00:36:25.679 --> 00:36:34.080
названий bucket-ов должен быть
уникальный в рамках всего AWS глобально.

00:36:34.080 --> 00:36:39.968
Но есть нюанс касательно хранения.
Когда мы создаем bucket,

00:36:39.992 --> 00:36:45.880
мы указываем к какому региону
будет относиться наш bucket.

00:36:45.880 --> 00:36:50.160
Это тот регион, где будут храниться
ваши данные внутри этого bucket-а.

00:36:50.160 --> 00:37:03.680
Давайте приведу пример. Представим, что я создал
bucket Елжан-Мауленов-1 в регионе North Virginia.

00:37:03.680 --> 00:37:08.381
В этом случае все объекты, которые
я буду туда заливать, будут храниться

00:37:08.405 --> 00:37:12.840
на серверах, которые физически
находятся в регионе North Virginia.

00:37:12.840 --> 00:37:17.823
И также создал в AWS Management
Console другой bucket, который

00:37:17.847 --> 00:37:23.240
называется Елжан-Мауленов-2, но
при этом как регион указал Токио.

00:37:23.240 --> 00:37:32.542
В этом случае все данные,
объекты, которые буду заливать в этот

00:37:32.566 --> 00:37:42.920
bucket, они будут храниться физически
в рамках границ региона Токио.

00:37:42.920 --> 00:37:50.468
Здесь на слайде вы можете видеть
пример двух вариантов ссылки до

00:37:50.492 --> 00:37:58.040
ваших объектов, т.е. есть вариант 
Bucket path-style URL endpoint.

00:37:58.040 --> 00:38:04.968
Это когда у вас в начале идет 
стандартная часть, т.е. 

00:38:04.992 --> 00:38:11.920
s3.название региона.amazonaws.com, дальше
/bucket name/путь к вашему файлу.

00:38:11.920 --> 00:38:16.821
Есть другой вариант, это
Bucket virtual hosted-style URL

00:38:16.845 --> 00:38:22.640
endpoint, когда название bucket
name уже сидит в названии сайта.

00:38:22.640 --> 00:38:28.584
И через / идет уже путь к вашему объекту.
И тот и другой вариант

00:38:28.608 --> 00:38:35.120
рабочий и в зависимости от того,
какой удобнее для вас вы выбираете.

00:38:35.120 --> 00:38:41.870
Если мы говорим касательно доступа к
вашим объектам, то вы можете настроить

00:38:41.894 --> 00:38:48.279
на уровне bucket-а, а также на
уровне каждого объекта внутри bucket-а

00:38:48.303 --> 00:38:55.187
соответствующие bucket policy, которые
определяют кто, как может обращаться

00:38:55.211 --> 00:39:02.560
или какие операции может производить
на bucket-е либо на определенном объекте.

00:39:02.560 --> 00:39:09.400
Когда мы говорим про сервис Amazon S3, bucket
у нас хранится в рамках одного региона.

00:39:09.400 --> 00:39:16.213
Также по мере необходимости вы можете
загрузить очень маленький файл в один

00:39:16.237 --> 00:39:23.880
bucket и по необходимости этот bucket
может быть увеличен на несколько терабайтов.

00:39:23.880 --> 00:39:30.120
Нет никаких ограничений и вы фактически будете
оплачивать только за то, что вы используете.

00:39:30.120 --> 00:39:34.899
Также важный момент это
то, что к Amazon S3 вы можете

00:39:34.923 --> 00:39:40.348
обращаться со всех возможных
вариантов, а именно через AWS

00:39:40.372 --> 00:39:45.157
Management Console, через
Command Line Interface, т.е.

00:39:45.181 --> 00:39:50.600
Amazon CLI, а также AWS SDK, т.е.
Software Development Kit.

00:39:50.600 --> 00:39:57.568
Если мы говорим про use case сервиса Amazon
S3, то мы можем использовать Amazon S3 для

00:39:57.592 --> 00:40:04.560
того, чтобы хранить некоторые файлы,
медиа-файлы, которые используют ваше приложение.

00:40:04.560 --> 00:40:12.080
Также мы можем хостить статический веб-сайт внутри
Amazon S3, есть специальная feature для этого.

00:40:12.080 --> 00:40:19.883
S3 может выступать как местом хранения ваших
backup-ов, снапшотов, также Amazon S3 может

00:40:19.907 --> 00:40:28.160
использоваться для disaster recovery, для
хранения определенной части вашей инфраструктуры.

00:40:28.160 --> 00:40:33.803
Если вы работаете с большими данными,
то соответственно Amazon S3 тоже может

00:40:33.827 --> 00:40:39.848
быть тем местом, домом ваших данных,
где в связке с другими сервисами вы будете

00:40:39.872 --> 00:40:46.008
не только хранить эти данные, но и также
будет возможность работать, обрабатывать,

00:40:46.032 --> 00:40:51.560
изменять и проводить некоторый
анализ и аналитику на основе этих данных.

00:40:51.560 --> 00:40:56.688
Когда мы говорим про Pricing
в рамках сервиса Amazon S3,

00:40:56.712 --> 00:41:01.840
то мы платим за количество
гигабайтов, которые мы храним.

00:41:01.840 --> 00:41:08.136
Мы платим за data transfer, т.е.
трансфер данных от одного

00:41:08.160 --> 00:41:14.014
региона до другого региона,
а также мы оплачиваем за

00:41:14.038 --> 00:41:20.270
количество запросов к сервису
Amazon S3 для разного вида

00:41:20.294 --> 00:41:27.320
действий, т.е. это может быть 
PUT, COPY, POST, LIST либо GET.

00:41:27.320 --> 00:41:32.268
Если говорить про то, что мы
не оплачиваем, если данные

00:41:32.292 --> 00:41:37.240
передвигаются в рамках
Amazon S3, за это оплата не идет.

00:41:37.240 --> 00:41:44.893
Также если мы передаем данные из Amazon
S3 в Amazon CloudFront либо наши Amazon

00:41:44.917 --> 00:41:53.160
EC2 инстансы в рамках того же региона, то
также мы не должны ничего оплачивать АWS.

00:41:53.160 --> 00:41:57.668
На этом мы подошли к концу 
второй секции. Посмотрели подробно

00:41:57.692 --> 00:42:02.200
сервис Amazon S3, давайте пройдемся
по самым основным моментам.

00:42:02.200 --> 00:42:10.960
Резюмируя, мы говорим, что Amazon S3 это managed
service для объектного хранения данных внутри AWS.

00:42:10.960 --> 00:42:18.424
Мы можем хранить неограниченное количество объектов,
объекты наши хранятся внутри bucket-ов, мы оплачиваем

00:42:18.448 --> 00:42:25.840
только за то, что мы используем, т.е. за тот объем
данных, которые мы храним внутри сервиса Amazon S3.

00:42:25.840 --> 00:42:33.965
Мы можем обращаться в любое время с
любого места, используя все возможные

00:42:33.989 --> 00:42:42.000
варианты для обращения, для доступа
к нашим объектам внутри bucket-ов.

00:42:42.000 --> 00:42:49.111
Также есть достаточно широкий набор
настроек безопасности для того, чтобы ваши

00:42:49.135 --> 00:42:56.800
данные были зашифрованы не только в
состоянии хранения, но и в состоянии передачи.

00:42:56.800 --> 00:43:02.280
Мы с вами переходим к третьей части нашей
лекции и к третьему сервису хранения.

00:43:02.280 --> 00:43:07.880
Это Amazon Elastic File System, либо чаще
вы будете его встречать как Amazon EFS.

00:43:07.880 --> 00:43:15.062
Это тот сервис, который предоставляет
вам жесткие диски, которые

00:43:15.086 --> 00:43:22.040
вы можете расшарить между
несколькими инстансами Amazon EC2.

00:43:22.040 --> 00:43:29.440
Таким образом будет общий доступ, общее
хранилище для пула ваших инстансов.

00:43:29.440 --> 00:43:36.760
Для некоторых бизнес задач
это очень подходящий сервис.

00:43:36.760 --> 00:43:41.443
Здесь также мы оплачиваем
только за то, что мы используем,

00:43:41.467 --> 00:43:46.068
т.е. в зависимости от объема 
данных, которые находятся,

00:43:46.092 --> 00:43:50.734
при увеличении, соответственно,
мы оплачиваем больше, при

00:43:50.758 --> 00:43:55.400
уменьшении наши расходы на
сервис Amazon EFS уменьшаются.

00:43:55.400 --> 00:44:00.419
Если же мы говорим про основные
фичи сервиса Amazon EFS, то это тот

00:44:00.443 --> 00:44:05.920
сервис, который предоставляет нам
файловое хранилище внутри облака AWS.

00:44:05.920 --> 00:44:13.288
Это файловое хранилище, файловая
система, она может быть масштабирована до

00:44:13.312 --> 00:44:20.680
размера терабайтов, петабайтов, при
этом предоставлять высокую доступность.

00:44:20.680 --> 00:44:28.560
Это тот сервис, который
предоставляет вам общее одно место,

00:44:28.584 --> 00:44:37.280
которое может быть доступно из
нескольких Amazon EC2 инстансов.

00:44:37.280 --> 00:44:42.848
Размер жестких дисков увеличивается
и уменьшается, вы, соответственно,

00:44:42.872 --> 00:44:48.360
оплачиваете за тот объем на текущий
момент, который вы используете.

00:44:48.360 --> 00:44:58.283
Есть поддержка NFC, т.е. Network File System 
версии 4.0 и 4.1. А также следует

00:44:58.307 --> 00:45:09.520
отметить, что Amazon EFS поддерживает все
операционные системы, базирующиеся на Linux.

00:45:09.520 --> 00:45:15.520
Здесь вы можете видеть пример архитектуры
с использованием сервиса Amazon EFS.

00:45:15.520 --> 00:45:23.648
У нас есть VPC, есть ресурсы в трех availability 
zone-ах, есть инстансы Amazon EC2 в наших

00:45:23.672 --> 00:45:31.800
private либо public subnet-ах, и, соответственно,
у наших EC2 инстансов есть Network Interface.

00:45:31.800 --> 00:45:36.863
Мы этот Elastic File System
подключаем, монтируем к Network

00:45:36.887 --> 00:45:42.476
Interface, и, соответственно, у
инстансов Amazon EC2 появляется

00:45:42.500 --> 00:45:47.738
доступ на всех в трех availability
zone-ах к одной файловой

00:45:47.762 --> 00:45:53.000
системе, общей для всех этих
инстансов в рамках всего VPC.

00:45:53.000 --> 00:45:57.240
На этом мы подошли к концу
третьей секции нашей лекции.

00:45:57.240 --> 00:46:03.600
Подробнее рассмотрели сервис Amazon EFS.
Давайте остановимся на самых основных моментах.

00:46:03.600 --> 00:46:07.324
Amazon EFS – это тот сервис,
который предоставляет вам

00:46:07.348 --> 00:46:11.848
файловую систему, которая может
быть расшарена на несколько EC2

00:46:11.872 --> 00:46:15.984
инстансах, т.е. это общее место, 
и в зависимости от вашей

00:46:16.008 --> 00:46:20.120
бизнес-задачи вам могут
потребоваться подобные IT-ресурсы.

00:46:20.120 --> 00:46:30.168
С Amazon EFS вы оплачиваете только
за тот объем информации, который

00:46:30.192 --> 00:46:40.240
вы храните в вашем EFS жестком диске,
т.е. по модели Pay as you go.

00:46:40.240 --> 00:46:47.243
EFS является полностью managed сервисом.
Таким образом вам нет необходимости

00:46:47.267 --> 00:46:53.428
поддерживать все то, что происходит
под капотом, а лишь получаете

00:46:53.452 --> 00:47:00.317
готовый сервис, который можете
использовать и достаточно быстро, буквально

00:47:00.341 --> 00:47:06.640
за пару кликов настраивать и
интегрировать вашу IT-инфраструктуру.

00:47:06.640 --> 00:47:11.028
Мы с вами добрались до самой
последней секции в рамках нашей

00:47:11.052 --> 00:47:15.440
лекции и подробнее поговорим
про сервис Amazon S3 Glacier.

00:47:15.440 --> 00:47:21.080
Про него мы поговорили во второй части,
здесь рассмотрим некоторые нюансы.

00:47:21.080 --> 00:47:31.640
Давайте остановимся с вами на основных
features-ах сервиса Amazon S3 Glacier.

00:47:31.640 --> 00:47:39.800
Это тот сервис, который используется
для архивирования ваших данных.

00:47:39.800 --> 00:47:49.120
Он как и другие классы хранения сервиса Amazon S3,
предоставляет высокую надежность, т.е. 11 девяток.

00:47:49.120 --> 00:48:01.108
Glacier это опция хранения данных с самым дешевым
тарифом. Когда мы говорим Glacier, то мы должны

00:48:01.132 --> 00:48:13.120
быть готовы, что данные извлекаются не сразу, т.е.
есть три опции, это Standard, Bulk и Expedited.

00:48:13.120 --> 00:48:20.440
Когда мы говорим Expedited, это ускоренный вариант,
данные могут быть извлечены в течение 1-5 минуты.

00:48:20.440 --> 00:48:26.808
Это та опция, которая самая дорогая.
Дальше идет стандартная опция, когда

00:48:26.832 --> 00:48:33.200
мы данные извлекаем в течение 3-5
часов и стоит соответственно среднее.

00:48:33.200 --> 00:48:40.960
И самая дешевая опция, это когда мы используем
опцию Bulk, когда данные извлекаются от 5-12 часов.

00:48:40.960 --> 00:48:50.040
Если говорить про безопасность,
то Glacier поддерживает SSL/TLS.

00:48:50.040 --> 00:48:55.800
Также что следует отметить,
это Vault Lock feature.

00:48:55.800 --> 00:49:02.880
Для того, чтобы ее объяснить, давайте введем
некоторые термины. Есть понятие archive, т.е. архив.

00:49:02.880 --> 00:49:09.280
Это любой объект, медиафайл, текстовый файл, 
тот объект, который вы хотите архивировать.

00:49:09.280 --> 00:49:17.308
Vault – это набор архивов, которые 
вы храните вместе. Представьте,

00:49:17.332 --> 00:49:25.360
что vault это некий аналог zip архива
на локальном нашем компьютере.

00:49:25.360 --> 00:49:31.560
И также есть такое понятие, как Vault Access policy.
Это как раз таки Vault Lock feature.

00:49:31.560 --> 00:49:40.508
Идея в том, что вы можете привязать к вашему
vault некий access policy, который определяет, кто по

00:49:40.532 --> 00:49:49.480
каким условиям может или не может обратиться к
объектам, которые хранятся внутри вашего vault-a.

00:49:49.480 --> 00:49:57.008
Vault дословно переводится как погреб 
либо подвал. Давайте подробнее

00:49:57.032 --> 00:50:04.560
остановимся на самых основных
use case-ах сервиса Amazon S3 Glacier.

00:50:04.560 --> 00:50:12.088
Первый – это Media asset archiving.
Это когда мы храним некоторые данные, как видео,

00:50:12.112 --> 00:50:19.640
некоторые текстовые информации, т.е.
какие-то новости, надежно и в большом объеме.

00:50:19.640 --> 00:50:26.593
Далее – это Healthcare information archiving, 
т.е. это хранение больших объемов

00:50:26.617 --> 00:50:34.642
информации, которые из сферы медицины, т.е.
это информация о проведенных исследованиях, о

00:50:34.666 --> 00:50:42.554
медицинской истории пациентов и так далее.
Также здесь сюда могут относиться медицинские

00:50:42.578 --> 00:50:50.920
анализы, различные снимки и так далее, которые
тоже оцифрованные и должны где-то храниться.

00:50:50.920 --> 00:50:56.640
Другой вариант это Regulatory
and compliance archiving.

00:50:56.640 --> 00:51:01.108
Это то, что мы ранее говорили, 
т.е. в зависимости от

00:51:01.132 --> 00:51:06.040
сферы есть определенные
требования по закону, такие как

00:51:06.064 --> 00:51:11.105
финансы, здравоохранение,
государственный сектор, который

00:51:11.129 --> 00:51:16.080
обязан хранить данные в
течение определенного периода.

00:51:16.080 --> 00:51:22.704
Эти данные должны храниться, так как они
могут быть востребованы клиентами, пациентами

00:51:22.728 --> 00:51:29.040
и компания ввиду некоторых законов и
положений, обязана предоставить эти данные.

00:51:29.040 --> 00:51:35.666
Соответственно она их удалить не может,
но  достаточно хранить определенный период,

00:51:35.690 --> 00:51:42.720
обычно несколько лет, от трех лет до десяти
лет, после чего данные могут быть удалены.

00:51:42.720 --> 00:51:50.348
Еще один пример – это хранение научных данных, т.е.
во время проведения некоторых наукоемких расчетов

00:51:50.372 --> 00:51:58.000
генерируется большой объем искусственно либо
собирается большой объем данных для дальнейшего

00:51:58.000 --> 00:52:08.568
анализа. И для того, чтобы выгодно хранить
эти данные, так чтобы они были и доступны,

00:52:08.592 --> 00:52:19.160
и при этом недорого хранились, то можно
воспользоваться сервисом Amazon S3 Glacier.

00:52:19.160 --> 00:52:24.282
Другой момент это то, что
по старинке, данные, архивы,

00:52:24.306 --> 00:52:29.428
они хранятся на магнитных 
носителях, т.е. в HDD дисках,

00:52:29.452 --> 00:52:34.338
и как только вы загружаете
сюда данные, жесткие диски

00:52:34.362 --> 00:52:39.720
отключаются от системы и
хранятся где-то там на полочке.

00:52:39.720 --> 00:52:45.106
Это не очень надежно, потому что
жесткие диски они в виду конструкции

00:52:45.130 --> 00:52:50.120
своей могут размагнитиваться и
соответственно данные теряются.

00:52:50.120 --> 00:52:59.532
Да, можно хранить данные в RAID-массивах, либо как-то
попроще, реплицировать, хранить несколько копий,

00:52:59.556 --> 00:53:08.595
но сам процесс хранения, понимания, где какие
данные лежат, он может быть достаточно трудоемким,

00:53:08.619 --> 00:53:17.657
если это большие объемы данных, и Amazon S3
Glacier выступает как выгодный аналог хранения данных

00:53:17.681 --> 00:53:26.720
в облаке, при этом вот эта опция архивирования
ваших данных предоставляется как готовый сервис.

00:53:26.720 --> 00:53:30.118
Давайте теперь подробнее
поговорим, что же такое Lifecycle

00:53:30.142 --> 00:53:33.540
Policies, на нее мы ранее
ссылались на предыдущих слайдах.

00:53:33.540 --> 00:53:42.720
Это та опция, которая позволяет вам настроить
жизненный цикл ваших данных внутри Amazon S3.

00:53:42.720 --> 00:53:47.506
Также мы используем наш
Lifecycle Policies, если по тем

00:53:47.530 --> 00:53:52.760
или иным причинам Intelligent
Tiering для нас не подходит.

00:53:52.760 --> 00:54:00.998
Итак, представим, что у нас есть некоторый
сайт, на этом сайте мы публикуем видео-контент, и

00:54:01.022 --> 00:54:09.260
мы знаем, что в течение месяца после публикации
видеоматериала,  она активно просматривается.

00:54:09.260 --> 00:54:15.287
Таким образом, наиболее оптимальный
вариант класс хранения файлов

00:54:15.311 --> 00:54:20.960
первые 30 дней жизни это
Amazon S3 Standard класс хранения.

00:54:20.960 --> 00:54:28.586
Далее, мы собираем некоторую статистику,
анализируем, и мы знаем, что через 30 дней наш

00:54:28.610 --> 00:54:37.480
видеоматериал, так как уже был просмотрен большей
частью нашей аудитории, он редко просматривается.

00:54:37.480 --> 00:54:44.176
Таким образом, мы можем сэкономить
расходы на хранение наших видео-файлов и

00:54:44.200 --> 00:54:51.440
перенести через 30 дней на класс хранения
Amazon S3 Standard-Infrequent Access.

00:54:51.440 --> 00:55:01.959
Далее, мы с вами знаем, что через 60 дней мы
не храним наш контент на нашем сайте, а удаляем

00:55:01.983 --> 00:55:13.080
по некоторым причинам, и нам нужно удалить эти 
файлы. Но мы можем эти данные по запросу выдать.

00:55:13.080 --> 00:55:17.962
В этом случае, через 60 дней,
мы можем настроить перенос

00:55:17.986 --> 00:55:22.868
наших mp4-файлов с Amazon
S3 Standard-Infrequent Access

00:55:22.892 --> 00:55:27.465
класса хранения на Amazon
S3 Glacier, когда мы данные

00:55:27.489 --> 00:55:32.680
сразу отдать не можем, но
достаточно дешево можем хранить.

00:55:32.680 --> 00:55:49.280
Этот видео-контент хранится в течение года, и если
кто-то запрашивает, то мы можем этот контент выдать.

00:55:49.280 --> 00:55:55.008
Далее мы говорим, что через
год мы можем смело удалять наш

00:55:55.032 --> 00:56:00.760
видео-контент, ввиду того,
что он становится неактуальным.

00:56:00.760 --> 00:56:05.720
Никто его смотреть не будет, и, соответственно, нет
смысла платить за его хранение и обслуживание.

00:56:05.720 --> 00:56:12.800
Мы можем настроить Lifecycle Policy таким образом,
что через год она автоматически удаляется.

00:56:12.800 --> 00:56:19.522
Таким образом, мы видим, что мы можем
настроить Lifecycle Policy, т.е. некоторый шаблон,

00:56:19.546 --> 00:56:26.036
что происходит с объектом после определенного
количества дней с момента загрузки, и

00:56:26.060 --> 00:56:32.898
она автоматически применяется ко всем
объектам на уровне этого объекта, т.е. объект мы

00:56:32.922 --> 00:56:39.760
загрузили сегодня, и через 30 дней она
переходит в Amazon S3 Standard-Infrequent Access.

00:56:39.760 --> 00:56:43.688
Дальше, если мы говорим, что
мы через 3 дня загружаем новый

00:56:43.712 --> 00:56:47.640
объект, то для него отчет
начинается с момента его загрузки.

00:56:47.640 --> 00:56:53.240
И опять же через 30 дней происходит
переход на другой класс хранения.

00:56:53.240 --> 00:56:57.548
Давайте с вами разберем сравнительную
таблицу между стандартными

00:56:57.572 --> 00:57:01.880
классами Amazon S3, а также
классами хранения Amazon S3 Glacier.

00:57:01.880 --> 00:57:09.240
Чем же они отличаются? Основные отличия это
Average Latency, т.е. как быстро вы получаете файл.

00:57:09.240 --> 00:57:16.640
Если мы говорим про стандартные классы S3, то это
миллисекунды, т.е. мы получаем файл сразу.

00:57:16.640 --> 00:57:21.556
Если мы говорим про классы
хранения Glacier, это Glacier

00:57:21.580 --> 00:57:27.035
Archive, то здесь это минуты и 
часы, т.е. мы файлы не сможем

00:57:27.059 --> 00:57:32.737
получить сразу, это не в онлайне,
поэтому нужно планировать у

00:57:32.761 --> 00:57:38.440
себя дополнительно, что файлы
вы получите через какое-то время.

00:57:38.440 --> 00:57:50.929
Если мы говорим про максимальный размер файла,
который можем хранить, т.е. объекта, для стандартных

00:57:50.953 --> 00:58:04.080
классов хранения S3 это 5 ТБ максимум, а для Amazon
S3 Glacier мы уже можем сохранить объект до 40 ТБ.

00:58:04.080 --> 00:58:11.828
Если мы говорим про оплату на хранение за
каждый гигабайт ежемесячно, то стандартные

00:58:11.852 --> 00:58:19.320
классы хранения относительно дорого
стоят, а Amazon S3 Glacier намного дешевле.

00:58:19.320 --> 00:58:25.428
И обратный случай, когда мы
говорим про Retrieval Pricing, т.е. цена

00:58:25.452 --> 00:58:32.748
извлечения данных, то для стандартных
классов Amazon S3 где-то мы не оплачиваем

00:58:32.772 --> 00:58:39.474
даже за retrieval, где-то мы оплачиваем
небольшие суммы, небольшой тариф,

00:58:39.498 --> 00:58:46.200
в случае когда мы говорим про извлечение
из Glacier, то это стоит дороже. Поэтому

00:58:46.200 --> 00:59:00.760
нужно знать подробную информацию о своих данных,
чтобы расположить в правильном классе хранения.

00:59:00.760 --> 00:59:07.189
На этом мы добрались до самого конца
четвертой секции, и давайте пройдемся

00:59:07.213 --> 00:59:13.200
по самым основным моментам,
связанных с сервисом Amazon S3 Glacier.

00:59:13.200 --> 00:59:19.000
Это тот сервис, который позволяет нам архивировать
и хранить дешево наши данные в облаке.

00:59:19.000 --> 00:59:28.154
Этот сервис, так же как и Amazon S3, предоставляет
достаточно высокую надежность хранения,

00:59:28.178 --> 00:59:36.920
т.е. это 11 девяток , т.е. это 99,9…9% того,
что данные не потеряются. Это гарантия.

00:59:36.920 --> 00:59:44.573
Также важно отметить, что цена за
хранение Amazon S3 Glacier намного

00:59:44.597 --> 00:59:53.280
меньше и выгоднее по сравнению со
стандартными классами хранения Amazon S3.

00:59:53.280 --> 01:00:01.431
Но при этом чем же кардинально отличается,
это то, что при стандартных классах Amazon S3 мы

01:00:01.455 --> 01:00:09.607
извлекаем данные сразу онлайн. Когда мы
говорим про классы хранения Glacier, это Glacier и

01:00:09.631 --> 01:00:18.143
Glacier Archive, то данные извлекаются в
течение минут или нескольких часов, т.е. до 12 часов

01:00:18.167 --> 01:00:26.680
может занимать время извлечения ваших данных
с vault-ов. Поэтому этот момент нужно учитывать.

01:00:26.680 --> 01:00:32.509
На этом мы добрались до самого
конца нашей лекции, рассмотрели все

01:00:32.533 --> 01:00:39.080
четыре сервиса, связанных с хранением.
Буквально пару основных моментов.

01:00:39.080 --> 01:00:42.903
Это то, что Amazon S3 это
объектное хранилище, у нас есть

01:00:42.927 --> 01:00:47.161
Amazon EBS для блочного хранения
данных, обычно мы используем

01:00:47.185 --> 01:00:51.041
в связке с инстансами Amazon EC2.
Далее есть Amazon EFS,

01:00:51.065 --> 01:00:54.922
если нам необходимо для
нескольких инстансов Amazon EC2

01:00:54.946 --> 01:00:58.992
предоставить общую файловую
систему и есть у нас Amazon S3

01:00:59.016 --> 01:01:03.061
Glacier, который мы дополнительно
отдельно рассмотрели, это

01:01:03.085 --> 01:01:06.954
два отдельных класса
хранения Glacier и Glacier Archive,

01:01:06.978 --> 01:01:11.200
которые позволяют нам выгодно
хранить наши архивные данные.

01:01:11.200 --> 01:01:19.020
На этом слайде вы видите возможные полезные
ссылки для дополнительного изучения.

01:01:19.020 --> 01:01:32.844
На этом мы заканчиваем нашу лекцию. Я надеюсь вы
получили полное представление об основных сервисах

01:01:32.868 --> 01:01:36.160
хранения, если есть вопросы обязательно задавайте
и увидимся с вами на следующих наших активностях.
