WEBVTT

00:00:00.000 --> 00:00:09.360
Қайырлы күн, құрметті студенттер! Сізді курстың
соңғы дәріс сессиясында көргеніме қуаныштымын.

00:00:09.360 --> 00:00:13.359
Бүгін біз автоматты масштабтау
және мониторинг туралы

00:00:13.383 --> 00:00:18.308
сөйлесетін боламыз. Жарайды, бастайық.
Бүгінгі дәріс үш бөлімге бөлінген.

00:00:18.332 --> 00:00:27.280
Бірінші бөлімде біз жүктемені теңестіру және сәйкес
AWS Elastic Load Balancing сервисі туралы сөйлесеміз.

00:00:27.280 --> 00:00:36.240
Бұлттағы инфрақұрылымды бақылауға
арналған келесі сервис - Amazon CloudWatch.

00:00:36.240 --> 00:00:45.300
Ең соңғысы - бұл сіздің жүктемеге байланысты
автоматты түрде артатын немесе азаятын

00:00:45.324 --> 00:00:55.600
инфрақұрылымыңызды конфигурациялауға мүмкіндік
беретін сервис, яғни Amazon EC2 Auto Scaling.

00:00:55.600 --> 00:01:05.747
Біз Elastic Load Balancing-тан бастаймыз.
Бұл қосымшаның кіріс немесе желілік трафигін

00:01:05.771 --> 00:01:15.440
таргет бойынша, бір немесе бірнеше
availability аймағы бойынша тарататын сервис.

00:01:15.440 --> 00:01:21.817
Elastic Load Balancing - бұл
сіздің жүктемеңіз артқан сайын

00:01:21.841 --> 00:01:29.760
масштабталатын сервис, сондықтан
біз тек пайдаланғанымыз үшін төлейміз.

00:01:29.760 --> 00:01:35.072
Егер біз оны жергілікті инфрақұрылыммен,
жергілікті деректер орталығымен салыстыратын

00:01:35.096 --> 00:01:40.408
болсақ, онда жүктемені теңестіру туралы
айтатын болсақ, жүктемені теңестіретін бөлек

00:01:40.432 --> 00:01:45.744
аппараттық құралды сатып аламыз немесе
бұл қосымша деңгейінде жасалады. Яғни, біздің

00:01:45.768 --> 00:01:51.080
барлық трафик кіретін, содан кейін бұл
трафикті IT-ресурстарымызға тарататын қосымша.

00:01:51.080 --> 00:02:00.135
Маңыздысы, қосымша немесе аппараттық
құрал жергілікті түрде орындалса, ол өздігінен

00:02:00.159 --> 00:02:08.440
масштабталмайды. Бұл адамдар мен
ресурстарды қажет ететін жеке жұмыс түрі.

00:02:08.440 --> 00:02:15.543
Егер сіздің трафигіңіз жергілікті
теңгерушінің шегінен асып кетсе,

00:02:15.567 --> 00:02:22.560
ол барлық трафикті өңдей алмайды
және істен шығып кетуі мүмкін.

00:02:22.560 --> 00:02:29.845
Elastic Load Balancer туралы айтатын
болсақ, ол масштабтау тұрғысынан шектелмейді.

00:02:29.927 --> 00:02:37.758
Тағы бір маңызды мәселе - лицензияларды
алдын-ала сатып алудың қажеті жоқ, сіз тек

00:02:37.782 --> 00:02:43.680
пайдаланғаныңыз үшін төлейсіз.
Load Balancer-дің үш түрі бар.

00:02:43.680 --> 00:02:48.766
Біріншісі - Application Load Balancer, одан
кейін Network Load Balancer, ал соңғысы -

00:02:48.790 --> 00:02:54.240
алдыңғы буын Classic Load Balancer. Осы түрлердің 
әрқайсысын егжей-тегжейлі қарастырайық.

00:02:54.240 --> 00:03:00.468
Бірінші Application Load Balancer - бұл
HTTP және HTTPS трафик деңгейінде жұмыс

00:03:00.492 --> 00:03:06.720
істейтін ресурс, яғни OSI Application
Layer моделін қолданатын жетінші деңгей.

00:03:06.720 --> 00:03:13.258
Load Balancer айырмашылығы - бұл
жетілдірілген нұсқа, Load Balancer жаңа нұсқасы,

00:03:13.282 --> 00:03:19.410
ол әртүрлі ресурстармен, атап айтқанда
EC2 инстанстарымен, контейнерлермен

00:03:19.434 --> 00:03:25.685
жұмыс істейді, ол трафикті IP-мекенжайларының
белгілі бір тізіміне теңестіре алады,

00:03:25.709 --> 00:03:31.960
сонымен қатар сіз трафикті лямбда
функциялары үшін теңестіре аласыз.

00:03:31.960 --> 00:03:37.427
Егер біз Network Load Balancer екінші түрі
туралы айтатын болсақ, Transport Layer деңгейінде

00:03:37.451 --> 00:03:43.280
жұмыс істейді, яғни TCP және UDP трафигі болып
табылатын OSI моделін қолданатын төртінші деңгей.

00:03:43.280 --> 00:03:49.926
Оның айырмашылығы, ол ауыр жүктемелер үшін
оңтайландырылған және секундына миллиондаған

00:03:49.950 --> 00:03:57.680
сұраныстарды өңдей алады. Сондай-ақ, ол кенеттен
көтерілген трафик түріне қосымша оңтайландырылған.

00:03:57.680 --> 00:04:07.608
Үшіншіден, бұл Classic Load Balancer алдыңғы буын, ол
қазіргі уақытта таңдау үшін қол жетімсіз, бірақ кері

00:04:07.632 --> 00:04:17.560
үйлесімділік үшін ғана бар және Classic Load Balancer
белсенді болатын инфрақұрылымдарда қол жетімді.

00:04:17.560 --> 00:04:23.601
Ол OSI моделін қолдана отырып, төртінші
және жетінші деңгейлерде жұмыс істейді,

00:04:23.625 --> 00:04:29.201
сондықтан HTTP, HTTPS, TCP, UDP 
трафигін қолдайды. Ол жүктемені тек EC2

00:04:29.225 --> 00:04:35.460
инстанстарына теңестіреді, бұл теңгерушінің 
алғашқы нұсқасы, сондықтан ол

00:04:35.484 --> 00:04:41.720
Application және Network Load Balancer-мен
салыстырғанда функционалды емес.

00:04:41.720 --> 00:04:46.038
Тұтастай алғанда, Amazon-ның ұсынысы
сіздің жүктемеңізге байланысты Application

00:04:46.062 --> 00:04:49.880
Load Balancer немесе Network Load
Balancer пайдалану болып табылады.

00:04:49.880 --> 00:04:59.000
Бұл слайдта Load Balancer бапталған
архитектураның мысалы көрсетілген.

00:04:59.000 --> 00:05:03.128
Біздің клиенттеріміз бар екенін
көре аласыз, Load Balancer қол

00:05:03.152 --> 00:05:07.280
жетімділікті қамтамасыз ету
үшін бір емес, бірнеше availability

00:05:07.304 --> 00:05:11.030
аймақтары үшін бапталған,
трафик біздің клиенттерімізден

00:05:11.054 --> 00:05:15.120
келеді, содан кейін Load
Balancer оны Listener-ге жібереді.

00:05:15.120 --> 00:05:20.080
Listener - бұл біздің таргеттерімізге
сәйкес келетіндігін тексеретін ресурс.

00:05:20.080 --> 00:05:25.880
Таргеттер - бұл белгілі бір сұранысты өңдейтін
көптеген жағдайларда біздің EC2 инстанстарымыз.

00:05:25.880 --> 00:05:32.776
Listener, сонымен қатар, Health Check орнатуға
болатын ресурс болып табылады, яғни қол жетімділікті

00:05:32.800 --> 00:05:39.336
тексеру, ол белгілі бір уақыт аралығында
таргеттерге сұранысты жібереді, сұраныстың өзі де

00:05:39.360 --> 00:05:46.365
бапталынуы мүмкін, ал егер ол күтілген жауап
алмаса, ол таргетті unhealthy, яғни қол жетімді емес

00:05:46.389 --> 00:05:53.320
деп белгілейді және трафикті тек healthy
targets үшін теңестіреді, яғни қол жетімді таргеттер.

00:05:53.320 --> 00:06:07.280
Таргет қол жетімді болғаннан кейін ол трафикті
сол таргетке бағыттауды жалғастырады.

00:06:07.280 --> 00:06:14.634
Конфигурация айырмашылықтары туралы айтатын
болсақ, ALB және NLB-мен жұмыс істеу кезінде

00:06:14.658 --> 00:06:22.520
біз таргет топтарымызды құрамыз және барлық
таргеттерімізді таргет топтарға байланыстырамыз.

00:06:22.520 --> 00:06:29.248
Classic Load Balancer туралы
айтқан кезде, біздің барлық

00:06:29.272 --> 00:06:36.000
EC2 инстанстарымыз Load
Balancer-мен тікелей байланысады.

00:06:36.000 --> 00:06:40.320
ELB негізгі пайдалану жағдайларының
кейбірін қарастырайық.

00:06:40.320 --> 00:06:45.480
Ең біріншісі - сіздің қосымшаларыңыздың жоғары
қол жетімді және икемді болуын қамтамасыз ету.

00:06:45.480 --> 00:06:50.622
Сіз бір availability аймағында
екеніңізді елестетіп көрейік

00:06:50.646 --> 00:06:55.788
және сізде 10 таргет бар, егер
жартысы бір себептермен қол

00:06:55.812 --> 00:07:00.646
жетімсіз болса, трафик қалған
5 таргетке қайта бағыттала

00:07:00.670 --> 00:07:06.120
бастайды, ал  алдыңғы қол
жетімсіз 5-не трафик бағытталмайды.

00:07:06.120 --> 00:07:10.860
Егер біз неғұрлым жетілдірілген инфрақұрылым 
туралы айтатын болсақ, ол бірнеше

00:07:10.884 --> 00:07:16.241
availability аймағында орналастырылған
кезде және бүкіл availability аймағында бірдеңе

00:07:16.265 --> 00:07:21.377
болғанын елестетіп көріңіз, сонда ELB
белгілі бір availability аймағының таргеттері

00:07:21.401 --> 00:07:26.200
қол жетімді емес екенін түсінеді және
сол жерге трафикті жіберуді тоқтатады.

00:07:26.200 --> 00:07:37.440
Осылайша, бірінші availability аймағына өткен
трафик қалған барлық аймақтарға бағытталады.

00:07:37.440 --> 00:07:42.000
Келесі жағдай, контейнерлерді пайдалану
қазір өте танымал болып келеді.

00:07:42.000 --> 00:07:47.897
ELB, сонымен қатар, осы үрдістерден
қалмайды және ECS, Elastic

00:07:47.921 --> 00:07:54.520
Container Service сервисімен
жергілікті түрде біріктіруге болады.

00:07:54.520 --> 00:08:02.119
Егер біз келесі слайдтарда өтетін екі
сервис CloudWatch, Amazon EC2 Auto Scaling

00:08:02.143 --> 00:08:09.549
және ELB комбинациясын қолданатын
болсақ, бұл біздің инфрақұрылымымызды тірі

00:08:09.573 --> 00:08:17.752
абстрактілі организмге айналдыруға мүмкіндік
береді, яғни жүктемеге байланысты трафик

00:08:17.776 --> 00:08:25.760
азаятын не артатын болса, EC2 инстанстарының
саны да сәйкесінше азаяды не артады.

00:08:25.760 --> 00:08:35.808
Elastic Load Balancer VPC-мен жұмыс істейді,
егер сіздің инфрақұрылымыңыз Virtual Private

00:08:35.832 --> 00:08:45.308
Cloud көмегімен орналастырылса және
барлық қауіпсіздік ресурстары бапталған болса,

00:08:45.332 --> 00:08:54.694
яғни Security топтары, Network ACL және
т.б., содан кейін Elastic Load Balancer осы

00:08:54.718 --> 00:09:04.880
инфрақұрылымға біріктіріледі және сіздің
VPC ішіндегі барлық ресурстармен жұмыс істейді.

00:09:04.880 --> 00:09:11.232
Тағы бір мәселе - гибридті
архитектуралармен жұмыс істеу, егер

00:09:11.256 --> 00:09:17.608
EC2 инстанстарының тізімі үшін
трафикті ішінара теңестіру қажет

00:09:17.632 --> 00:09:24.189
болса, ал кейбіреулері деректер
орталығында жергілікті орналасқан

00:09:24.213 --> 00:09:30.360
серверлер үшін болса, мұны да
баптауға болады және ELB оны қолдайды.

00:09:30.360 --> 00:09:37.345
Соңғысы да тенденциялардың бірі болып табылады,
бұл серверсіз архитектуралар, осыған байланысты

00:09:37.369 --> 00:09:45.400
ELB де осы үрдістерді сақтайды және лямбда
функцияларын таргет ретінде көрсетуге болады.

00:09:45.400 --> 00:09:53.808
Осылайша, Lambda функциясында ELB-ге
сәйкес сілтеме бар және сіз тікелей

00:09:53.832 --> 00:10:02.240
веб-браузерден, лямбданы өңдейтін
сайттан тиісті сұрау жасай аласыз.

00:10:02.240 --> 00:10:10.388
Application load balancer ішінде күрделі қайта
бағыттау логикасын баптауға болатындығына

00:10:10.412 --> 00:10:18.560
байланысты белгілі бір шақыру сәйкесінше бір лямбда
функциясына жіберіледі және сәйкесінше өңделеді.

00:10:18.560 --> 00:10:23.280
Біздің load balancer-дің мониторингі
туралы айтатын болсақ, үш бағыт бар.

00:10:23.280 --> 00:10:27.896
Біріншісі - Amazon CloudWatch
Metrics, онда біздің load balancer және

00:10:27.920 --> 00:10:32.400
сәйкесінше таргеттер метрикаларды
CloudWatch Metrics-ке жібереді.

00:10:32.400 --> 00:10:37.040
Сол жерден біз статистиканы көре аламыз
және тиісті шешімдер қабылдай аламыз.

00:10:37.040 --> 00:10:41.556
Тағы біреуі - Access Logs, біз
барлық сұрауларымызды тіркей

00:10:41.580 --> 00:10:46.720
аламыз және оларды әрі қарай
талдау үшін S3 ішінде сақтай аламыз.

00:10:46.720 --> 00:10:52.742
Ең соңғы нәрсе - AWS CloudTrail
Logs, бұл Console, CLI Command

00:10:52.766 --> 00:10:59.480
Line Interface немесе SDK арқылы
AWS API-ге қоңырау шалынған кезде.

00:10:59.480 --> 00:11:03.212
Барлық осы сұраулар
сақталады және сіздің load balancer

00:11:03.236 --> 00:11:06.969
деңгейінде инфрақұрылымдық
өзгерістер болған жағдайда,

00:11:06.993 --> 00:11:14.000
сіз қоңырауды кім жасағанын, қандай қоңыраудың
келгенін, қандай IP-мекенжайдан, т.б. көре аласыз.

00:11:14.000 --> 00:11:18.867
Бұл егер сізде инфрақұрылым
деңгейінде қандай да бір өзгерістер

00:11:18.891 --> 00:11:23.680
болып, қате туындаған жағдайда,
аудит мақсаттары үшін қажет.

00:11:23.680 --> 00:11:32.920
Осымен бүгінгі дәрісіміздің бірінші бөлімі аяқталды.
Ең маңызды сәттерге назар аударайық.

00:11:32.920 --> 00:11:43.040
Elastic Load Balancing немесе қысқаша ELB - бұл
кіріс трафикті бірнеше таргеттерге тарататын сервис.

00:11:43.040 --> 00:11:47.952
Бұл таргеттер бірнеше availability
аймақтарында орналасуы мүмкін және

00:11:47.976 --> 00:11:52.888
EC2 инстанстар, контейнерлер, IP
мекенжайлары немесе лямбда функциялары

00:11:52.912 --> 00:11:57.824
таргет ретінде әрекет ете алады.
ELB-нің үш түрі бар: Application Load

00:11:57.848 --> 00:12:02.760
Balancer, Network Load Balancer және
алдыңғы буын Classic Load Balancer.

00:12:02.760 --> 00:12:07.862
Егер біз ELB, CloudWatch және
EC2 Auto Scaling тіркесімі туралы

00:12:07.886 --> 00:12:13.565
айтатын болсақ, осы үш сервистің
тіркесімі сіздің инфрақұрылымыңызды

00:12:13.589 --> 00:12:19.023
абстрактілі тірі ағзаға айналдыруға
мүмкіндік беретін қуатты құрал

00:12:19.047 --> 00:12:24.229
болып табылады және осылайша
ол трафикке байланысты өзгереді,

00:12:24.253 --> 00:12:29.478
егер сізде трафиктің кенеттен
өсуі болса, ол сіздің барлық кіріс

00:12:29.502 --> 00:12:34.643
сұрауларыңызды өңдеу үшін
сәйкесінше артады, ал сұраныстар аз

00:12:34.667 --> 00:12:40.142
болған кезде, барлық кіріс
сұрауларыңызды өңдеу үшін инфрақұрылым

00:12:40.166 --> 00:12:45.640
автоматты түрде азаяды, және нәтижесінде
қосымша шығынға ұшырамайтын боласыз.

00:12:45.640 --> 00:12:55.640
Біз бүгінгі дәрісіміздің екінші бөліміне жеттік және
Amazon CloudWatch сервисі туралы көбірек айтамыз.

00:12:55.640 --> 00:13:05.080
Amazon CloudWatch - бұл AWS инфрақұрылымын
бақылауға қажетті барлық құралдарды ұсынатын сервис.

00:13:05.080 --> 00:13:13.800
CloudWatch көмегімен біз метрикалар жинағын орната
аламыз және сол көрсеткіштерге alarms орната аламыз.

00:13:13.800 --> 00:13:20.294
Яғни, біз метриканы орнатқанымызды
елестетіп көрейік, біз EC2 инстанстарымыздың

00:13:20.318 --> 00:13:26.812
әрқайсысынан CPU жүктемесінің ағымдағы
деңгейі туралы ақпаратты жібереміз.

00:13:26.836 --> 00:13:33.372
Әрі қарай, EC2 инстанстарымызға орташа
жүктеме 60%-дан жоғарылағанда, кейбір әрекет

00:13:33.396 --> 00:13:39.848
орындалатындай alarm іске қосылады
және біз бұл alarm-ды SNS topic-ке жібере

00:13:39.872 --> 00:13:46.199
аламыз, яғни электрондық пошта арқылы
хабарлама аламыз, оны SQS-ке бір-бірлеп

00:13:46.223 --> 00:13:52.967
өңдеуге болатындай етіп жібере аламыз,
және оны Lambda-ға жібере аламыз, осылайша

00:13:52.991 --> 00:13:59.063
Lambda кейбір жеке логиканы енгізе
алады, немесе біз оны тікелей EC2 Auto

00:13:59.087 --> 00:14:05.920
Scaling сервисіне жібере аламыз, осылайша
жаңа инстанс автоматты түрде қосылады.

00:14:05.920 --> 00:14:09.917
Сондай-ақ, біз CloudWatch ішіндегі
логтарды жинай аламыз, мысалы,

00:14:09.941 --> 00:14:14.440
қосымшаларымыздың логтары және
тексеру және талдау үшін жүйелік логтар.

00:14:14.440 --> 00:14:25.742
Amazon CloudWatch ұсынатын тағы бір мүмкіндік
- events орнату, яғни бұл AWS ішіндегі белгілі бір

00:14:25.766 --> 00:14:36.960
оқиғаны сипаттайтын жазбаша құжат, егер бұл оқиға
орын алса, біз кейбір таргетімізді іске қоса аламыз.

00:14:36.960 --> 00:14:47.835
Мысалы, біз 1 availability аймағында EC2
инстансы өшкенде, Lambda-ны іске қосатындай

00:14:47.859 --> 00:14:59.520
етіп event теңшедік. Lambda өзінің логикасына
сәйкес жұмыс істейді және жауап қайтарады.

00:14:59.520 --> 00:15:06.703
Тағы бір таргет ретінде SQS болуы мүмкін,
біз электрондық поштамызға хабарландыру

00:15:06.727 --> 00:15:13.640
аламыз және EC2 инстансы қосылғанын
түсінеміз, бірақ олай болмауы керек еді.

00:15:13.640 --> 00:15:18.596
Біз AWS ішінде орын алатын
кез-келген оқиға үшін event орната

00:15:18.620 --> 00:15:24.072
аламыз және барлық дерлік
сервистер event-тің бапталуын қолдайды.

00:15:24.096 --> 00:15:29.302
AWS құжаттамасынан қол жетімді
операциялар мен сервистер туралы

00:15:29.326 --> 00:15:34.280
көбірек біле аласыз.
CloudWatch Alarm мұқият қарастырайық.

00:15:34.280 --> 00:15:38.882
Үш түрі бар, ең танымалы
Static threshold, біз бір нақты

00:15:38.906 --> 00:15:44.012
метриканы бақылаған кезде,
оның мәні белгілі бір мәннен асып

00:15:44.036 --> 00:15:48.800
кетсе немесе төмен түссе,
alarm іске қосылады және біздің

00:15:48.824 --> 00:15:54.440
таргеттерімізге тиісті ақпарат
жіберіледі және әрекет орындалады.

00:15:54.440 --> 00:16:00.680
Anomaly detection туралы айтқан
кезде, AWS-тен жасанды интеллект іске

00:16:00.704 --> 00:16:07.680
қосылады және біздің көрсеткіштерімізде
күдікті ауытқулар бар-жоғын көреді.

00:16:07.680 --> 00:16:14.091
Үшіншісі - Static threshold жетілдірілген
нұсқасы, бір математикалық өрнекте

00:16:14.115 --> 00:16:20.440
бір немесе бірнеше көрсеткіштерді
жинай аламыз, оның нәтижесі бақыланады.

00:16:20.440 --> 00:16:31.221
Static threshold мысалын қарастырайық, alarm орнату
үшін қандай ақпаратты енгізу керек. Ең бірінші біз

00:16:31.245 --> 00:16:42.880
Namespace көрсетеміз. Namespace - сервис. Егер біз
EC2 десек, AWS/EC2 ашылмалы тізімінен көрсетеміз.

00:16:42.880 --> 00:16:54.760
Келесі - Metric. Мысал ретінде EC2-ді алайық, оның
CPU utilization метрикасы, яғни CPU жүктемесі бар.

00:16:54.760 --> 00:17:00.800
Келесі - Statistic, яғни біздің метрикамызда
қандай операция жұмыс істейді.

00:17:00.800 --> 00:17:08.320
Біз орташа мәндерді, соманы, минимум,
максималды мәнді және т.б. ала аламыз.

00:17:08.320 --> 00:17:13.120
Тағы біреуі - Period, яғни деректер
нүктелері қандай мерзімге ескеріледі.

00:17:13.120 --> 00:17:22.680
Деректер нүктелері - бұл белгілі бір уақытта
біздің көрсеткіштеріміз туралы ақпарат.

00:17:22.680 --> 00:17:27.320
Әр бес минут сайын CPU-ға көрсеткіштерді
жібереміз деп елестетіп көрейік.

00:17:27.320 --> 00:17:36.360
Енді, әр бес минут сайын, ол CloudWatch-те сәйкес
мәнмен бір деректер нүктесі ретінде пайда болады.

00:17:36.360 --> 00:17:47.160
Сонымен, Period бұл шешім қабылдау үшін қанша
деректер нүктесі ескерілетініне әсер етеді.

00:17:47.160 --> 00:17:55.028
Келесі - Conditions, мұнда өрнектің
үлкен, үлкен немесе тең, кем, кем

00:17:55.052 --> 00:18:02.920
немесе тең және т.б. болуы мүмкін 
белгілі бір шарттарды көрсетеміз.

00:18:02.920 --> 00:18:10.230
Additional configuration information - қосымша
ақпарат, қосымша шарттар Actions түрінде көрсетілуі

00:18:10.254 --> 00:18:16.960
мүмкін және біздің таргеттеріміз де көрсетіледі.
Яғни бұл біздің alarm нені іске қосады.

00:18:16.960 --> 00:18:25.409
Бұл SNS topic болуы мүмкін, Amazon EC2 Autoscaling
әрекеті болуы мүмкін немесе біз EC2 инстансымызды

00:18:25.433 --> 00:18:34.480
іске қоса аламыз. Осымен, біз екінші бөлімнің соңына
жеттік. Біз CloudWatch сервисін толығырақ зерттедік.

00:18:34.480 --> 00:18:40.120
Бұл - біздің инфрақұрылымымызды бақылаудың
барлық құралдарын ұсынатын сервис.

00:18:40.120 --> 00:18:44.713
CloudWatch көмегімен біз
көрсеткіштерді сақтап, олармен

00:18:44.737 --> 00:18:49.928
жұмыс істей аламыз, қосымшаларымыздың
логтарын жинай аламыз,

00:18:49.952 --> 00:18:54.581
көрсеткіштеріміз үшін alarms
реттей аламыз және тиісті

00:18:54.605 --> 00:18:59.760
AWS ресурстарын іске қосатын
қосымша events орната аламыз.

00:18:59.760 --> 00:19:09.520
Біз дәрістің соңғы бөліміне жеттік
және бұл Amazon EC2 Auto Scaling.

00:19:09.520 --> 00:19:17.004
Біз AWS-те жұмыс істеп, онда әртүрлі қосымшаларды
 құрастырған кезде, сұраныс пен трафикке

00:19:17.028 --> 00:19:24.000
байланысты қосымшаның автоматты түрде
жоғары және төмен масштабталуы өте маңызды.

00:19:24.000 --> 00:19:27.160
Неліктен бұл маңызды?
Келесі мысалды қарастырайық.

00:19:27.160 --> 00:19:32.011
Бізде бірнеше қосымшалар
бар деп елестетіп көрейік және сіз

00:19:32.035 --> 00:19:37.640
аптаның күніне байланысты біздің
инфрақұрылымға жүктемені көресіз.

00:19:37.640 --> 00:19:44.520
Сіз негізгі жұмыс жүктемесі сәрсенбіге, ал ең
төменгі жүктеме жексенбіге түсетінін көре аласыз.

00:19:44.520 --> 00:19:54.413
Егер біз сәрсенбідегі барлық трафикті өңдеу
үшін серверді және есептеу қуатын арттыратын

00:19:54.437 --> 00:20:05.240
болсақ, онда сіз қанша қосымша ресурстар
сұрайтынымызды және артық төлейтінімізді көре аласыз.

00:20:05.240 --> 00:20:11.133
Егер біз қандай да бір жолмен
жүктеменің көп бөлігін өңдеп, қалғанын

00:20:11.157 --> 00:20:17.755
қысқарту үшін жеткілікті есептеу
ресурстарын табуға тырыссақ, бұл да жақсы

00:20:17.779 --> 00:20:24.378
стратегия емес, өйткені бұл жағдайда
сіздің клиенттеріңіз сіздің қызметіңіз

00:20:24.402 --> 00:20:31.000
бен сервисіңізге қол жеткізе ала алмайды,
осылайша сіз өз клиенттеріңізді жоғалтасыз.

00:20:31.000 --> 00:20:39.187
Amazon EC2 Auto Scaling бізге не ұсынады?
Бұл EC2 инстанстарының санын

00:20:39.211 --> 00:20:47.280
автоматты түрде жоғары және төмен
масштабтауға көмектесетін сервис.

00:20:47.280 --> 00:20:57.620
Сіз бұл сервистің көмегімен EC2 инстанстары
күн сайын максималды өнімділікте жұмыс

00:20:57.644 --> 00:21:07.600
істеуі үшін бізге қажет инстанстардың
санын басқара алатынымызды көре аласыз.

00:21:07.600 --> 00:21:15.244
Бұл жағдайда біз серверлеріміздің тоқтап
қалуына төлемейміз. Бұл сервис бізге жаңа

00:21:15.268 --> 00:21:22.720
инстанстарды қосу және қажет емес
инстанстарды жою үшін жұмыс істейді.

00:21:22.720 --> 00:21:27.988
Сонымен қатар, ол біздің қосымшаның
немесе EC2 инстансын автоматты түрде

00:21:28.012 --> 00:21:33.280
бақылайды, оны автоматты түрде 
ауыстырады, бұл да өте маңызды.

00:21:33.280 --> 00:21:39.505
Сонымен қатар, бірнеше масштабтау опцияларын
баптауға болады. Бұл өз қолымызбен болуы

00:21:39.529 --> 00:21:45.680
мүмкін, не кесте бойынша масштабтау,
динамикалық, не сұраныс бойынша болуы мүмкін.

00:21:45.680 --> 00:21:54.170
Біз тіпті predective, яғни болжамды масштабтауды
орната аламыз, егер жүктеме белгілі бір

00:21:54.194 --> 00:22:03.760
көрсеткіштерге сәйкес артады деп күтілсе, бұл
сервис біз үшін EC2 инстанстарының санын көбейтеді.

00:22:03.760 --> 00:22:10.760
Автоматтандырылған масштабтау болжамды және
болжанбайтын жұмыс жүктемелеріне жақсы сәйкес келеді.

00:22:10.760 --> 00:22:17.480
Бұл слайдта сіз Amazon.com инфрақұрылымына
бір апталық жүктеме мысалын көре аласыз.

00:22:17.480 --> 00:22:26.800
Біз жоғары жүктемелері аптаның әр күні үшін бірдей
екенін көреміз, және ең төменгі жүктемелер де ұқсас.

00:22:26.800 --> 00:22:36.480
Бұл жағдайда көрсеткіштерді бақылаудан басқа,
жоспарланған масштабтауды да орната аламыз.

00:22:36.480 --> 00:22:42.108
Кешкі 7-де жүктеме екі есе арта
бастайтынын білеміз, содан кейін

00:22:42.132 --> 00:22:47.760
кешкі 9-ға дейін жүктеме түпнұсқамен
салыстырғанда 3 есе артады.

00:22:47.760 --> 00:22:56.880
Тиісінше, біз өз инстанстарымызды күтілетін
жүктемеге алдын ала дайындай аламыз.

00:22:56.880 --> 00:23:01.912
Егер біз күтпеген жүктемелер
туралы айтатын болсақ, қараша

00:23:01.936 --> 00:23:06.880
айында Amazon.com сайтына
жүктеме мысалын қарастырайық.

00:23:06.880 --> 00:23:12.648
Айдың соңында бізде Black Friday
және Cyber Monday болатынын білеміз, ол

00:23:12.672 --> 00:23:18.440
кезде үлкен жеңілдіктер ұсынылады
және сайтқа жүктеме бірнеше есе артады.

00:23:18.440 --> 00:23:23.960
Егер трафик туралы айтсақ, слайдтан
жүктеменің 3-4 есе артатынын көруге болады.

00:23:23.960 --> 00:23:29.848
Көріп отырғаныңыздай, егер біз
есептеу қуатының қажетті мөлшерін

00:23:29.872 --> 00:23:35.199
алдын-ала дайындап, осы
күндерді қараша айы бойы күтсек,

00:23:35.223 --> 00:23:41.439
біріншіден, біз жүктеменің қандай
болатынын білмейміз, тіпті егер

00:23:41.463 --> 00:23:47.680
дәл тапсақ та, бұл графиктегі
жүктеме тек 24% құрайтынын көреміз.

00:23:47.680 --> 00:23:52.840
Қалған уақытта біздің серверлер
уақыттың 70% жұмыс істемей қалады.

00:23:52.840 --> 00:23:59.929
Бұл жағдайда автомасштабтау AWS бұлтындағы
қажетсіз шығындарды жоюдың өте жақсы

00:23:59.953 --> 00:24:07.680
әдісі болып табылады. Және сіздің барлық
серверлеріңіз толық қуатында жұмыс істейді.

00:24:07.680 --> 00:24:17.528
Егер сіздің серверлеріңіздегі жүктеме
азаятын болса, онда бұл серверлер сәйкесінше

00:24:17.552 --> 00:24:27.400
өшіріледі және белгілі бір жүктемеге тек
EC2 инстанстардың қажетті саны бөлінеді.

00:24:27.400 --> 00:24:35.141
Енді техникалық жағдайларды мұқият қарастырайық.
Ол үшін Auto Scaling group тұжырымдамасын енгізейік.

00:24:35.165 --> 00:24:42.440
Бұл масштабтау мақсатында бір логикалық топ
ретінде қарастырылатын EC2 инстанстарының жинағы.

00:24:42.440 --> 00:24:47.419
Auto Scaling group көрсеткенде,
біз EC2 инстанстары туралы

00:24:47.443 --> 00:24:52.160
ақпарат береміз және қосымша
үш параметрді жібереміз.

00:24:52.160 --> 00:24:57.530
Біріншісі - Minimum size, бұл
біздің топтағы инстанстардың

00:24:57.554 --> 00:25:02.640
ең аз саны, одан төмен
болса Auto Scaling азайтпайды.

00:25:02.640 --> 00:25:07.467
Содан кейін Maximum size бар,
бұл трафикке, жүктемеге және т.б.

00:25:07.491 --> 00:25:12.708
қарамастан EC2 инстанстарының 
қосылмайтын саны. Яғни сіз асып кете

00:25:12.732 --> 00:25:17.831
алмайтын белгілі бір бюджет бар
және Minimum size және Maximum size

00:25:17.855 --> 00:25:22.800
көмегімен сіз осы бюджеттен
аспайтыныңызға сенімді бола аласыз.

00:25:22.800 --> 00:25:35.088
Desired Capacity - Auto Scaling group іске қосудың
басында іске қосылатын EC2 инстанстарының саны.

00:25:35.112 --> 00:25:47.400
Бұл слайдта Scale out (масштабтаудың артуы) және
Scale in (масштабтаудың азаюы) мысалдары көрсетілген.

00:25:47.400 --> 00:25:56.047
Бастапқыда бізде 2 EC2 инстансы
болған кездегі күй, содан кейін бізде Scale

00:25:56.071 --> 00:26:04.600
out болады, яғни масштабтау артады
және қосымша үшінші инстанс қосылады.

00:26:04.600 --> 00:26:12.628
Мысалы, біз инстанстарымыздағы жүктеме
өте төмен екенін метрикалардан көреміз

00:26:12.652 --> 00:26:20.468
және бір EC2 инстансын алып тастауға
болады, ал қалған сервер сыйымдылығы

00:26:20.492 --> 00:26:28.414
ағымдағы жүктемені өңдеуге шамасы
жететін болса, Scale in, яғни масштабтау

00:26:28.438 --> 00:26:36.360
азаяды, және сіз үшінші инстанстың
жойылғанын көресіз, тек 2 инстанс қалады.

00:26:36.360 --> 00:26:42.800
Енді, Auto Scaling бағдарламасын толығымен баптау
үшін қандай кірістер қажет екенін қарастырайық.

00:26:42.800 --> 00:26:52.541
Біріншіден, нені масштабтап жатқанымызды
көрсетеміз, Launch config орнатамыз, бұл EC2

00:26:52.565 --> 00:27:02.306
инстанстарымыз, AMI туралы ақпарат және бұл EC2
инстансын іске қосқан кезде енгізетін барлық ақпарат.

00:27:02.330 --> 00:27:08.960
Әрі қарай, екінші баған Where, бұл біздің Auto
Scaling group қайда орналасқанын көрсетеді.

00:27:08.960 --> 00:27:16.760
Егер бұл VPC болса, біз оның қандай VPC екенін және
осы топтың қандай subnet-те екенін көрсетеміз.

00:27:16.760 --> 00:27:24.014
Әрі қарай, егер Auto Scaling group-ке трафикті
топ ішіндегі барлық инстанстарды тарататын

00:27:24.038 --> 00:27:30.880
Load balancer тіркелген болса, біз оның
қандай Load balancer екенін де көрсетеміз.

00:27:30.880 --> 00:27:39.080
Ал оң жақтағы үшіншісі - Auto Scaling group
қатысты масштабтаудың өзі туралы ақпарат.

00:27:39.080 --> 00:27:43.464
Біз, мысалы, Maintain current
number көрсете аламыз, ол

00:27:43.488 --> 00:27:48.360
әрқашан қол жетімді болуы
керек инстанстардың қажетті саны.

00:27:48.360 --> 00:27:55.742
Егер, мысалы, біз 5-ті көрсетсек, егер ағымдағы
инстанстардың кез-келген санымен проблемалар

00:27:55.766 --> 00:28:03.880
туындаса, олар автоматты түрде ауыстырылады және
біз ең басында көрсеткен инстанстар саны жасалады.

00:28:03.880 --> 00:28:09.048
Manual scaling деген бар, және біз топтағы
инстанстардың санын көбейту немесе

00:28:09.072 --> 00:28:14.240
азайту үшін minimum, max және desired
capacity параметрлерін реттей аламыз.

00:28:14.240 --> 00:28:22.000
Сондай-ақ, Scheduled scaling кесте
бойынша масштабтау теңшей аламыз.

00:28:22.000 --> 00:28:31.480
Сіз scaling policies-та жазылған Dynamic scaling
орната аласыз, олар сәйкесінше метрикаларға қарайды.

00:28:31.480 --> 00:28:39.720
Бұл жерде біз CPU жүктемені, жедел жадтағы
жүктемені, желіні және т.б. байланыстыра аламыз.

00:28:39.720 --> 00:28:45.262
Predictive scaling - бұл AWS
Auto Scaling қосымша нұсқасы,

00:28:45.286 --> 00:28:50.828
ол ішкі жүктемені болжай алатын
және оның болжамдары бойынша

00:28:50.852 --> 00:28:56.441
біздің Auto Scaling Group-тағы
инстанстардың санын көбейтетін

00:28:56.465 --> 00:29:01.960
немесе азайтатын кейбір
жасанды интеллектті қамтуы мүмкін.

00:29:01.960 --> 00:29:08.800
Динамикалық масштабтауды орнату кезіндегі
ең танымал мысалды қарастырайық.

00:29:08.800 --> 00:29:17.748
Бұл ELB, CloudWatch және EC2 Auto Scaling тіркесімі.
Мұның бәрі ELB-мен байланысқан Auto Scaling Group-тан

00:29:17.772 --> 00:29:26.720
басталады және сіздің таргеттеріңіз, яғни EC2
инстанстарыңыз Amazon CloudWatch-ке көрсеткіштерді

00:29:26.720 --> 00:29:32.726
жібереді. CloudWatch жағында 
сізде бапталған alarm бар,

00:29:32.750 --> 00:29:38.755
мысалы, CPU жүктемесі 5
минут ішінде 60%-дан асқанда,

00:29:38.779 --> 00:29:50.480
CloudWatch Auto Scaling Group-қа қосымша инстансты
қосатын тиісті EC2 Auto Scaling командасын жібереді.

00:29:50.480 --> 00:29:59.691
Бұл инстансты Auto Scaling Group-қа қосқаннан
кейін, Auto Scaling Group ішіндегі жаңа таргетті

00:29:59.715 --> 00:30:09.720
тіркеу және сол инстансқа трафикті жіберуді бастау
үшін Elastic Load Balancer-ге команда жіберіледі.

00:30:09.720 --> 00:30:17.000
Бұл процесс тұрақты негізде жүреді және бәрі
alarm-нан басталады. Естеріңізге сала кетейін,

00:30:17.000 --> 00:30:26.080
alarm орнату үшін сізге тиісті көрсеткіштерді
орнатып, қажетті ақпаратты жинау керек.

00:30:26.080 --> 00:30:31.569
CPU жүктеме орнына кез келген
басқа көрсеткішті алуға болады. Alarm-ды

00:30:31.593 --> 00:30:37.480
орнату үшін біз бірнеше көрсеткіштерді
қолдана аламыз және бұл да мүмкін.

00:30:37.480 --> 00:30:46.822
Біз осы уақытқа дейін EC2 Auto Scaling сервисі
туралы сөйлесіп келеміз. Сондай-ақ, аты мен мағынасы

00:30:46.846 --> 00:30:56.760
бойынша өте ұқсас AWS Auto Scaling сервисі бар. Бұл
сервис басқа көптеген қосымша сервистерді қолдайды.

00:30:56.760 --> 00:31:01.468
EC2 инстанстарын қолдаудан
басқа, ол Elastic Container Service

00:31:01.492 --> 00:31:06.201
сервисімен, Docker контейнерлерімен
жұмыс істей алады, DynamoDB,

00:31:06.225 --> 00:31:10.897
атап айтқанда кестелер мен
индекстермен жұмыс істей алады және

00:31:10.921 --> 00:31:15.440
Aurora-мен, атап айтқанда
репликалармен жұмыс істей алады.

00:31:15.440 --> 00:31:23.260
Осылайша, осы сервистер мен ресурстардың
барлығын AWS Auto Scaling көмегімен

00:31:23.284 --> 00:31:31.000
масштабтауға болады. Бүгінгі 
дәрісіміздің үшінші бөлімі осымен аяқталады.

00:31:31.000 --> 00:31:36.880
Біз Amazon EC2 Auto Scaling және AWS Auto
Scaling туралы толығырақ сөйлестік.

00:31:36.880 --> 00:31:41.488
Олар екіншісі көбірек сервистерді
қолдайтындығымен ерекшеленеді, ал

00:31:41.512 --> 00:31:46.120
бірінші Amazon EC2 Auto Scaling
EC2 сервисіне көбірек бейімделген.

00:31:46.120 --> 00:31:54.689
EC2 Auto Scaling, CloudWatch және ELB тіркесімі
сіздің инфрақұрылымыңызды қосымшаңыздың

00:31:54.713 --> 00:32:03.780
жүктемесіне байланысты автоматты түрде
таралатын тірі ағзаға айналдыруға мүмкіндік береді.

00:32:03.804 --> 00:32:11.670
Осымен, біз дәрісіміздің барлық бөлімдерінен 
өттік. Ең маңызды сәттерге назар аударайық.

00:32:11.694 --> 00:32:19.560
Ең басында біз Amazon Elastic
Load Balancing сервисімен таныстық.

00:32:19.560 --> 00:32:26.942
Бұл біздің жүктемені есептеу ресурстарына
таратуға мүмкіндік беретін сервис.

00:32:26.966 --> 00:32:33.953
Үш түрі бар. ALB Application Load
Balancing, NLB Network Load Balancer

00:32:33.977 --> 00:32:41.707
және алдыңғы буын Classic Load Balancer,
қазіргі уақытта құру үшін қол жетімді

00:32:41.731 --> 00:32:49.160
емес, бірақ ескі инфрақұрылымдар
үшін кері үйлесімділік үшін қол жетімді.

00:32:49.160 --> 00:32:54.862
Әрі қарай, біз CloudWatch сервисі
туралы әңгімелестік. Бұл біздің

00:32:54.886 --> 00:33:00.320
бүкіл AWS инфрақұрылымын
бақылау құралдарын ұсынатын сервис.

00:33:00.320 --> 00:33:06.680
Осыдан кейін біз бірнеше автомасштабтау
сервистерімен таныстық.

00:33:06.680 --> 00:33:11.441
Бұл Amazon EC2 Auto Scaling, ол EC2
сервисімен жұмыс істейді және көптеген

00:33:11.465 --> 00:33:16.880
сервистермен жұмыс істейтін Amazon Auto
Scaling, бірақ мағынасы өзгеріссіз қалады.

00:33:16.880 --> 00:33:24.268
Үш ELB, CloudWatch және Auto
Scaling сервистерінің үйлесімі бізге

00:33:24.292 --> 00:33:31.680
AWS инфрақұрылымын динамикалық
түрде масштабтауға мүмкіндік береді.

00:33:31.680 --> 00:33:36.808
Осымен біздің бүгінгі дәрісіміз 
аяқталды. Сіз қарасытырылған

00:33:36.832 --> 00:33:41.960
сервистер туралы жақсы түсінікке
ие болдыңыз деп үміттенемін.

00:33:41.960 --> 00:33:46.970
Егер сізде сұрақтар туындаса,
біздің топтық чаттарға хабарласыңыз.

00:33:46.994 --> 00:33:51.231
Ең қызықты сұрақтар біздің сұрақ-жауап
сессияларымызда жарияланады.

00:33:51.255 --> 00:33:59.520
Осымен мен сізбен қоштасамын. Назарларыңызға
көп рахмет. Келесі белсенділіктерде кездескенше!