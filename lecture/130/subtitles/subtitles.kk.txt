Қайырлы күн, құрметті студенттер! Сізді курстың соңғы дәріс сессиясында көргеніме қуаныштымын. Бүгін біз автоматты масштабтау және мониторинг туралы сөйлесетін боламыз. Жарайды, бастайық. Бүгінгі дәріс үш бөлімге бөлінген. Бірінші бөлімде біз жүктемені теңестіру және сәйкес AWS Elastic Load Balancing сервисі туралы сөйлесеміз. Бұлттағы инфрақұрылымды бақылауға арналған келесі сервис - Amazon CloudWatch. Ең соңғысы - бұл сіздің жүктемеге байланысты автоматты түрде артатын немесе азаятын инфрақұрылымыңызды конфигурациялауға мүмкіндік беретін сервис, яғни Amazon EC2 Auto Scaling. Біз Elastic Load Balancing-тан бастаймыз. Бұл қосымшаның кіріс немесе желілік трафигін таргет бойынша, бір немесе бірнеше availability аймағы бойынша тарататын сервис. Elastic Load Balancing - бұл сіздің жүктемеңіз артқан сайын масштабталатын сервис, сондықтан біз тек пайдаланғанымыз үшін төлейміз. Егер біз оны жергілікті инфрақұрылыммен, жергілікті деректер орталығымен салыстыратын болсақ, онда жүктемені теңестіру туралы айтатын болсақ, жүктемені теңестіретін бөлек аппараттық құралды сатып аламыз немесе бұл қосымша деңгейінде жасалады. Яғни, біздің барлық трафик кіретін, содан кейін бұл трафикті IT-ресурстарымызға тарататын қосымша. Маңыздысы, қосымша немесе аппараттық құрал жергілікті түрде орындалса, ол өздігінен масштабталмайды. Бұл адамдар мен ресурстарды қажет ететін жеке жұмыс түрі. Егер сіздің трафигіңіз жергілікті теңгерушінің шегінен асып кетсе, ол барлық трафикті өңдей алмайды және істен шығып кетуі мүмкін. Elastic Load Balancer туралы айтатын болсақ, ол масштабтау тұрғысынан шектелмейді. Тағы бір маңызды мәселе - лицензияларды алдын-ала сатып алудың қажеті жоқ, сіз тек пайдаланғаныңыз үшін төлейсіз. Load Balancer-дің үш түрі бар. Біріншісі - Application Load Balancer, одан кейін Network Load Balancer, ал соңғысы - алдыңғы буын Classic Load Balancer. Осы түрлердің әрқайсысын егжей-тегжейлі қарастырайық. Бірінші Application Load Balancer - бұл HTTP және HTTPS трафик деңгейінде жұмыс істейтін ресурс, яғни OSI Application Layer моделін қолданатын жетінші деңгей. Load Balancer айырмашылығы - бұл жетілдірілген нұсқа, Load Balancer жаңа нұсқасы, ол әртүрлі ресурстармен, атап айтқанда EC2 инстанстарымен, контейнерлермен жұмыс істейді, ол трафикті IP-мекенжайларының белгілі бір тізіміне теңестіре алады, сонымен қатар сіз трафикті лямбда функциялары үшін теңестіре аласыз. Егер біз Network Load Balancer екінші түрі туралы айтатын болсақ, Transport Layer деңгейінде жұмыс істейді, яғни TCP және UDP трафигі болып табылатын OSI моделін қолданатын төртінші деңгей. Оның айырмашылығы, ол ауыр жүктемелер үшін оңтайландырылған және секундына миллиондаған сұраныстарды өңдей алады. Сондай-ақ, ол кенеттен көтерілген трафик түріне қосымша оңтайландырылған. Үшіншіден, бұл Classic Load Balancer алдыңғы буын, ол қазіргі уақытта таңдау үшін қол жетімсіз, бірақ кері үйлесімділік үшін ғана бар және Classic Load Balancer белсенді болатын инфрақұрылымдарда қол жетімді. Ол OSI моделін қолдана отырып, төртінші және жетінші деңгейлерде жұмыс істейді, сондықтан HTTP, HTTPS, TCP, UDP трафигін қолдайды. Ол жүктемені тек EC2 инстанстарына теңестіреді, бұл теңгерушінің алғашқы нұсқасы, сондықтан ол Application және Network Load Balancer-мен салыстырғанда функционалды емес. Тұтастай алғанда, Amazon-ның ұсынысы сіздің жүктемеңізге байланысты Application Load Balancer немесе Network Load Balancer пайдалану болып табылады. Бұл слайдта Load Balancer бапталған архитектураның мысалы көрсетілген. Біздің клиенттеріміз бар екенін көре аласыз, Load Balancer қол жетімділікті қамтамасыз ету үшін бір емес, бірнеше availability аймақтары үшін бапталған, трафик біздің клиенттерімізден келеді, содан кейін Load Balancer оны Listener-ге жібереді. Listener - бұл біздің таргеттерімізге сәйкес келетіндігін тексеретін ресурс. Таргеттер - бұл белгілі бір сұранысты өңдейтін көптеген жағдайларда біздің EC2 инстанстарымыз. Listener, сонымен қатар, Health Check орнатуға болатын ресурс болып табылады, яғни қол жетімділікті тексеру, ол белгілі бір уақыт аралығында таргеттерге сұранысты жібереді, сұраныстың өзі де бапталынуы мүмкін, ал егер ол күтілген жауап алмаса, ол таргетті unhealthy, яғни қол жетімді емес деп белгілейді және трафикті тек healthy targets үшін теңестіреді, яғни қол жетімді таргеттер. Таргет қол жетімді болғаннан кейін ол трафикті сол таргетке бағыттауды жалғастырады. Конфигурация айырмашылықтары туралы айтатын болсақ, ALB және NLB-мен жұмыс істеу кезінде біз таргет топтарымызды құрамыз және барлық таргеттерімізді таргет топтарға байланыстырамыз. Classic Load Balancer туралы айтқан кезде, біздің барлық EC2 инстанстарымыз Load Balancer-мен тікелей байланысады. ELB негізгі пайдалану жағдайларының кейбірін қарастырайық. Ең біріншісі - сіздің қосымшаларыңыздың жоғары қол жетімді және икемді болуын қамтамасыз ету. Сіз бір availability аймағында екеніңізді елестетіп көрейік және сізде 10 таргет бар, егер жартысы бір себептермен қол жетімсіз болса, трафик қалған 5 таргетке қайта бағыттала бастайды, ал алдыңғы қол жетімсіз 5-не трафик бағытталмайды. Егер біз неғұрлым жетілдірілген инфрақұрылым туралы айтатын болсақ, ол бірнеше availability аймағында орналастырылған кезде және бүкіл availability аймағында бірдеңе болғанын елестетіп көріңіз, сонда ELB белгілі бір availability аймағының таргеттері қол жетімді емес екенін түсінеді және сол жерге трафикті жіберуді тоқтатады. Осылайша, бірінші availability аймағына өткен трафик қалған барлық аймақтарға бағытталады. Келесі жағдай, контейнерлерді пайдалану қазір өте танымал болып келеді. ELB, сонымен қатар, осы үрдістерден қалмайды және ECS, Elastic Container Service сервисімен жергілікті түрде біріктіруге болады. Егер біз келесі слайдтарда өтетін екі сервис CloudWatch, Amazon EC2 Auto Scaling және ELB комбинациясын қолданатын болсақ, бұл біздің инфрақұрылымымызды тірі абстрактілі организмге айналдыруға мүмкіндік береді, яғни жүктемеге байланысты трафик азаятын не артатын болса, EC2 инстанстарының саны да сәйкесінше азаяды не артады. Elastic Load Balancer VPC-мен жұмыс істейді, егер сіздің инфрақұрылымыңыз Virtual Private Cloud көмегімен орналастырылса және барлық қауіпсіздік ресурстары бапталған болса, яғни Security топтары, Network ACL және т.б., содан кейін Elastic Load Balancer осы инфрақұрылымға біріктіріледі және сіздің VPC ішіндегі барлық ресурстармен жұмыс істейді. Тағы бір мәселе - гибридті архитектуралармен жұмыс істеу, егер EC2 инстанстарының тізімі үшін трафикті ішінара теңестіру қажет болса, ал кейбіреулері деректер орталығында жергілікті орналасқан серверлер үшін болса, мұны да баптауға болады және ELB оны қолдайды. Соңғысы да тенденциялардың бірі болып табылады, бұл серверсіз архитектуралар, осыған байланысты ELB де осы үрдістерді сақтайды және лямбда функцияларын таргет ретінде көрсетуге болады. Осылайша, Lambda функциясында ELB-ге сәйкес сілтеме бар және сіз тікелей веб-браузерден, лямбданы өңдейтін сайттан тиісті сұрау жасай аласыз. Application load balancer ішінде күрделі қайта бағыттау логикасын баптауға болатындығына байланысты белгілі бір шақыру сәйкесінше бір лямбда функциясына жіберіледі және сәйкесінше өңделеді. Біздің load balancer-дің мониторингі туралы айтатын болсақ, үш бағыт бар. Біріншісі - Amazon CloudWatch Metrics, онда біздің load balancer және сәйкесінше таргеттер метрикаларды CloudWatch Metrics-ке жібереді. Сол жерден біз статистиканы көре аламыз және тиісті шешімдер қабылдай аламыз. Тағы біреуі - Access Logs, біз барлық сұрауларымызды тіркей аламыз және оларды әрі қарай талдау үшін S3 ішінде сақтай аламыз. Ең соңғы нәрсе - AWS CloudTrail Logs, бұл Console, CLI Command Line Interface немесе SDK арқылы AWS API-ге қоңырау шалынған кезде. Барлық осы сұраулар сақталады және сіздің load balancer деңгейінде инфрақұрылымдық өзгерістер болған жағдайда, сіз қоңырауды кім жасағанын, қандай қоңыраудың келгенін, қандай IP-мекенжайдан, т.б. көре аласыз. Бұл егер сізде инфрақұрылым деңгейінде қандай да бір өзгерістер болып, қате туындаған жағдайда, аудит мақсаттары үшін қажет. Осымен бүгінгі дәрісіміздің бірінші бөлімі аяқталды. Ең маңызды сәттерге назар аударайық. Elastic Load Balancing немесе қысқаша ELB - бұл кіріс трафикті бірнеше таргеттерге тарататын сервис. Бұл таргеттер бірнеше availability аймақтарында орналасуы мүмкін және EC2 инстанстар, контейнерлер, IP мекенжайлары немесе лямбда функциялары таргет ретінде әрекет ете алады. ELB-нің үш түрі бар: Application Load Balancer, Network Load Balancer және алдыңғы буын Classic Load Balancer. Егер біз ELB, CloudWatch және EC2 Auto Scaling тіркесімі туралы айтатын болсақ, осы үш сервистің тіркесімі сіздің инфрақұрылымыңызды абстрактілі тірі ағзаға айналдыруға мүмкіндік беретін қуатты құрал болып табылады және осылайша ол трафикке байланысты өзгереді, егер сізде трафиктің кенеттен өсуі болса, ол сіздің барлық кіріс сұрауларыңызды өңдеу үшін сәйкесінше артады, ал сұраныстар аз болған кезде, барлық кіріс сұрауларыңызды өңдеу үшін инфрақұрылым автоматты түрде азаяды, және нәтижесінде қосымша шығынға ұшырамайтын боласыз. Біз бүгінгі дәрісіміздің екінші бөліміне жеттік және Amazon CloudWatch сервисі туралы көбірек айтамыз. Amazon CloudWatch - бұл AWS инфрақұрылымын бақылауға қажетті барлық құралдарды ұсынатын сервис. CloudWatch көмегімен біз метрикалар жинағын орната аламыз және сол көрсеткіштерге alarms орната аламыз. Яғни, біз метриканы орнатқанымызды елестетіп көрейік, біз EC2 инстанстарымыздың әрқайсысынан CPU жүктемесінің ағымдағы деңгейі туралы ақпаратты жібереміз. Әрі қарай, EC2 инстанстарымызға орташа жүктеме 60%-дан жоғарылағанда, кейбір әрекет орындалатындай alarm іске қосылады және біз бұл alarm-ды SNS topic-ке жібере аламыз, яғни электрондық пошта арқылы хабарлама аламыз, оны SQS-ке бір-бірлеп өңдеуге болатындай етіп жібере аламыз, және оны Lambda-ға жібере аламыз, осылайша Lambda кейбір жеке логиканы енгізе алады, немесе біз оны тікелей EC2 Auto Scaling сервисіне жібере аламыз, осылайша жаңа инстанс автоматты түрде қосылады. Сондай-ақ, біз CloudWatch ішіндегі логтарды жинай аламыз, мысалы, қосымшаларымыздың логтары және тексеру және талдау үшін жүйелік логтар. Amazon CloudWatch ұсынатын тағы бір мүмкіндік - events орнату, яғни бұл AWS ішіндегі белгілі бір оқиғаны сипаттайтын жазбаша құжат, егер бұл оқиға орын алса, біз кейбір таргетімізді іске қоса аламыз. Мысалы, біз 1 availability аймағында EC2 инстансы өшкенде, Lambda-ны іске қосатындай етіп event теңшедік. Lambda өзінің логикасына сәйкес жұмыс істейді және жауап қайтарады. Тағы бір таргет ретінде SQS болуы мүмкін, біз электрондық поштамызға хабарландыру аламыз және EC2 инстансы қосылғанын түсінеміз, бірақ олай болмауы керек еді. Біз AWS ішінде орын алатын кез-келген оқиға үшін event орната аламыз және барлық дерлік сервистер event-тің бапталуын қолдайды. AWS құжаттамасынан қол жетімді операциялар мен сервистер туралы көбірек біле аласыз. CloudWatch Alarm мұқият қарастырайық. Үш түрі бар, ең танымалы Static threshold, біз бір нақты метриканы бақылаған кезде, оның мәні белгілі бір мәннен асып кетсе немесе төмен түссе, alarm іске қосылады және біздің таргеттерімізге тиісті ақпарат жіберіледі және әрекет орындалады. Anomaly detection туралы айтқан кезде, AWS-тен жасанды интеллект іске қосылады және біздің көрсеткіштерімізде күдікті ауытқулар бар-жоғын көреді. Үшіншісі - Static threshold жетілдірілген нұсқасы, бір математикалық өрнекте бір немесе бірнеше көрсеткіштерді жинай аламыз, оның нәтижесі бақыланады. Static threshold мысалын қарастырайық, alarm орнату үшін қандай ақпаратты енгізу керек. Ең бірінші біз Namespace көрсетеміз. Namespace - сервис. Егер біз EC2 десек, AWS/EC2 ашылмалы тізімінен көрсетеміз. Келесі - Metric. Мысал ретінде EC2-ді алайық, оның CPU utilization метрикасы, яғни CPU жүктемесі бар. Келесі - Statistic, яғни біздің метрикамызда қандай операция жұмыс істейді. Біз орташа мәндерді, соманы, минимум, максималды мәнді және т.б. ала аламыз. Тағы біреуі - Period, яғни деректер нүктелері қандай мерзімге ескеріледі. Деректер нүктелері - бұл белгілі бір уақытта біздің көрсеткіштеріміз туралы ақпарат. Әр бес минут сайын CPU-ға көрсеткіштерді жібереміз деп елестетіп көрейік. Енді, әр бес минут сайын, ол CloudWatch-те сәйкес мәнмен бір деректер нүктесі ретінде пайда болады. Сонымен, Period бұл шешім қабылдау үшін қанша деректер нүктесі ескерілетініне әсер етеді. Келесі - Conditions, мұнда өрнектің үлкен, үлкен немесе тең, кем, кем немесе тең және т.б. болуы мүмкін белгілі бір шарттарды көрсетеміз. Additional configuration information - қосымша ақпарат, қосымша шарттар Actions түрінде көрсетілуі мүмкін және біздің таргеттеріміз де көрсетіледі. Яғни бұл біздің alarm нені іске қосады. Бұл SNS topic болуы мүмкін, Amazon EC2 Autoscaling әрекеті болуы мүмкін немесе біз EC2 инстансымызды іске қоса аламыз. Осымен, біз екінші бөлімнің соңына жеттік. Біз CloudWatch сервисін толығырақ зерттедік. Бұл - біздің инфрақұрылымымызды бақылаудың барлық құралдарын ұсынатын сервис. CloudWatch көмегімен біз көрсеткіштерді сақтап, олармен жұмыс істей аламыз, қосымшаларымыздың логтарын жинай аламыз, көрсеткіштеріміз үшін alarms реттей аламыз және тиісті AWS ресурстарын іске қосатын қосымша events орната аламыз. Біз дәрістің соңғы бөліміне жеттік және бұл Amazon EC2 Auto Scaling. Біз AWS-те жұмыс істеп, онда әртүрлі қосымшаларды құрастырған кезде, сұраныс пен трафикке байланысты қосымшаның автоматты түрде жоғары және төмен масштабталуы өте маңызды. Неліктен бұл маңызды? Келесі мысалды қарастырайық. Бізде бірнеше қосымшалар бар деп елестетіп көрейік және сіз аптаның күніне байланысты біздің инфрақұрылымға жүктемені көресіз. Сіз негізгі жұмыс жүктемесі сәрсенбіге, ал ең төменгі жүктеме жексенбіге түсетінін көре аласыз. Егер біз сәрсенбідегі барлық трафикті өңдеу үшін серверді және есептеу қуатын арттыратын болсақ, онда сіз қанша қосымша ресурстар сұрайтынымызды және артық төлейтінімізді көре аласыз. Егер біз қандай да бір жолмен жүктеменің көп бөлігін өңдеп, қалғанын қысқарту үшін жеткілікті есептеу ресурстарын табуға тырыссақ, бұл да жақсы стратегия емес, өйткені бұл жағдайда сіздің клиенттеріңіз сіздің қызметіңіз бен сервисіңізге қол жеткізе ала алмайды, осылайша сіз өз клиенттеріңізді жоғалтасыз. Amazon EC2 Auto Scaling бізге не ұсынады? Бұл EC2 инстанстарының санын автоматты түрде жоғары және төмен масштабтауға көмектесетін сервис. Сіз бұл сервистің көмегімен EC2 инстанстары күн сайын максималды өнімділікте жұмыс істеуі үшін бізге қажет инстанстардың санын басқара алатынымызды көре аласыз. Бұл жағдайда біз серверлеріміздің тоқтап қалуына төлемейміз. Бұл сервис бізге жаңа инстанстарды қосу және қажет емес инстанстарды жою үшін жұмыс істейді. Сонымен қатар, ол біздің қосымшаның немесе EC2 инстансын автоматты түрде бақылайды, оны автоматты түрде ауыстырады, бұл да өте маңызды. Сонымен қатар, бірнеше масштабтау опцияларын баптауға болады. Бұл өз қолымызбен болуы мүмкін, не кесте бойынша масштабтау, динамикалық, не сұраныс бойынша болуы мүмкін. Біз тіпті predective, яғни болжамды масштабтауды орната аламыз, егер жүктеме белгілі бір көрсеткіштерге сәйкес артады деп күтілсе, бұл сервис біз үшін EC2 инстанстарының санын көбейтеді. Автоматтандырылған масштабтау болжамды және болжанбайтын жұмыс жүктемелеріне жақсы сәйкес келеді. Бұл слайдта сіз Amazon.com инфрақұрылымына бір апталық жүктеме мысалын көре аласыз. Біз жоғары жүктемелері аптаның әр күні үшін бірдей екенін көреміз, және ең төменгі жүктемелер де ұқсас. Бұл жағдайда көрсеткіштерді бақылаудан басқа, жоспарланған масштабтауды да орната аламыз. Кешкі 7-де жүктеме екі есе арта бастайтынын білеміз, содан кейін кешкі 9-ға дейін жүктеме түпнұсқамен салыстырғанда 3 есе артады. Тиісінше, біз өз инстанстарымызды күтілетін жүктемеге алдын ала дайындай аламыз. Егер біз күтпеген жүктемелер туралы айтатын болсақ, қараша айында Amazon.com сайтына жүктеме мысалын қарастырайық. Айдың соңында бізде Black Friday және Cyber Monday болатынын білеміз, ол кезде үлкен жеңілдіктер ұсынылады және сайтқа жүктеме бірнеше есе артады. Егер трафик туралы айтсақ, слайдтан жүктеменің 3-4 есе артатынын көруге болады. Көріп отырғаныңыздай, егер біз есептеу қуатының қажетті мөлшерін алдын-ала дайындап, осы күндерді қараша айы бойы күтсек, біріншіден, біз жүктеменің қандай болатынын білмейміз, тіпті егер дәл тапсақ та, бұл графиктегі жүктеме тек 24% құрайтынын көреміз. Қалған уақытта біздің серверлер уақыттың 70% жұмыс істемей қалады. Бұл жағдайда автомасштабтау AWS бұлтындағы қажетсіз шығындарды жоюдың өте жақсы әдісі болып табылады. Және сіздің барлық серверлеріңіз толық қуатында жұмыс істейді. Егер сіздің серверлеріңіздегі жүктеме азаятын болса, онда бұл серверлер сәйкесінше өшіріледі және белгілі бір жүктемеге тек EC2 инстанстардың қажетті саны бөлінеді. Енді техникалық жағдайларды мұқият қарастырайық. Ол үшін Auto Scaling group тұжырымдамасын енгізейік. Бұл масштабтау мақсатында бір логикалық топ ретінде қарастырылатын EC2 инстанстарының жинағы. Auto Scaling group көрсеткенде, біз EC2 инстанстары туралы ақпарат береміз және қосымша үш параметрді жібереміз. Біріншісі - Minimum size, бұл біздің топтағы инстанстардың ең аз саны, одан төмен болса Auto Scaling азайтпайды. Содан кейін Maximum size бар, бұл трафикке, жүктемеге және т.б. қарамастан EC2 инстанстарының қосылмайтын саны. Яғни сіз асып кете алмайтын белгілі бір бюджет бар және Minimum size және Maximum size көмегімен сіз осы бюджеттен аспайтыныңызға сенімді бола аласыз. Desired Capacity - Auto Scaling group іске қосудың басында іске қосылатын EC2 инстанстарының саны. Бұл слайдта Scale out (масштабтаудың артуы) және Scale in (масштабтаудың азаюы) мысалдары көрсетілген. Бастапқыда бізде 2 EC2 инстансы болған кездегі күй, содан кейін бізде Scale out болады, яғни масштабтау артады және қосымша үшінші инстанс қосылады. Мысалы, біз инстанстарымыздағы жүктеме өте төмен екенін метрикалардан көреміз және бір EC2 инстансын алып тастауға болады, ал қалған сервер сыйымдылығы ағымдағы жүктемені өңдеуге шамасы жететін болса, Scale in, яғни масштабтау азаяды, және сіз үшінші инстанстың жойылғанын көресіз, тек 2 инстанс қалады. Енді, Auto Scaling бағдарламасын толығымен баптау үшін қандай кірістер қажет екенін қарастырайық. Біріншіден, нені масштабтап жатқанымызды көрсетеміз, Launch config орнатамыз, бұл EC2 инстанстарымыз, AMI туралы ақпарат және бұл EC2 инстансын іске қосқан кезде енгізетін барлық ақпарат. Әрі қарай, екінші баған Where, бұл біздің Auto Scaling group қайда орналасқанын көрсетеді. Егер бұл VPC болса, біз оның қандай VPC екенін және осы топтың қандай subnet-те екенін көрсетеміз. Әрі қарай, егер Auto Scaling group-ке трафикті топ ішіндегі барлық инстанстарды тарататын Load balancer тіркелген болса, біз оның қандай Load balancer екенін де көрсетеміз. Ал оң жақтағы үшіншісі - Auto Scaling group қатысты масштабтаудың өзі туралы ақпарат. Біз, мысалы, Maintain current number көрсете аламыз, ол әрқашан қол жетімді болуы керек инстанстардың қажетті саны. Егер, мысалы, біз 5-ті көрсетсек, егер ағымдағы инстанстардың кез-келген санымен проблемалар туындаса, олар автоматты түрде ауыстырылады және біз ең басында көрсеткен инстанстар саны жасалады. Manual scaling деген бар, және біз топтағы инстанстардың санын көбейту немесе азайту үшін minimum, max және desired capacity параметрлерін реттей аламыз. Сондай-ақ, Scheduled scaling кесте бойынша масштабтау теңшей аламыз. Сіз scaling policies-та жазылған Dynamic scaling орната аласыз, олар сәйкесінше метрикаларға қарайды. Бұл жерде біз CPU жүктемені, жедел жадтағы жүктемені, желіні және т.б. байланыстыра аламыз. Predictive scaling - бұл AWS Auto Scaling қосымша нұсқасы, ол ішкі жүктемені болжай алатын және оның болжамдары бойынша біздің Auto Scaling Group-тағы инстанстардың санын көбейтетін немесе азайтатын кейбір жасанды интеллектті қамтуы мүмкін. Динамикалық масштабтауды орнату кезіндегі ең танымал мысалды қарастырайық. Бұл ELB, CloudWatch және EC2 Auto Scaling тіркесімі. Мұның бәрі ELB-мен байланысқан Auto Scaling Group-тан басталады және сіздің таргеттеріңіз, яғни EC2 инстанстарыңыз Amazon CloudWatch-ке көрсеткіштерді жібереді. CloudWatch жағында сізде бапталған alarm бар, мысалы, CPU жүктемесі 5 минут ішінде 60%-дан асқанда, CloudWatch Auto Scaling Group-қа қосымша инстансты қосатын тиісті EC2 Auto Scaling командасын жібереді. Бұл инстансты Auto Scaling Group-қа қосқаннан кейін, Auto Scaling Group ішіндегі жаңа таргетті тіркеу және сол инстансқа трафикті жіберуді бастау үшін Elastic Load Balancer-ге команда жіберіледі. Бұл процесс тұрақты негізде жүреді және бәрі alarm-нан басталады. Естеріңізге сала кетейін, alarm орнату үшін сізге тиісті көрсеткіштерді орнатып, қажетті ақпаратты жинау керек. CPU жүктеме орнына кез келген басқа көрсеткішті алуға болады. Alarm-ды орнату үшін біз бірнеше көрсеткіштерді қолдана аламыз және бұл да мүмкін. Біз осы уақытқа дейін EC2 Auto Scaling сервисі туралы сөйлесіп келеміз. Сондай-ақ, аты мен мағынасы бойынша өте ұқсас AWS Auto Scaling сервисі бар. Бұл сервис басқа көптеген қосымша сервистерді қолдайды. EC2 инстанстарын қолдаудан басқа, ол Elastic Container Service сервисімен, Docker контейнерлерімен жұмыс істей алады, DynamoDB, атап айтқанда кестелер мен индекстермен жұмыс істей алады және Aurora-мен, атап айтқанда репликалармен жұмыс істей алады. Осылайша, осы сервистер мен ресурстардың барлығын AWS Auto Scaling көмегімен масштабтауға болады. Бүгінгі дәрісіміздің үшінші бөлімі осымен аяқталады. Біз Amazon EC2 Auto Scaling және AWS Auto Scaling туралы толығырақ сөйлестік. Олар екіншісі көбірек сервистерді қолдайтындығымен ерекшеленеді, ал бірінші Amazon EC2 Auto Scaling EC2 сервисіне көбірек бейімделген. EC2 Auto Scaling, CloudWatch және ELB тіркесімі сіздің инфрақұрылымыңызды қосымшаңыздың жүктемесіне байланысты автоматты түрде таралатын тірі ағзаға айналдыруға мүмкіндік береді. Осымен, біз дәрісіміздің барлық бөлімдерінен өттік. Ең маңызды сәттерге назар аударайық. Ең басында біз Amazon Elastic Load Balancing сервисімен таныстық. Бұл біздің жүктемені есептеу ресурстарына таратуға мүмкіндік беретін сервис. Үш түрі бар. ALB Application Load Balancing, NLB Network Load Balancer және алдыңғы буын Classic Load Balancer, қазіргі уақытта құру үшін қол жетімді емес, бірақ ескі инфрақұрылымдар үшін кері үйлесімділік үшін қол жетімді. Әрі қарай, біз CloudWatch сервисі туралы әңгімелестік. Бұл біздің бүкіл AWS инфрақұрылымын бақылау құралдарын ұсынатын сервис. Осыдан кейін біз бірнеше автомасштабтау сервистерімен таныстық. Бұл Amazon EC2 Auto Scaling, ол EC2 сервисімен жұмыс істейді және көптеген сервистермен жұмыс істейтін Amazon Auto Scaling, бірақ мағынасы өзгеріссіз қалады. Үш ELB, CloudWatch және Auto Scaling сервистерінің үйлесімі бізге AWS инфрақұрылымын динамикалық түрде масштабтауға мүмкіндік береді. Осымен біздің бүгінгі дәрісіміз аяқталды. Сіз қарасытырылған сервистер туралы жақсы түсінікке ие болдыңыз деп үміттенемін. Егер сізде сұрақтар туындаса, біздің топтық чаттарға хабарласыңыз. Ең қызықты сұрақтар біздің сұрақ-жауап сессияларымызда жарияланады. Осымен мен сізбен қоштасамын. Назарларыңызға көп рахмет. Келесі белсенділіктерде кездескенше!