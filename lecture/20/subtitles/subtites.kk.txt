Қайырлы күн, құрметті студенттер! Барлықтарыңызды көргеніме қуаныштымын және бүгінгі дәрісімізге қош келдіңіздер. Біз бірінші модульге көшеміз және бүгін бұлттағы негізгі ұғымдар туралы айтатын боламыз.
Ендеше, бастайық. Бүгінгі біздің дәрісіміз төрт бөлімнен тұрады, алғашқы екі бөлім AWS бұлтына байланысты емес, кез келген бұлтты провайдерде қолдануға болатын бұлтты есептеулер туралы болмақ. Сонымен, бірінші бөлім – бұлтты есептеулерге кіріспе. Екінші бөлім бұлтты есептеулердің артықшылықтары туралы болады. Әрі қарай, үшінші бөлімде AWS-ке кіріспе, яғни Amazon Web Services және төртінші бөлімде AWS Cloud Adoption Framework (AWS CAF) деп аталатын құжат туралы айтамыз.
Сонымен, бастайық. Бірінші бөлім. Бұлтты есептеулерге кіріспе. Бұлтты есептеулер дегеніміз не? Бұлтты есептеулер – бұл есептеу қуаты, дерекқор, қосымшалар, сақтау және тағы басқа сияқты IT-ресурстарды интернет арқылы pay-as-you-go pricing моделін қолдана отырып, сұраныс бойынша жеткізу. Pay-as-you-go pricing дегеніміз сіз белгілі бір ресурстарды пайдаланған уақыт үшін ғана төлейтініңізді білдіреді. Бұл ресурстар ірі дата-центрлерде орналасқан серверлік қуаттылығы арқылы іске қосылады және бұл дата-центрлер бүкіл әлем бойынша әртүрлі жерде орналасқан. Бұл дата-центрлер бұлтты провайдерге тиесілі, біздің жағдайда AWS-ке. Белгілі бір AWS сервисі туралы айтқан кезде, әр сервис сол немесе өзге түрінде дата-центрлерінің бірінде орналасқан серверлік қуаттылықтарды пайдаланатынын түсінуіміз керек. Сондай-ақ, AWS-те 200-ден астам түрлі сервистер бар екенін ұмытпаңыз және сіз оларды, мысалы, үй қабырғаларын салуға, есікті, терезені орнатуға, диван және басқасын қоюға қолданатын лего элементтері, лего блоктары ретінде қабылдауыңыз керек. Осылайша, әртүрлі сервистерді пайдалану және біріктіру арқылы сіз бүкіл IT-инфрақұрылымды құра аласыз. Бұлтты есептеулер инфрақұрылымды аппараттық құрал ретінде емес, бағдарламалық жасақтама ретінде ойлауға мүмкіндік береді. Бұл нені білдіреді? Мұны түсіну үшін екі түрлі есептеу моделін салыстырайық: біріншісі – дәстүрлі, екіншісі – бұлтты есептеу. Дәстүрлі есептеу моделі туралы айтқан кезде біз жергілікті дата-центрін айтамыз және инфрақұрылым аппараттық құрал ретінде қабылданады. Бұл нені білдіреді? Бұл дегеніміз, сіздер осы жергілікті дата-центріне ие боласыз және сізде нақты ғимарат болуы керек, осы ғимаратты дұрысы күйінде ұстап тұру және ондағы серверлік қуаттылық жабдығына қызмет көрсету үшін қызметкерлер қажет екенін білдіреді. Сіз, сондай-ақ, физикалық қауіпсіздікті қамтамасыз етуіңіз керек, өйткені бұл жабдық өте қымбат. Кем дегенде осы ғимараттың орналасу орнын, оны кеңейтуді немесе керісінше кішірейтуді жоспарлаңыз. Мұның бәрі capital expenditures, яғни күрделі қаржы салымдар – бұл сізге бір істі бастау үшін қажетті инвестициялар. Әрі қарай, бұл аппараттық құралды сатып алудың ұзақ циклі, бұл нені білдіреді? Бұл дегеніміз, егер сізге кез келген бір жабдықты сатып алу қажет болса, оған тапсырыс бересіз, ал оны жеткізушілерден тапсырыс берген кезде, әрі кетсе, ол сізге бірнеше күнде келеді. Ең болмағанда, бұл бір айға созылуы мүмкін. Содан кейін, бұл жабдық сізге келгенде, сіз оны қабылдайсыз, баптайсыз және дата-центрге қосасыз. Мұның бәрі бір сағатта немесе тіпті жарты күнде орындалмайды. Бұл көп уақыт алады, сонымен қатар теориялық максималды жүктемелерді үнемі болжауыңыз керек. Бұл нені білдіреді? Бұл сіздің бизнесіңіз үшін жеткілікті есептеу қуатын есептеу керек дегенді білдіреді. Енді мұнда екі жағдай болуы мүмкін: егер сізде сервер қуаттылығы жеткіліксіз болса, сіздің аппараттық құралыңыздың жүктемелерге шамасы келмей қалады. Көңілге қонымды емес жағдайдың бірі, бұл артығымен келетін барлық жүктемелер өңделмей қалады, әрине бұл жақсы емес. Ең нашар жағдайды алсақ, бүкіл инфрақұрылым құлап, жұмыс істемей қалса, сіз қарбалас уақыт кезіндегі барлық сұраныстарды өңдей алмайсыз. Кері жағдайда, сіз белгілі бір сервер қуаттылығын сатып алған кезде, оның үстіне жүктемелер аз болса, осы уақыт ішінде сіздің жүктемелеріңіз аз болған кезде, сіз артық төлейтін боласыз, өйткені сіз сатып алған сервер қуаттылығы тым күшті. Бұл да проблема және ол үлкен шығындарға әкеледі. Енді жұмыс жүктемесі күні бойы өзгеретін бизнес туралы ойлап көріңіз, олар үшін тіпті жаман жағдай. Мысалы, тұрмыстық техниканы сататын кез келген веб-сайтты, дүкенді елестетіп көрейік, және біз бәріміз білетіндей, түнде ешкім тауар сатып алмайды. Жұмыс күні ішінде де ешкім сатып алмайды, сондықтан сервис қуаттылығына жүктеме аз. Ал енді қарбалас уақыт кезін алатын болсақ, яғни кешкі сағат 18-ден 21-ге дейінгі жергілікті уақыт аралығында жүктемелер максималды түрде болады, сол уақытта адамдар тауар сатып ала бастайды, осыдан біз жүктемелердің тұрақты еместігін көре аламыз. Бұл өте сирек кездеседі және көп жағдайда жүктеме бір күн ішінде немесе тіпті бір сағат ішінде де динамикалық түрде өзгереді. Сондықтан сіз болуы мүмкін теориялық максимумды жеткілікті түрде дәл болжаған жағдайда да, сіздің сервер қуаттылығыңыздың бір бөлігі белгілі бір кезең, тіпті күн бойы бос тұрып, жұмыс істемейтін болады. Бұл дәстүрлі есептеу моделіндегі сіздің өтейтін шығындарыңыз.
Енді, екінші модельді қарастырайық – бұлтты есептеу моделі. Ол алдыңғы модельге қайшы келеді және біз инфрақұрылымды бағдарламалық жасақтама ретінде, сервис ретінде қабылдаймыз. Бұл дегеніміз, барлығын икемді түрде өзгертуге болады және сіз белгілі бір сервисті немесе ресурсты пайдаланғаныңыз үшін, пайдаланған уақыт үшін ғана төлейсіз. Осылайша, сіз өзіңіздің сайтыңыздағы, қосымшаңыздағы және жалпы IT-инфрақұрылымдағы жүктемеге байланысты инфрақұрылымның өлшемін автоматты түрде өзгертуді теңшей аласыз. Тағы бір маңызды мәселе – сіздің бизнесіңізге қажет сыйымдылық пен сервер қуаттылығын болжаудың қажеті жоқ. Бұлтты есептеу моделінде мұнымен ешкім айналыспайды, өйткені серверлерді тек адамдар өз уақытында қолмен ғана емес, сонымен қатар сіздің шешімдеріңіз үшін, сіздің бизнесіңіз үшін, инфрақұрылымыңыз үшін қажет болған кезде бағдарламалық түрде де қосыла алады. Бұл өте маңызды, өйткені оның бірқатар артықшылықтары бар: біріншіден, сізге жергілікті дата-центрін қамтамасыз етудің қажеті жоқ, сіздің негізгі бизнесіңіздің айналысатын ісімен айналыспайтын қызметкерлер штаты қажет емес, ал бұл жанама бағыт, жанама басқару, сіздің бизнесіңіздің жұмысын жүргізетін жанама департаменттер. Бұлтты модель туралы айтатын болсақ, сізге бұл штатты, бұл адамдарды ұстаудың қажеті жоқ, сізге ғимарат іздеудің қажеті жоқ, дата-центрдің қауіпсіздігі үшін де жауап берудің қажеті жоқ, өйткені дата-центр AWS-те бар және біз осы дата-центрінің бір бөлігін қажетті мөлшерде, бізге қажетті уақыт мөлшеріне жалға ала аламыз.
Бұлтты есептеу моделі дами келе, бақылау, икемділік және басқару деңгейлерімен ерекшеленетін сервистерді ұсынудың әртүрлі стратегиялары мен модельдері пайда болады. Бұл туралы толығырақ талқылайық. Қазіргі уақытта бұлтты сервистерді ұсынудың 3 түрлі моделі бар. Олар IT-ресурстарын басқару деңгейімен ерекшеленеді. Біріншісі – IaaS, яғни infrastructure as a service. Екіншісі – PaaS, яғни platform as a service. Ең соңғысы – SaaS, яғни software as a service.
Осы модельдердің әрқайсысына толығырақ тоқталайық. IaaS-тан бастайық, IaaS – бұл infrastructure as a service, ол осы модельде сізге берілген ресурстарға максималды басқару деңгейін білдіреді, атап айтқанда, желілік деңгейдегі ресурстар, яғни сіз желілерді серверлер деңгейінде қалағаныңызша теңшей аласыз, бұл дегеніміз желіні теңшеген кезде, мына серверлер бізде осы желіде, ал мына серверлер осы желіде деп бөліп айта аласыз. Сонда олар өзара және тіпті сіздің деректеріңіз сақталатын қатқыл дискілер деңгейінде байланысты болады. Осылайша, IaaS дәстүрлі есептеу моделіне барынша жақын, онда сіз процессті толығымен басқарасыз: серверлерге операциялық жүйені, қажет болған жағдайда керекті қосымшаларды орнатасыз, жаңа нұсқалар, жаңартулар, мүмкін тіпті маңызды қауіпсіздік жаңартулары пайда болған кезде операциялық жүйені де, қосымшаларды да өзіңіз жүргізесіз, өзіңіз жасайсыз. Бұлттағы дәстүрлі есептеу моделіне мүмкіндігінше жақын нұсқасы, бұл – infrastructure as a service моделі бойынша сервис ұсыну моделі болып табылады. IaaS пен дәстүрлі есептеу моделінің арасындағы жалғыз айырмашылық – бұл сіздің инфрақұрылымыңызды аппараттық құрал hardware ретінде емес, software, яғни бағдарламалық жасақтама ретінде қабылдайтыныңыз. Осымен ол ерекшеленеді.
Келесі модель – PaaS, platform as a service. Мысалы, AWS RDS сервисі, яғни Relational Database Service, дерекқор сізге сервис ретінде ұсынылады. Бұл нені білдіреді? Бұл сізге операциялық жүйені, осы серверде дерекқорлардың қосымшаларын, яғни ДҚБЖ (Дерекқор басқару жүйесін) орнатудың қажеті жоқ, жаңартулармен және тағы басқа істермен шұғылданудың қажеті жоқ дегенді білдіреді, сізге дерекқор сервис ретінде беріледі, қалған операциялық жүйе, қосымша және аппараттық құрал бұлт провайдерінде болады, яғни сізде басқару ролі азаяды және бұлт белгілі бір бөлігін өзіне алады. Егер сізде дерекқор жұмыс істеп тұрса, сол кезде сіздің аппараттық құралыңыз бұзылса, онда бұлтты провайдер оны сізге ашық түрде ауыстырып береді және сіз осы сервиспен жұмысыңызды әрі қарай жалғастырасыз. Егер, мысалы, операциялық жүйе үшін немесе ДҚБЖ үшін маңызды жаңарту шықса, онда бұл да сіз үшін ашық түрде өтеді, бұлтты провайдер оны сіз үшін орындайды, сондықтан сізге дерекқор әкімшісін жұмысқа алудың қажеті жоқ, сізге тек осы дерекқордың ішіндегі деректермен жұмыс істейтін, деректер моделін құратын және басқа да жұмыстарды істейтін әзірлеушілер мен дерекқор әзірлеушілері қажет болады. Сіз бұл жерде басқару жұмысының аз екенін көре аласыз, бірақ platform as a service туралы айтатын болсақ, бұл соңғы өнім болып табылмайтын сервистер, бірақ көп жағдайда біртұтас IT-инфрақұрылымның бөлігі болып табылады.
Бұлтты сервисті ұсынудың соңғы моделі – SaaS, software as a service. Бұл модельдің ерекшелігі – бұл сервис дайын өнім ретінде беріледі, сізде басқару жұмыстары аз болады, оны өзгерте алмайсыз және бұлт провайдері сіз үшін шығарған параметрлерді ғана пайдалана аласыз. Электрондық пошта Software as a service моделінің айқын мысалы болып есептеледі. Мысалы, Gmail немесе WorkMail, Amazon-да осындай электрондық пошта қызметі бар. Шын мәнінде, бұл – түпкілікті тұтынушылар қолдана алатын дайын өнім. Алайда, әрбір сервис сіздің IT-инфрақұрылымыңызда жеке блок ретінде бола алады, тіпті SaaS сервистері де осы инфрақұрылымның бөлігі бола алады және бір бүтін ретінде пайдаланылуы мүмкін деп айтқан болатынбыз. Осы барлық модельдердің арасындағы айырмашылықты түсіндіңіздер деп үміттенемін. Ең бастысы, IaaS-тан PaaS арқылы SaaS-ке дейін, сіз IT-ресурстағы басқару жұмыстары аз екенін көресіз. Басқару жұмыстарының аз болғандығы жаман дегенді білдірмейді. Бұл сізге жұмыстың белгілі бір бөлігін жасаудың қажеті жоқ дегенді білдіреді және сіздің бизнес қажеттіліктеріңізге байланысты сіз сервистің өзіңізге лайықтысын таңдайсыз, мысалы, егер сіз күрделі есептеулермен айналысатын компания болсаңыз, мысалы, ғылыми есептеулер, онда сізге қарапайым дерекқор емес, сіздің деректеріңіздің түріне арнайы оңтайландырылған, белгілі бір баптауларымен жетілдірілгені қажет болады. Бұл жағдайда қалыпты PaaS, яғни AWS RDS сервисі сізге жарамайды, өйткені оның белгілі бір баптаулары бар, сіз белгілі бір әрекетті ғана өзгерте аласыз, бірақ толық басқарушылық болмайды, сондықтан сіздің таңдауыңыз – бұл IaaS. Егер сізге стандартты баптаулар жеткілікті болса немесе сервис пен дерекқорды аз мөлшерде оңтайландыру қажет болса, дайын AWS RDS сервисін мысал ретінде пайдалануға болады және тар бағытталған жұмыс жасайтын және осы дерекқорға қызмет көрсететін жүйе әкімшісін ұстаудың қажеті жоқ, бұлтты провайдер оны сіз үшін автоматты түрде жасайды. Әлемнің түкпір-түкпірінен жиналған мықты мамандар осы баптауды сіз үшін ең жақсы түрде жасаған – бұл бірінші, екіншісі – адами факторы әсер етпейді, яғни дұрыс емес баптау жасалғандықтан процестің бұзылуы екіталай. Ол сіз үшін автоматты түрде орнатылады, яғни ол бапталып, сервис ретінде ұсынылады. Жергілікті, физикалық түрде тірі, жүйе әкімшісі болған кезде, әрдайым адами фактор бар, бір нәрсе бір жерде бұзылып, сіздің бизнесіңізге зияны тиюі мүмкін. Сондықтан дерекқордың басқару жұмыстары аз түрде қажет болған кезде, мысал ретінде PaaS моделін пайдалануға болады. Соңғы жағдай, бұл сізге мүмкіндігінше дайын процес қажет болған кезде, мысалы, сізде белгілі бір бағдарламалық жасақтамаға қызмет көрсететін тиісті мамандар жоқ, бірақ сонымен бірге бұл бағдарламалық жасақтама сіздің инфрақұрылымыңыздың бөлігі болып табылады, сіз дайын өнім ретінде ұсынылған SaaS сервистерін қарастыруыңызға болады. Ең танымал мысал – бұл веб-почта. Бұлтты сервистерді ұсынатын модельдердің әр түріне қатысты басқа мысалдарды келесі сабақтарда қарастырамыз.
Енді бүгінгі күні IT-инфрақұрылымды орнатудың қандай модельдері бар екенін толығырақ қарастырайық. Бұл бұлтты, гибридті және on-premises, яғни жергілікті немесе private cloud деп те аталады. Әрқайсысының қалай ерекшеленетінін көрейік. Бұлтты, cloud deployment model туралы айтатын болсақ, бұл сіздің бүкіл IT-инфрақұрылымыңызды бір немесе бірнеше бұлт провайдерлері орнатады дегенді білдіреді. Әрі қарай, on-premises туралы айтатын болсақ, бұл сіз қолданатын жергілікті дата-центрі немесе дата-центрінің жергілікті провайдері дегенді білдіреді, бірақ бұның мәні мынада, сіздің бүкіл инфрақұрылымыңыз сіздің қалаңыз немесе аймақтарыңыз бойынша орналасқан және хостер емес, бұл жергілікті провайдер болса да, жалпыға ортақ бұлт провайдері болып есептелмейді. Гибридті нұсқасын қарастырсақ, сіз инфрақұрылымның бір бөлігін бұлтта, ал басқа бөлігін жергілікті орнатасыз. Бұл жиі кездеспейтін, бірақ өте сирек құбылыс та емес, өйткені бастапқыда жергілікті орнатылған компаниялар бұлтқа көшуді бастады. Өтпелі кезеңде олар бұлтқа толығымен көшірілгенге дейін гибридті инфрақұрылыммен жұмыс істейді, яғни бұл аралық кезең болуы мүмкін немесе мысалы, сіздің дерекқорларыңыздың сақтық көшірмелері бұлтқа жіберіліп, бүкіл инфрақұрылым белгілі бір себептермен жергілікті дата-центрінде орнатылған кездегі соңғы күйі болуы мүмкін. Сізде бұлтты IT-инфрақұрылым мен жергілікті IT-инфрақұрылым мүлдем басқа нәрселер деген пікір қалыптасуы мүмкін, іс жүзінде олар бірдей, атап айтқанда, серверлер әдетте Linux-пен орнатылады, оның үстіне әртүрлі қосымшалар орнатылады, олар біздің IT-инфрақұрылымымыздың бір бүтін блоктарын, элементтерін құрайды. Жалғыз айырмашылық – бұлтта сіз өзіңіздің IT-ресурстарыңызға жоғары деңгейде қол жеткізе аласыз және олар сізге AWS сервистері түрінде оралып, ұсынылады. Біз жергілікті IT-инфрақұрылым туралы айтқан кезде, сіз осы IT-ресурстармен тікелей қарым-қатынас жасайсыз, яғни аппараттық құралдармен, оны өзіңіз жергілікті желіге қосасыз, содан кейін операциялық жүйені, қосымшаларды орнатасыз. Бұл слайдта мен жергілікті инфрақұрылымда не бар екенін және бұлт жағында не деп аталатынын талқылағым келеді. Біз қауіпсіздік, желілер, есептеу ресурстары және сақтау мен дерекқор сияқты IT-ресурстарының әртүрлі топтарын қарастырамыз. Қауіпсіздік туралы айтқан кезде, біз жергілікті IT-инфрақұрылымындағы Firewalls, ACLs, Administrators туралы айтамыз. Ал бұлттағы қауіпсіздік туралы айтар болсақ, бұлт жағындағы қауіпсіздікке қатысты сервистерге мысал ретінде, Security groups, Network ACLs, IAM сервисі және т.б. жатады. Желілер туралы айтқан кезде, мысалы, жергілікті бізде роутер, Network pipeline, Switch бар, ал бұлтта тура соны жасай алатын аналогтар, сервистер бар, мысалы, Elastic Load Balancing, Amazon VPC. Келесі топ – бұл есептеу қуаты. Жергілікті IT-инфрақұрылымда бұл сіздің аппараттық құралыңыз, оны орнатып, онымен белігі бір әрекет жасай алатын жеке сервер. Әрине, сіз бұл серверге бұлт жағында физикалық түрде жете алмайсыз, бірақ сіз оны теңшей аласыз және онымен жергілікті сервермен жұмыс істегендей жұмыс істей аласыз. Келесі нәрсе – бұл сақтау және деректер базасы, яғни жергілікті IT-инфрақұрылым жағында сіздер DAS, SAN, NAS сияқты деректерді сақтаудың әртүрлі түрлерін теңшейсіздер, сонымен қатар біз дерекқорларды басқару жүйелерімен, яғни RDBMS (relational database management system) тікелей жұмыс істейміз. Бұлт жағында бізде сервистердің толық аналогтары бар, мысалы, Amazon EBS (Amazon Elastic block storage) блокты сақтауға арналған, Amazon EFS (Amazon Elastic File System) бұл да блокты сақтайды, бірақ бірнеше серверлерді бір сақтау блогымен бөлісу мүмкіндігі бар, ол да блокты сақтау болып табылады. Келесі, егер бізге объектілік сақтау қажет болса, біз Amazon S3 туралы айтамыз. Ал енді соңғысы, бұл сіз бұрыннан білетін Amazon RDS, яғни Amazon Relational Database Service, дерекқорлармен жұмыс істеу үшін арналған. Менің айтып отырғаным, дәстүрлі жергілікті IT-инфрақұрылымындағы кез келген IТ-ресурс үшін AWS бұлтында бір немесе бірнеше ұқсас сервистерді таңдауға болады. Біз сессияның бірінші бөлігінің соңғы слайдына келдік, мен сіздерге есте сақтауға қажет және сіздерге көмектесетін негізгі сәттерді айтып өткім келеді, олар нақты емтиханда сұрақ түрінде келуі мүмкін. Сонымен, біріншісі – бұлтты есептеулер дегеніміз не? Бұлтты есептеулер – бұл pay-as-you-go pricing моделін қолдана отырып, интернет арқылы IT-ресурстарды сұраныс бойынша жеткізу, яғни тек пайдаланғаныңыз үшін төлейсіз дегенді білдіреді. Екіншісі – бұлтты есептеулер инфрақұрылымды аппараттық құрал ретінде емес, software ретінде ойлауға мүмкіндік береді, яғни сервис немесе бағдарламалық жасақтама ретінде. Әрі қарай. Бұлтты сервистерді ұсынудың үш моделі бар: біріншісі – IaaS, яғни infrastructure as a service. Екіншісі – PaaS, яғни platform as a service. Үшіншісі – SaaS, яғни software as a service. Әрі қарай, IT-инфрақұрылымды орнатудың үш нұсқасы бар: бұл cloud, инфрақұрылымды толығымен бұлтты провайдер орнатады. Гибридті – бұл сіздің IT-инфрақұрылымыңыздың бір бөлігі бұлтта, ал басқа бөлігі жергілікті болады. Келесі – on-premises, яғни сіздің бүкіл IT-инфрақұрылымыңыз жергілікті дата-центрінде орнатылған. Соңғысы – сіз AWS-тің көптеген сервистерінің бар екенін және жергілікті дата-центріндегі кез келген IT-ресурсқа, бірдей жұмыс атқаратын сервистердің бір немесе бірнеше нұсқасын таба алатыныңызды есте сақтауыңыз қажет.
Біз сессиямыздың екінші бөліміне көшеміз және бұлтты технологиялардың артықшылықтары туралы айтамыз. Сіз бұл видеоны тоқтатып, бүкіл әлемдегі компаниялардың көбі неге бұлтқа ауыса бастағаны туралы ойланып көріңіз. Жауап бере алдыңыз деп ойлаймын, ал келесі слайдтарда бұлтты технологиялардың алты артықшылығын қарастырамыз.
Бұлтты технологиялардың бірінші артықшылығы – сіздер CapEx, яғни Capital Expenses немесе капиталды шығындарды Variable Expenses-ке айырбастайсыз, яғни сіз өзгерте алатын шығындар. Бұл нені білдіреді? Бұл сіздің бизнесіңізді бастау үшін сізге көп қаражат жұмсаудың қажеті жоқ дегенді білдіреді. IT-инфрақұрылымды құру үшін сізге дата-центрді баптаудың қажеті жоқ, сізге бұл ғимаратты, қымбат жабдықты сатып алудың қажеті жоқ. Сіз мұның бәрін айналып өтесіз де, бұлтты технологиялар мен тиісті сервистерді қолдана отырып, өзіңізге қажет нәрсені біраз уақытқа жалға аласыз. Сізге қажет болмаған кезде, сіз оны бұлт провайдеріне қайта жібересіз де, ол үшін енді төлем жасамайсыз. Осылайша, сіз IT-инфрақұрылымды құра бастағанда, сол кезде қолданып отырған үлкен күрделі шығындарды өтемейсіз. Бұл бизнес үшін өте маңызды, өйткені бизнес жаңадан басталған кезде немесе жаңа бір бағыты басталған кезде, күрделі шығындар – бұл қаражатты тоқтататын нәрсе, яғни сіз үлкен ақша сомасын күрделі салымдарға жұмсадыңыз. Сізге көбірек ақша қажет, немесе егер сіздің жобаңыз үшін нақты бюджет бөлінген болса, онда басқа шығындарыңызға жұмсауға аз ақша қалады. Бұл сіз жасайтын өнімнің немесе жобаның жылдамдығы мен сапасына әсер етуі мүмкін. Ал бұлтты технологиялар туралы айтқан кезде, сіз осы күрделі салымдардан босатыласыз, сіздің қаражаттарыңыз тоқтатылмайды және бөлінген бюджетіңізді өзіңіздің басқа шығындарыңызға көбірек жұмсай аласыз немесе аз бюджетпен дәл сол нәрсеге қол жеткізе аласыз, өйткені сіз бұл үлкен шығындарды өтемейсіз.
Бұлтты технологиялардың екінші артықшылығы – бұл дата-центрін орналастырудың массалық ауқымы мен масштабының артықшылықтары, яғни AWS көптеген дата-центрлерін ашқандықтан көп үнемдейді, өте көп аппараттық құралдары қолданыста болады және бұл үлкен көлемде жаппай орын алуына байланысты, бір жерде жеңілдіктер алса, бір жерде AWS-ке бұл тиімдірек, өйткені сізде бір сервер бар деп елестетіп көріңіз және оны басқару үшін бір жүйелік әкімшіні жалдайсыз. Сонда сіздің барлық жалақыңыз сол серверді ұстап тұру үшін бір серверге жұмсалады. Енді жүз серверді ұстайтын жүйелік әкімшіні елестетіңіз, оның жалақысы осы жүз ресурсқа бірдей етіп бөлінеді дегенді білдіреді, осылайша бұл адамның жалақысының үлесі сіздің IT-инфрақұрылымыңызға таратылады. Міне, ұқсас аналогы: олардың кейбір шығындарын жаба алатындығына байланысты, бұлтты провайдер бұл жағдайда үнемдейді және мұның бәрі бізге сервистердің бағасын өзіміз жасағанымыздан әлдеқайда төмен ұсына алатындығына әсер етеді. Осылайша, біз аз төлейміз және одан да аз төлейміз, өйткені біз pay-as-you-go pricing моделін қолданамыз, яғни біз қолданғанымыз үшін ғана төлейміз.
Келесі артықшылығы – бұл туралы біз бұрын айтқан болатынбыз. Бұлтты технологиялармен бизнестің қажеттіліктерін қанағаттандыру үшін бізге қандай capacity, қандай сыйымдылық немесе қандай сервер қуаттылығы қажет екенін болжаудың қажеті жоқ. Шын мәнінде, бұл өте маңызды мәселе, оған ие болу белгілі бір себептермен қиынға соғады. Мен не айтқым келеді? Барлық компаниялардағы IT департаменттер сервер қуаттылығының қазіргі уақытта қанша қажет ететінін есептеп, жабдықты жеткізу біраз уақыт алатынын ескере отырып, болашаққа жоспар құру қажеттілігі сияқты проблемаға тап болады. Жеткізуден басқа, оны әкелу, теңшеу, дайындау және IT-инфрақұрылымына қосу керек, бұның барлығы уақытты, бірнеше күнді, аптаны қажет етеді, сондықтан осыны жоспарлайтын жеке адам немесе штат бар, мысалы олар алты айдан кейін біз осындай қарқынмен өсеміз және мына күнге дейін біз осыншама жабдыққа тапсырыс беруіміз қажет немесе бір жылдан кейін біз ағымдағы көрсеткіштерге сәйкес осындай көлемге өсеміз немесе керісінше, біз азаямыз және осынша аппараттық құралдарды сатып алуымыз керек деп болжам жасайды. Бизнестің өзі болжауға қиын қызметтің түрі, сіз алты айдан кейін үш есе, бес есе немесе жүз есе өсетініңізді білмейсіз, тіпті жабылуыңыз да мүмкін, бір жылдан кейін бұны жоспарлау, алда не болатынын болжау одан да қиынырақ болады. Сондықтан, сізге қанша сервер қуаттылығы қажет екенін нақты анықтау әрқашан қиынға соқпақ. Сонымен қатар, көптеген бизнес үшін олардың IT-инфрақұрылымына жүктеме күн бойы өзгеріп отырады, бұл біз бұрын талқылаған тұрмыстық техникаларының веб-сайтының мысалы. Міне, бұл IT-инфрақұрылымға жүктеме күннің бір бөлігіне байланысты өзгеретін жағдай. Мысалы, түнде, барлығы ұйықтап жатқанда, ешкім тапсырыс бермейді немесе жұмыс уақытында, барлығы жұмыс істеген кезде, сіздің барлық серверлеріңіз жүктелмейді немесе минималды жүктеледі, іс жүзінде кейбір серверлер жұмыс істемейді. Басқа жағдай – сіз есепке алмаған болсаңыз немесе қандай да бір сәтте сізде науқан жүргізіліп жатса немесе бір себептермен көп трафик, көп пайдаланушылар пайда болса және сіздің серверлеріңізге жүктеме мөлшері ұлғайса, біз мұны Underestimated server capacity деп айтамыз, бұл сіздің серверлеріңіздің шамадан тыс жүктелгенін білдіреді. Жергілікті IT-инфрақұрылымда сіз бұған үнемі тап боласыз, және сіздің жүктемелеріңіз күні бойы өзгерген кезде, сіз ықтимал пайдадан айырыласыз, өйткені егер пайдаланушылардың бір бөлігі бір нәрсеге тапсырыс бергісі келсе, олар оған тапсырыс бере алмайды, өйткені инфрақұрылым бұл сұранысты өңдей алмайды, ол шамадан тыс жүктелген. Керісінше, серверлер жұмыс істемей тұрған кезде, сіз дәл осы сағаттар үшін электр қуатына, жалға алғаныңызға іс жүзінде босқа төлейсіз, ал жабдық жұмыс істемей тұрады. Біздің бұлтта осындай жағдай болмайды және сіздің инфрақұрылымыңызға қойылатын жүктеме талаптарына байланысты сіз оны автоматты түрде өзгертетін етіп теңшей аласыз, ол қажет болған кезде жүз есе артады және жүктеме қажет етсе, он есе азаяды. Осылайша, сіз оларды қалай пайдалансаңыз, дәл сондай шығынға тап боласыз. Бұл бұлтты технологиялардың үшінші артықшылығы – сіз болжауды тоқтатасыз.
Бұлтты технологиялардың келесі артықшылығы – жылдамдық пен икемділікті арттыру болып табылады. Бұл нені білдіреді? Біз бұл туралы да айттық. Идея мынада, біз аппараттық құрал сияқты жергілікті IT-инфрақұрылымымен жұмыс істеген кезде, біз бірнеше күн мен аптаға созылатын жабдықты жеткізу жұмыстарын өзіміз істейміз. Ал бұлт жағында, егер сізге белгілі бір сервис немесе сервер қажет болса, онда сізге тышқанның батырмасын бірнеше рет шерту ғана керек, кейін осы серверді бірнеше минут ішінде аласыз. Осылайша, бұлтты технологияларсыз әдетте бірнеше аптаға созылатын барлық нәрселерді қазір сіз бірнеше минут ішінде жасай аласыз. Бұл бұлтты технологиялар ұсынатын жеделдету, осы жеделдету мен бұлтты технологиялардың басқа да артықшылықтарына байланысты сізге, компанияларға, бизнеске шығындарын азайтуға мүмкіндік береді. Тәжірибелердің әртүрлі түрлерін жүргізу арзанырақ, тиімдірек және жылдамырақ болады, мысалы, жаңа өнім іске қосылғанда немесе жалпы алғанда, сіз жаңа әрекет жасаған кезде, бастапқыда сіздің негізгі өніміңіз, осының бәрі сіз үшін әлдеқайда арзан және жылдам болады.
Бесінші артықшылығы – біз аппараттық құрал және дата-центрлермен тікелей өзара әрекеттесуді тоқтатамыз және бұған уақыт пен ақшаны жұмсамаймыз. Сондықтан бизнеске жанама нәрсеге емес, атап айтқанда, негізгі шешімді қолдайтын дата-центрлерін қолдауға назар аудару оңайырақ, шын мәнісінде негізгі шешімге, өз клиенттеріне назар аудару қажет.
Ең соңғы артықшылық – ол біздің бірнеше минут ішінде ғаламдық деңгейге шыға алатындығымыз. Менің айтайын дегенім, бұл біздің AWS ғаламдық инфрақұрылымымыз, ол әлемнің әр түкпірінде, әртүрлі жерлерінде орналасқан және бізге IT-инфрақұрылымды құруға, осы бүкіл әлем бойынша тарату нәтижесінде біздің клиенттерімізге жақындай түсуге және шығындарды аз төлеуге мүмкіндік береді.
Біз сессияның екінші бөлігінің соңғы слайдына жеттік. Ең маңызды пункттерге тоқталайық, бұл біз өткен алты артықшылық. Біріншісі – біз күрделі шығындарды барынша азайтамыз немесе толығымен жойып, айнымалы, variable, шығындарға айналдырамыз, бұл AWS сервистерін қалай пайдаланатынымызға байланысты пропорционалды түрде көбейеді немесе азаяды. Екіншісі – соңғы пайдаланушылар үшін сервистің құнын төмендетуге мүмкіндік беретін осы шешімді жаппай орнату, яғни біз үшін, бизнесті әзірлеушілер, компаниялар және т.б. үшін. Үшіншісі – біз сыйымдылықты болжауды тоқтатамыз, яғни бізге қанша есептеу қуаты қажет екенін болжаудың қажеті жоқ. Мұның бәрі бұлт жағында автоматты түрде жасалады. Төртінші – біз инфрақұрылыммен аппараттық құрал ретінде емес, сервис ретінде жұмыс істейтіндігімізге байланысты үлкен жылдамдық пен икемділікке ие боламыз, сол себепті қалағанымызды бір аптада емес, бірнеше минутта аламыз. Бесінші – біз жанама жұмыстарды, атап айтқанда қызмет көрсетуді және дата-центрлерді қолдаумен байланысты барлық жұмыстарды тоқтатамыз және бұл жұмыстарды бұлтты провайдерге өткіземіз, ал өзіміз бүкіл назарымызды негізгі өнімге және клиенттерімізге аудару мүмкіндігіне ие боламыз. Соңғы, алтыншы, AWS бүкіл әлемде таралған және әртүрлі жерлерде дата-центрлері бар, бұл бізге кез келген жерде инфрақұрылымды баптауға және нәтижесінде біздің клиенттер мен пайдаланушыларға жақын болуға мүмкіндік береді.
Біз сессиямыздың келесі бөліміне көшеміз, ол AWS-ке кіріспе болып табылады және біз оны осы тарауда жан-жақты қарастырамыз. Жалпы, веб-сервис дегеніміз не? Бұл интернетте қол жетімді қызмет және белгілі бір стандартталған байланыс форматы арқылы өзін шақыртып алуға мүмкіндік береді, бұл XML немесе JSON болуы мүмкін. Осылайша, сіз сұрау жасайсыз, жауап аласыз, басқаша айтқанда, веб-сервис – бұл сіз байланыса алатын API (application programming interface), яғни бағдарламалар бір-бірімен API арқылы байланысады. Енді AWS дегеніміз не екенін анықтайық, яғни Amazon Web Services – бұл барлық веб-сервистерді бір жерде біріктіретін және қажет болған кезде IT-ресурстарды талап бойынша сұрауға мүмкіндік беретін қауіпсіз бұлтты платформа. Сіз тек қолданғаныңыз үшін төлейсіз. Осының барлығын қолданған кездегі уақыт үшін ғана, ең бастысы, сіз кез келген ресурсты сұрай аласыз, осылайша бұлтта бұлтты провайдермен осы сервистерді бірге дұрыс құрастыра отырып, кез келген күрделіліктегі IT-инфрақұрылымды құра аласыз. Жоғарыда айтылғандай, AWS 200-ден астам түрлі сервистерге ие. Бұл сервистер әртүрлі санаттарға бөлінген, сіз оларды слайдтан көре аласыз. Әр санатта бірден онға дейін сервис болуы мүмкін. Сіздің бизнес қажеттіліктеріңізге байланысты сіз өзіңізге тиісті сервисті іздейсіз, оны зерттейсіз және оны IT-инфрақұрылымыңызда қолданасыз. Бұл слайдта сіз бұлттағы IT-инфрақұрылымның қарапайым мысалын көре аласыз. Мұнда төрт түрлі сервистер тобының сервистері ұсынылған, олар: AWS VPC, яғни Virtual Private Cloud – бұл сіздің барлық ресурстарыңызды бір жерде қауіпсіз сақтайтын бұлтты желі. Әрі қарай, Amazon EC2 – бұл сіздің бұлттағы серверлеріңіз. Ол Compute сервистер тобына жатады, яғни есептеу. Сізде қосымша бар деп елестетіп көрейік, пайдаланушы бұл қосымшаны шақырады және сіз әр пайдаланушы үшін файл құрасыз. Бұл файлды сіз объектілі түрде сақтауыңыз керек, сондықтан сіз осы файлдарды объектілі түрде белгілі бір жерде сақтау үшін келесі Amazon S3 сақтау сервисін пайдаланасыз. Сондай-ақ, сіз мұнда Дерекқор сервистері тобындағы NoSQL класына жататын дерекқорларды басқару жүйесі Amazon DynamoDB сияқты сервисті қосуыңызға болады. Оның ішіне Amazon S3 сервисінде жүктелген файлдарыңызды қосымша тез таба алатындай етіп индекс жасай аласыз. Бұл слайд сізге осы сервистерді қалай байланыстыра алатыныңызды, олар бірге жұмыс істей алатынын және сіздің құрылымдарыңыз әлдеқайда күрделі болуы мүмкін екендігінің мысалы ретінде арнайы көрсетілді. Жоғарыда айтқанымдай, сіздің бизнес талаптарыңызға немесе қосымшаларға, IT-инфрақұрылымға қойылатын талаптарға байланысты бұлтты сервистерді таңдау әр жағдайда әртүрлі болады, сондықтан сіздің міндетіңіз – бұл сервистің не екенін, не беретінін түсіну, содан кейін ол не үшін қолданылатынын талдау. Мәселені шешу үшін осы сервисті пайдалану қажет болған кезде, сіз оны тереңірек зерттейсіз. Мұнда бар сервистердің мысалын көре аласыз, бірақ бұл толық тізім емес. Бір қызығы, сервистің атауы, көп жағдайда, Amazon немесе AWS-тен басталады, бұл жерде мүлдем логика жоқ, мен оны қандай да бір жолмен анықтауға қызығушылық таныттым, бірақ оған ешқандай түсініктеме жоқ. Мен мұны өзіме AWS-тің өте үлкен командасы бар компания, оның ішінде көптеген командалары бар және іс жүзінде әр сервистің дамытатын, қолдайтын өз командасы бар екендігімен түсіндірдім. Менің түсінуімше, сервистің атауын осы команда анықтайды, әрине, оны біреу мақұлдайды, бірақ бастапқыда команданың өзінен ұсыныс ретінде болады. Сондықтан бұл соншалықты ретсіз құбылыс, мұнда ешқандай логика жоқ және кейбір сервистер дұрыс жазылған, мысалы, Amazon EC2 немесе Amazon Lightsail, ал басқа сервистер AWS Lambda, AWS Fargate және т.б. сияқты AWS-тен басталады. Біз дәл қазір осы сервистердің әрқайсысын егжей-тегжейлі талқыламаймыз, өйткені келесі дәрістерде олар туралы көбірек білуге мүмкіндік болады, сонда сіз оларды жақсылап есте сақтай алатын боласыз. Бұл жердегі негізгі идея, бизнеске деген қажеттіліктеріңізге қарай, өзіңізге қажетті сервисті таңдайсыз. AWS Certified Cloud Practitioner емтиханын сәтті тапсыру үшін, сізге барлық екі жүз AWS сервистерін білудің қажеті жоқ. Емтиханды сәтті тапсыру үшін, сіз слайдта көрсетілген сервистер топтарының белгілі бір бөлігін білуіңіз жеткілікті. Бұл біздің курста қарастырылатын сервистер мен сервистердің топтары. Мен сізге осы видеоны тоқтата тұрып, осы слайдты бір немесе екі рет мұқият оқып шығуды ұсынамын. Иә, сіз көп нәрсені түсінбейсіз, бірақ, ең болмағанда, сіздің көзіңіз сервистердің атауларына үйренеді және жаңа ақпараттың өте көп болуына орай күйзеліс те азаяды және келесі дәрісте, мүмкін, үйрену оңай болады.
Енді бұлтты провайдерде сервистердің осы үлкен санымен қалай өзара әрекеттесу керектігін қарастырайық. Барлығы үш нұсқа бар: біріншісі – AWS Management Console. Екіншісі – AWS Command Line Interface (AWS CLI) немесе командалық жол. Үшіншісі – Software development kits (SDKs), басқаша айтқанда, бұл кітапхана, оны белгілі бір жоғары деңгейлі бағдарламалау тілімен жұмыс істегенде қосып, сол кітапханамен жұмыс істейсіз, ал бұл кітапхана белгілі бір операцияны орындау үшін бұлтқа тиісті шақыртулар жасайды. Мысалы, егер біз бір серверді баптағымыз келсе, оны AWS Management Console-де жасау үшін бөлек тақырып қарастырылады, бірақ айырмашылықтарын түсіну үшін мен сізге қазір қысқаша айтып беремін. Сіз оны ашасыз, веб-сайтқа кіресіз, бұл сіздің консоліңіз болып табылады. Сол жерде тізімнен табасыз немесе іздеу жолағына Amazon EC2 деп жазасыз. Amazon EC2 сервисі ашылады, Create instance батырмасын басасыз, инстансты құру шебері ашылады және оны жасау үшін қажетті параметрлерді енгізесіз. Бір немесе бірнеше қадамдардан өтесіз, яғни парақшалар, параметрлерді толтырасыз, нәтижесінде сізде осы сервис шыға келеді, егер сол Amazon EC2 сервисінде сіз инстанстар, серверлер тізімі бар қойындыны ашсаңыз, сіз оны сол жерде көресіз, яғни ол құрылатын болады, бәрі де сол жерде бар. Мұны AWS Command Line Interface командалық жолы жағында қалай жасауға болады, сізге қандай командалық жол, қандай команда қажет екенін табасыз, біздің жағдайда ол AWS болады, бұл жалпы атау, пробел, EC2, пробел, Create instance және осында JSON немесе сол жолға аргументтер арқылы, инстансты жасау үшін қажетті параметрлерді енгізесіз. Сіз Enter батырмасын басасыз, бұл команда кетеді және команда керекті API шақырады және бұл API сіз үшін инстансты жасайды, яғни сіз консольде жасағаныңыздың бәрі және сіз оны бір команда ретінде жазғаныңыз да, бәрі бір жерге барады, олар белгілі бір сервистің AWS API-ді және серверді құру бойынша белгілі бір операцияны шақырады. Енді Software development kits туралы айтатын болсақ, бұл, мен бұрын айтқанымдай, кітапхана, мысалы, егер сіз Python бағдарламалау тілімен жұмыс істеген болсаңыз, онда кітапханалар бар, сіз кітапханаларды қосасыз, кейбіреулері сырттан қосылатын кітапханалар, кейбіреулері алдын-ала орнатылған, және сіз онымен жұмыс істеу арқылы, мысалы, деректермен, файлдармен, операциялық жүйемен және суреттермен жұмыс істей аласыз. Енді дәл солай, Python тіліне арналған Boto3 арнайы жасалған кітапханасы бар, ол арқылы сіз AWS бұлтты провайдерімен өзара әрекеттесе аласыз. Бұл қалай болады: сіз кітапхананы қосасыз, мысалы, Python-да, бұл Import Boto3, содан кейін сіз сервис атауы boto3.client сессиясын бастайсыз және осы объектті айнымалы мәнде сақтайсыз, бұл объект сіздің клиенттеріңіз, осы клиент арқылы сізге белгілі бір операциялар таңдап алынған сервиске байланысты қол жетімді болады. Шын мәнінде, сіз код, белгілі бір күрделі логиканы жазасыз және осы күрделі логикада сіз шақырту жасай аласыз, мысалы, кейінірек онымен бір әрекет жасау үшін инстансты құруға/баптауға болады және осы кодты іске қосқан кезде, ол сізге осы серверді баптайды. Енді тағы бір маңызды мәселе – кітапханалар, яғни SDK, тек бір бағдарламалау тілі үшін ғана емес, бірнеше, көптеген танымал тілдер үшін қолданылады. Тапсырма ретінде, қазір видеоны тоқтата тұрып, Гуглге немесе кез келген басқа іздеу жүйесіне SDK-де қандай бағдарламалау тілдеріне қолдау көрсетіледі деген сұраққа жауап беретін парақшаны іздеп көріңіз. Жарайды, сұрақтың жауабын таптыңыз деп үміттенемін, тапқандарыңыз жарайсыздар, ал таппаған студенттерге айтарым әлі демо-сессияларымызда осыған ұқсас жұмыстарды жасаймыз. Жақсы, енді консольдің командалық жолдан немен ерекшеленетінін және SDK немен ерекшеленетінін түсіндіңіз деп үміттенемін.
Сіз жаңадан бастаған бұлтты инженер, бұлтты маман ретінде мансап сатысымен көтерілген сайын олардың әрқайсысын белгілі бір пропорцияларда пайдаланасыз. Мысалы, қазір сіз өзіңізді Junior маман немесе тіпті Junior-ға дейінгі тағылымгер деп елестетіп көріңіз. Осы курсты аяқтағаннан кейін сізді Junior маман деп атауға болады, кейінірек көп тәжірибе жинағаннан кейін сіз Middle, Senior және одан да жоғары боласыз. Сіздің қалай өсетініңізге байланысты, AWS-пен өзара әрекеттесу нұсқаларының әрқайсысымен жұмыс істеу уақытыңыз өзгереді, мен бұны түсіндіре кетейін. Сізге, жаңадан бастаған кезде, сервистің қандай екенін, оның қандай мүмкіндіктері бар екенін түсіну және елестету маңызды және оны көзбен көру үшін AWS Management Console қолданғаныңыз дұрыс. Менің болжауымша, бұлтпен жұмыс істеп жатқан уақыттың 90% алдымен консольде жұмыс істейтін боласыз, қалған уақыттың 5% командалық жолға және 5% SDK-ге жұмсалады. Сіз өскен сайын, сәл кейінірек, жұмысыңызды автоматтандыру үшін командалық жолмен немесе SDK көмегімен бұлтпен өзара әрекеттесу кезінде уақыт үлесін біртіндеп арттырасыз. Осылайша, бұлтта ресурстарды енді жеке өзіңіз, бір-бірлеп қолмен құрудың қажеті жоқ, сіз командалық жолдар жиынтығын, командаларды қолданасыз, тавтология үшін кешіріңіз және бірлі-жарым емес, атомарлық та емес, азды-көпті күрделі бір операцияны орындау үшін оларды бір рет іске қосасыз. Неғұрлым жетілдірілген нұсқа, сіз бұлтты қолданатын қандай да бір қосымшаны жазасыз делік. Бұл жағдайда командалық жолдың мүмкіншіліктері жеткіліксіз болуы мүмкін, ал егер сіз жүйелік әкімші болсаңыз, командалық жол жұмысыңызды автоматтандыру үшін өте қолайлы. Егер сіз әзірлеуші болсаңыз, онда сіздің жоғары деңгейлі бағдарламалау тілінде бағдарламалау қабілетіңіздің әлеуетін SDK ашуы әбден мүмкін. Әзірлеуші ретінде сіз көп уақытыңызды сонымен өткізесіз, тым күрделі код жазу арқылы бұлтпен әрекеттесетін боласыз. Қолданыс барысында, сіз консольді пайдаланатын кездегі уақыт мөлшері мүмкіндігінше азаяды. Өзіме қатысты айтсам, мен басында консольді көп қолдандым, ал қазір консольді жаңа сервисті үйренуім керек болған кезде ғана ашамын, оның қандай екенін қараймын, оның не істей алатынын талдаймын, оны өз басымда елестетемін, содан кейін бұл сервисті командалық жолында немесе мен үшін оңай SDK-де қолданамын.
Сонымен, біз бүгінгі сессиямыздың үшінші бөлімінің соңына дейін жеттік. Негізгі сәттерді қарастырайық. Біріншісі – AWS дегеніміз не. AWS – бұл көптеген сервистерді біріктіретін қауіпсіз бұлтты платформа, олар өз кезегінде барлық түрдегі IT-ресурстарын құруға және олармен жұмыс істеуге көмектеседі. Келесісі – бұл біздің сервистеріміз әртүрлі топтарға біріктірілген және сіздің бизнес қажеттіліктеріңізге байланысты дұрыс топты, дұрыс топтағы дұрыс сервисті таңдап, онымен жұмыс жасайсыз. Барлық AWS сервистері кез келген күрделі IT-инфрақұрылымын құруға көмектесу үшін біріктірілген. Соңғысы, бізде бұлтпен өзара әрекеттесудің үш нұсқасы бар: бұл – AWS Management Console. Екіншісі – командалық интерфейс, командалық жол, AWS Command Line Interface (AWS CLI). Үшіншісі – бұл Software development kits (SDKs), яғни сіздің бағдарламалау тіліңізде қосылатын және онымен код ішінде өзара әрекеттесе алатын кітапхана.
Біз бірінші модуль сессиясының соңғы бөліміне жеттік және AWS Cloud Adoption Framework (AWS CAF) туралы айтатын боламыз. Емтиханды тапсыру үшін оның не екенін толық білудің қажеті жоқ. Болашақта жұмыс істей бастағанда сізге қажет болады. Сіз бұлтта IT- инфрақұрылымы бар компанияларда архитектор немесе техникалық директор болған кезде немесе компания қазір жергілікті орнатылған болса және болашақта бұлтқа көшуді қаласа, сізге бұдан да қатты қажет болады. Осылайша, бұл сізге жергілікті IT-инфрақұрылымнан бұлтқа көшу кезінде ескеруге қажет ықтимал мүмкіндіктерді барынша арттыруға көмектесетін құжат. Жергілікті IT- инфрақұрылымнан бұлтқа көшу туралы айтқан кезде, біз бүкіл осы процесті бірнеше жағынан қарастыруымыз керек. Екі көзқарас бар: біріншісі – бизнес жағынан, екіншісі – технология жағынан. Бизнес туралы айтатын болсақ, ол үш бөліктен тұрады, бизнестің өзі, сіздің адамдарыңыз, сіздің компанияларыңызда жұмыс істейтін мамандар және governance, яғни басқару, басшылық. Технология туралы айтқан кезде, біз платформаны, қауіпсіздікті және operations, яғни операциялық іс-әрекетті қарастырамыз. Келесі слайдтарда біз осы мүмкіншіліктердің әрқайсысы туралы толығырақ, яғни белгілі бір тұрғыдан айтатын боламыз және оны кішігірім бөліктерге бөліп талдаймыз, сонда сіз не туралы айтып жатқанымызды түсінесіз. Команда, компания, осы алты мүмкіншіліктен туындауы мүмкін барлық жағдайларды ескерген сәтте, компания бұлтқа сәтті көшуі және бұлт беретін пайданы, артықшылықтарды барынша алу ықтималдығы артады деп айтуға болады.
  Бірінші мүмкіншілік, яғни бизнес жағынан қарағандағы біздің көзқарасымыз. Мұнда төрт бөлік бар: қаржы, IT стратегия, содан кейін біз алатын артықшылықтарды іске асыру және бизнес тап болатын тәуекелдер. Мұнда не маңызды? Процестің өзі, бұлтқа көшудің дәл осы бастамасы жоғары басшылықпен барынша қолдау көрсетілуі және ынталандырылуы маңызды, яғни CEO, коммерциялық директор, техникалық директор, содан кейін бизнес менеджерлері, қаржы менеджерлері, қалай болғанда да бизнеске әсер ететін осы лауазымдардың кез келгені осы бастаманы қолға алып, жоспарларында осы моменттерді тиісінше бірінші орынға қойып, осы өзгерістерді ескеруі керек. Осылайша, бизнестің бағыты IT-мен бір бағытта болуы керек, біздің жағдайда IT бұлтқа ауысады.
Біз, People perspective тұрғысынан, яғни осы компанияда жұмыс істейтін адамдар мен мамандар тарапынан бұлтқа көшу үдерісіне қараған кезде, бес тармақшаны атап көрсетеміз: Resource management, Incentive management – бұл ынталандыру, ынталандыруды басқару, мотивация, Career management, сәйкесінше, мансап құру кезіндегі бүкіл осы процесс, тренингтер және ұйымдастырушылық өзгерістер. Қысқасы, HR-департаменті тарапынан үлкен жұмыс жүргізілетін болады. Ол біздің бұлтқа көшіп жатқанымызды ескеруі және түсінуі керек және өз тарапынан белгілі бір әрекеттерді қабылдауы керек, атап айтқанда, біріншіден, бұлтта сәтті болу үшін біздегі қызметкерлердің жеткілікті дағдылары бар екеніне көз жеткізу керек. Егер жоқ болса, онда бұлтпен жұмыс істеуді білетін мамандарды дайындау, оқыту және үйрету үдерісін ұйымдастыру қажет. Тағы бір мәселе, мамандар әртүрлі болады, мысалы, кей мамандар бір себептермен бұлтқа көшкісі келмейді және жалпы жұмыстан шығып кетуі мүмкін. Бұл HR-департаменті тарапынан кеткен шығындар, сондықтан олар осы моменттерді талқылауы, ескеруі және оларды сәйкесінше өңдеуі керек, бірақ барлық идея мынада, HR-департаментінің жоғарыға басымдық берілген белгілі бір міндеттері болуы керек, олар бұлтқа сәтті көшу үшін өздерін, департаментті, бүкіл штатты және компанияның бүкіл қызметкерлерін барынша дайындайды. Егер адамдар бұлтқа көшуге дайын болмаса, ештеңе болмайды. Сондықтан, адамдардың, мамандардың көзқарасы бойынша бұл көшуді зерттеп, дайындау керек.
Келесісі – бұл басқару және басшылық тарапынан көзқарас болып табылады. Слайдта көрсетілген төрт тармақшаны атап өтейік. Идея мынада, жоғары басшылық бұлтқа көшу үдерісін ескеру керек және компанияның ішіндегі қазіргі кезеңде бар портфолионы басқаруға, бағдарламаларды және жобаларды басқаруға тиісті түзетулер енгізу керек. Бизнес көрсеткіштерін, өнімділік көрсеткіштерін есептеу кезінде көшу үдерісін ескеру керек және сәйкесінше қорытынды жасап, жалпы үдеріске дайындалып, өз жоспарларында алатын пайданы ескеру қажет.
Біз келесі бөлімге көшеміз, бұл – технология тарапынан көшу үдерісіне, техникалық моменттерге шолу болып табылады. Біздің жағдайда бірінші Platform perspective, оның алты тармақшасы бар. Идея мынада, IT департамент көшу үдерісі кезінде жаңа есептеу қуатына сұрау салу қалай жүргізілетінін, желінің қалай ұйымдастырылатынын және дерекқорларды қалай сақтайтынын және жалпы бұлттағы құрылым өзгеретінін түсінуі керек. Сонымен қатар, сіз әзірлеп жатқан қосымшаның ерекшеліктерін ескеруіңіз керек. Бұлтта кейбір нәрселерді әлдеқайда жақсартуға болады, кейбір нәрселерді жай ғана алып тасымалдау мүмкін емес, сондықтан бұл моменттерді ескеру керек. Бұл процесс бір күнде болмайды, сіз келесі күні жұмысқа келе салып, бәріңіз бұлтта жұмыс істемейсіз. Шын мәнінде, бұл процесс жылдарға созылуы мүмкін. Сондықтан, IT департамент болашақ тапсырмаларды немесе орындалып жатқан тапсырмаларды жоспарлағанда, олардың бұлтта жасалатындығын және нәтижесінде ауысатындығын немесе бірден бұлтта әзірленетінін ескеруі керек және осы моменттерді ескеріп, кейін бұлтқа көшу кезінде өзіне мәселе тудыратын функционалды жасамауы керек.
Технология жағындағы келесі тармақ – бұл Security, қауіпсіздік, қауіпсіздік туралы айтатын болсақ, бес тармақша атап көрсетіледі, яғни техникалық қолдау бөлімі. IT- инфрақұрылымды басқару бөлімі қауіпсіздік мәселелерін пысықтауы керек және бұлттағы пайдаланушыларға, топтарға, қосымшаларға қолжетімділік қалай қамтамасыз етілетінін, қандай да бір болуы мүмкін қауіптерді анықтау қалай жүргізілетінін, инфрақұрылымның қауіпсіздігі қалай қамтамасыз етілетінін, деректерді қорғау қалай жүргізілетінін және жалпы инциденттерді өңдеу процесі қалай жүргізілетінін анықтау қажет, яғни инциденттер кез келген IT өнімнің тіршілік кезеңінің ажырамас бөлігі болып табылады, мәселелер әрқашан туындайды және компанияның міндеті – инциденттерге тез арада шешім қабылдауға тиіс мамандарды табу үшін осы үдерісті барынша тиянақты әзірлеу және оларды сәтті орындау мен түзету болып табылады.
Технология тұрғысынан келесі және соңғы тармақ – бұл Operations, яғни бұл әр уақытта, күн сайын болатын операциялық әрекеттер. Бұған жеті түрлі тармақшалар кіреді. Біріншісі – бұлттағы бақылау, кейін – сіздің IT-инфрақұрылымыңызды бақылау, осы инфрақұрылымда бар қосымшаларды бақылау қалай жүргізіледі, сізде бар IT ресурстарды есептеу қалай жүргізіледі, осы IT ресурстардағы өзгерістер қалай ескеріледі, IT-инфрақұрылым тұрғысынан және жалпы алғанда, осы құралдарға қатысты есеп беру және аналитика қалай жүргізіледі, міне осылар. Сондай-ақ, IT сервис каталогын анықтауларыңыз керек, бұл сіздің компанияларыңызда қолдануға болатын бұлттағы сервистер, неліктен, қаншалықты дәрежеде және сол сияқты моменттерді де пысықтау керек.
Біз осымен соңғы бөлімімізді аяқтаймыз. Негізгі сәттерге тоқталайық. AWS Cloud Adoption Framework – AWS-те бұлтта арнайы дайындалған құжат, ол бұлтқа көшу кезінде туындауы мүмкін барлық мәселелерді қарастыруға мүмкіндік береді. Бизнес және технология тұрғысынан екі бағыт атап көрсетіледі, олардың әрқайсысы үш бөліктен тұрады. Нәтижесінде біз көшу үдерісінің алты шолу бұрышын жан-жақты талдадық, оған не кіретінін және бұлтқа сәтті көшу үшін компанияның IT департаменті ғана емес, іс жүзінде әр департамент не істеу керектігін білдік. Тағы бір рет еске сала кетейін, нақты осы AWS Cloud Adoption Framework тақырыбы сізге танып білу түрінде үшін ұсынылады, сіз AWS Cloud Adoption Framework жалпы не екенін түсінуіңіз керек. AWS емтиханында ең қарапайым сұрақ келуі мүмкін, бірақ осы бағытта тереңірек сұрақтар келмейді. Сондықтан сіз енді мұндай құжат бар екенін білесіз, болашақта бұлт инженері ретінде жұмыс істей бастағанда, ақырында мансап сатысымен жоғарылап, не аға маман, IT архитектор, мүмкін техникалық директор боласыз, сол кезде сіз бұлтқа көшуіңіз керек болады, сонда бұл құжат сізге көмектеседі. Бұл құжат іс жүзінде өте үлкен және көлемді. Сіз оны толығымен талдайсыз, өңдейсіз және сәйкесінше бүкіл компаниямен бұлтқа сәтті көшу үшін бірге әрекет ететін боласыз.
Осымен біз сессиямызды аяқтаймыз. Ең негізгі моменттерді атап өтейік. Біріншісі – біз қандай есептеу модельдері бар екенін және бұлтты сервистерді ұсынудың қандай модельдері бар екенін талдадық. Әрі қарай, біз бұлтты технологиялардың 6 артықшылығын атап өттік. Осыдан кейін біз AWS дегеніміз не, оның қандай сервистері бар және қандай сервистер топтары бар екенін анықтадық. Соңында, төртінші бөлімде біз AWS Cloud Adoption Framework дегеніміз не екенін айттық, яғни бұл жергілікті IT-инфрақұрылымнан бұлтқа көшу кезінде барынша көмектесетін құжат. Мұнда сізге қажет болуы мүмкін барлық сілтемелер бар, толығырақ ақпарат ала аласыз. Осымен сессияны аяқтаймыз. Сізге көп рахмет, бүгін сіз жаңа нәрсе білдіңіз және AWS емтиханын сәтті тапсыруға жақындадыңыз деп үміттенемін. Келесі дәрістерде кездескенше, сау болыңыз!


