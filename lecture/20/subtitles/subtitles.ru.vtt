WEBVTT

00:00:01.080 --> 00:00:08.186
Добрый день, уважаемые студенты!
Я рад вас всех видеть, приветствую вас на следующей

00:00:08.210 --> 00:00:15.317
нашей лекции. Мы переходим к первому
модулю и сегодня мы с вами поговорим про основные

00:00:15.341 --> 00:00:22.072
понятия в облаке. Итак, поехали.
Наша сегодняшняя лекция поделена на четыре части,

00:00:22.096 --> 00:00:29.577
первые две части не привязаны к AWS, а
больше про облачные вычисления, которые могут быть

00:00:29.601 --> 00:00:36.455
применены к любому облачному провайдеру. И
так, первая часть у нас будет введение в

00:00:36.479 --> 00:00:43.919
облачные вычисления. Вторая часть про
преимущества облачных вычислений. Далее, в третьей

00:00:43.943 --> 00:00:51.551
части у нас будет введение в AWS, т.е. Amazon
Web Services и в четвёртой части мы поговорим

00:00:51.575 --> 00:00:58.930
про документ, который называется AWS
Cloud Adoption Framework (AWS CAF). Так начинаем.

00:00:59.520 --> 00:01:07.846
Первая часть. Введение в облачные вычисления. Что
такое облачные вычисления? Облачные вычисления –

00:01:07.870 --> 00:01:16.196
это доставка по требованию IT ресурсов, такие как
вычислительные мощности, базы данных, приложения,

00:01:16.220 --> 00:01:24.547
хранения и другие, через интернет по модели
pay-as-you-go pricing. Pay-as-you-go pricing означает,

00:01:24.571 --> 00:01:32.897
что вы оплачиваете только за то и за то время, в
которое вы использовали те или иные ресурсы. Эти

00:01:32.921 --> 00:01:41.608
ресурсы запускаются на серверных мощностях, которые
находятся в больших дата-центрах, а эти дата-центры

00:01:41.632 --> 00:01:50.319
находятся в различных локациях по всему земному
шару. Этими дата-центрами владеет облачный провайдер,

00:01:50.343 --> 00:01:58.775
в нашем случае AWS. Когда мы говорим про определённый
сервис AWS, то следует понимать, что каждый

00:01:58.799 --> 00:02:07.230
сервис, в том или ином виде, использует серверные
мощности, расположенные на одном из дата-центров.

00:02:08.030 --> 00:02:14.000
Также, следует помнить, что при
 AWS есть более 200 различных сервисов

00:02:14.024 --> 00:02:18.700
и вы должны воспринимать это, таким
образом, как лего элементы,

00:02:18.724 --> 00:02:23.291
лего блоки, т.е. что-то вы используете
для того, чтобы строить

00:02:23.315 --> 00:02:27.881
стены дома, например, что-то вы
используете как дверь, что-то

00:02:27.905 --> 00:02:32.783
используете как окно, где-то это
диван, и так далее. Таким образом,

00:02:32.807 --> 00:02:37.612
используя и компануя различные сервисы,
вы можете построить одну

00:02:37.636 --> 00:02:42.477
целую IT-инфраструктуру. Облачные
вычисления позволяют нам думать

00:02:42.501 --> 00:02:47.343
об инфраструктуре не как о железе,
а как о каком-то софте. Что же

00:02:47.367 --> 00:02:51.620
это значит? Чтобы это понять,
давайте сравним две различные

00:02:51.644 --> 00:02:57.001
вычислительные модели,
первое – это традиционная, вторая – это облачная.

00:02:57.025 --> 00:03:02.242
Когда мы говорим про традиционную
модель вычисления, то подразумевается

00:03:02.266 --> 00:03:06.940
локальный дата-центр и инфраструктура
воспринимается как железо.

00:03:06.964 --> 00:03:11.341
Что это значит? Это значит, что вы
владеете этим локальным

00:03:11.365 --> 00:03:16.096
дата-центром, вам нужно, чтобы
 у вас было физическое помещение,

00:03:16.120 --> 00:03:20.549
вам нужно, чтобы у вас был персонал,
 который обслуживает это

00:03:20.573 --> 00:03:25.680
помещение, оборудование, которое
 там стоит, это серверные мощности.

00:03:26.130 --> 00:03:34.817
Также вам нужно обеспечить физическую безопасность,
так как это оборудование достаточно дорогостоящее.

00:03:34.841 --> 00:03:42.840
Планировать как минимум расположение, планировать
расширение, либо наоборот уменьшение этого помещения.

00:03:42.864 --> 00:03:51.854
Это все подразумевает capital expenditures,
т.е. капитальные вложения – это большие вложения,

00:03:51.878 --> 00:04:00.780
которые вам нужно внести, чтобы начать. Следующее,
это долгий закупочный цикл железа, что это значит?

00:04:00.960 --> 00:04:06.008
Это значит то, что, если вам нужно
докупить какое-то оборудование,

00:04:06.032 --> 00:04:10.925
то вам нужно его заказать, когда
вы заказываете у поставщиков,

00:04:10.949 --> 00:04:15.919
в лучшем случае, она к вам приедет
за несколько дней. В худшем

00:04:15.943 --> 00:04:20.913
случае, это может занять месяц.
Далее, когда к вам приезжает это

00:04:20.937 --> 00:04:26.063
железо, вы её принимаете,
настраиваете и подключаете к дата-центру.

00:04:26.087 --> 00:04:30.512
Это все происходит не в течение
 часа и даже не в течение

00:04:30.536 --> 00:04:35.978
полудня. Поэтому это достаточно долго,
 более того, вам нужно постоянно

00:04:36.002 --> 00:04:40.890
угадывать теоретически максимальные нагрузки.
Что это значит?

00:04:41.160 --> 00:04:46.831
Это значит, что вам нужно просчитать
 те вычислительные мощности,

00:04:46.855 --> 00:04:52.166
которые достаточны для вашего бизнеса.
Теперь, здесь могут

00:04:52.190 --> 00:04:58.135
возникнуть два момента, если вы
владеете недостаточными серверными

00:04:58.159 --> 00:05:03.828
мощностями, то ваше железо не
будет справляться с нагрузками.

00:05:03.852 --> 00:05:09.039
Менее приятный случай, это
когда все те нагрузки, которые

00:05:09.063 --> 00:05:15.084
придут поверх, не обработаются,
что уже не есть хорошо. В худшем

00:05:15.108 --> 00:05:20.940
случае, это когда вся инфраструктура
упадёт и откажется работать,

00:05:20.964 --> 00:05:26.340
тогда вы все запросы на момент
пика не сможете обработать.

00:05:27.030 --> 00:05:33.104
Обратный случай, когда вы закупились
определёнными серверными мощностями и

00:05:33.128 --> 00:05:40.120
нагрузки небольшие, то все это время, когда
у вас нагрузки небольшие, вы фактически

00:05:40.144 --> 00:05:46.426
переплачиваете, потому что вы купили
серверные мощности слишком мощные.

00:05:46.450 --> 00:05:52.733
Это тоже проблема, это несёт большие затраты.
Теперь подумайте о тех бизнесах,

00:05:52.757 --> 00:05:59.334
у которых нагрузка меняется в течение дня,
для них ещё хуже. Давайте представим

00:05:59.358 --> 00:06:05.597
любой веб-сайт, магазин, который продаёт,
допустим, бытовую технику и как

00:06:05.621 --> 00:06:11.778
мы все с вами знаем, ночью никто не закупается.
В течение рабочего дня тоже

00:06:11.802 --> 00:06:18.460
никто не закупается, таким образом,
нагрузка на сервисные мощности минимальная.

00:06:19.170 --> 00:06:25.507
Тогда когда у нас часы пика, т.е.
это где-то начиная с 18 часов вечера локального

00:06:25.531 --> 00:06:32.264
до 21 часов вечера у нас максимальные
нагрузки, люди начинают что-то покупать, таким

00:06:32.288 --> 00:06:38.302
образом, у вас нет такого, что у вас
нагрузки постоянны. Это очень редко и в

00:06:38.326 --> 00:06:45.303
большинстве случаев, нагрузка она динамически
меняется даже в течение дня и даже часа.

00:06:45.327 --> 00:06:51.683
Поэтому, даже в том случае, когда вы
угадаете достаточно точно тот теоретический

00:06:51.707 --> 00:06:58.063
максимум, который у вас может быть,
вы всегда имеете определённый период, даже в

00:06:58.087 --> 00:07:05.084
течение дня, когда у вас часть серверных
мощностей просто не работает и зря простаивает.

00:07:05.108 --> 00:07:11.460
Это и есть те расходы, которые вы несёте
в традиционной вычислительной модели.

00:07:14.370 --> 00:07:20.637
Теперь, рассмотрим вторую модель
– модель облачных вычислений. Она контрастирует

00:07:20.661 --> 00:07:26.928
с предыдущей моделью, и мы воспринимаем
инфраструктуру как софт, как сервис.

00:07:26.952 --> 00:07:33.219
Это значит, что все может быть гибко изменено,
и вы оплачиваете только за то, что вы

00:07:33.243 --> 00:07:39.510
используете, за то время, которое вы
 использовали определённый сервис или ресурс.

00:07:40.230 --> 00:07:46.018
Таким образом, вы можете настроить
 автоматическое изменение размеров

00:07:46.042 --> 00:07:51.830
инфраструктуры в зависимости
от нагрузки на сайт, приложение, ну

00:07:51.854 --> 00:07:57.684
и в целом на IT-инфраструктуру. Другой
важный момент – это то, что вам

00:07:57.708 --> 00:08:03.453
нет необходимости гадать ту
ёмкость, те серверные мощности,

00:08:03.477 --> 00:08:09.053
которые необходимы для вашего бизнеса.
Этим никто не будет уже заниматься в

00:08:09.077 --> 00:08:15.077
облачной вычислительной модели,
так как сервера могут не только людьми

00:08:15.101 --> 00:08:20.547
вручную в нужный момент, но и
 программно запускаться тогда, когда

00:08:20.571 --> 00:08:26.700
нужно для вашего решения, для вашего
 бизнеса, для вашей инфраструктуры.

00:08:27.120 --> 00:08:32.449
Это очень важно, потому что даёт достаточно
 большие преимущества: во-первых,

00:08:32.473 --> 00:08:38.158
вам не нужно содержать локальный
дата-центр, вам не нужно содержать штат людей,

00:08:38.182 --> 00:08:43.653
который занимается не тем, чем занимается
основной ваш бизнес, а это побочное

00:08:43.677 --> 00:08:49.148
направление, побочное управление, департаменты,
которые поддерживают работу

00:08:49.172 --> 00:08:54.661
вашего бизнеса. Когда мы говорим
про облачную модель, вам не нужно содержать

00:08:54.685 --> 00:09:00.174
этот штат, этих людей, вам не нужно
искать помещение, вам не нужно отвечать за

00:09:00.198 --> 00:09:05.292
безопасность дата-центра, потому что
дата-центр есть у AWS и мы в нужном

00:09:05.316 --> 00:09:11.200
количестве кусок этого дата-центра
арендуем на нужное для нас количество времени.

00:09:14.730 --> 00:09:21.072
По мере развития модели облачных
вычислений появляются различные

00:09:21.096 --> 00:09:28.144
стратегии и модели предоставления сервиса,
которые отличаются уровнем

00:09:28.168 --> 00:09:35.468
контроля, гибкости и управляемости.
Давайте подробнее об этом поговорим.

00:09:35.492 --> 00:09:42.793
На текущий момент, выделяют
3 различные модели предоставления облачного

00:09:42.817 --> 00:09:49.663
сервиса. Они отличаются уровнем
 контроля над IT ресурсами.

00:09:49.687 --> 00:09:56.533
Первая – это IaaS, т.е. infrastructure as a service.
Вторая – это PaaS, т.е. platform as a service.

00:09:56.557 --> 00:10:03.404
 Самая последняя это – SaaS,
т.е. software as a service.

00:10:03.428 --> 00:10:10.274
Давайте поговорим подробнее
про каждую из этих моделей.

00:10:10.514 --> 00:10:18.250
Начнём с IaaS – это infrastructure as a service
и подразумевается, что в этой модели у вас

00:10:18.274 --> 00:10:22.416
 максимальный контроль над ресурсами,
которые вам даются, а именно, это

00:10:22.440 --> 00:10:26.583
ресурсы на уровне сетей, т.е. вы можете
настроить сети по вашему желанию на уровне

00:10:26.607 --> 00:10:34.807
самих серверов, т.е. вы настраивая сеть,
говорите, что вот эти сервера у нас в этой сети,

00:10:34.831 --> 00:10:39.101
эти сервера в этой сети. Так они
между собой взаимосвязаны

00:10:39.125 --> 00:10:43.394
и даже на уровне жёстких дисков,
где хранятся ваши данные.

00:10:43.664 --> 00:10:51.224
Таким образом, IaaS максимально приближена к
традиционной вычислительной модели, где у вас полный

00:10:51.248 --> 00:10:58.808
контроль: вы на сервера устанавливаете операционную
систему, вы устанавливаете по необходимости

00:10:58.832 --> 00:11:06.153
приложения, которые вам нужны, вы сами поддерживаете
и операционную систему и приложения, при

00:11:06.177 --> 00:11:13.897
появлении новых версии, обновлений, может быть
даже критических обновлений безопасности, это все

00:11:13.921 --> 00:11:21.283
вам нужно делать самостоятельно. Максимально
приближенная версия к традиционной вычислительной

00:11:21.307 --> 00:11:28.668
модели в облаке, это – модель предоставления
сервиса по модели infrastructure as a service .

00:11:28.692 --> 00:11:35.810
Единственное отличие IaaS от традиционной
вычислительной модели это то, что вы работаете и

00:11:35.834 --> 00:11:44.154
воспринимаете инфраструктуру не как железо, hardware,
а как software, т.е. софт. Этим она и отличается.

00:11:45.254 --> 00:11:50.418
Следующая модель – это PaaS,
platform as a service. Один из примеров, это

00:11:50.442 --> 00:11:56.252
сервис AWS RDS, т.е. Relational Database Service,
когда вам предоставляется база

00:11:56.276 --> 00:12:01.797
данных как сервис. Что это значит?
Это значит, что вам не нужно устанавливать

00:12:01.821 --> 00:12:07.778
операционную систему, вам не нужно
устанавливать приложения баз данных, т.е. СУБД

00:12:07.802 --> 00:12:13.524
(Система управления базами данных) на
этот сервер, заниматься обновлениями и так

00:12:13.548 --> 00:12:19.198
далее, вам предоставляется база данных
как сервис, все остальное операционная

00:12:19.222 --> 00:12:24.726
система, приложение, а также железо –
на стороне облачного провайдера, т.е.

00:12:24.750 --> 00:12:30.254
вы видите, контроля у вас уже меньше и
какую-то часть облако берет на себя.

00:12:30.524 --> 00:12:37.786
Если у вас вот работает допустим база данных, если
у вас ломается железо, что-то с ним там происходит,

00:12:37.810 --> 00:12:45.000
то прозрачно для вас, облачный провайдер его заменит
и вы продолжите работать с этим сервисом.

00:12:45.024 --> 00:12:52.250
 Если же выходит какое-то критическое обновление
для операционной системы либо для СУБД, то это

00:12:52.274 --> 00:12:59.501
тоже происходит прозрачно для вас, облачный провайдер
за вас это делает, таким образом, вам содержать

00:12:59.525 --> 00:13:06.516
администратора баз данных уже нет необходимости,
вам нужны разработчики и разработчики баз данных,

00:13:06.540 --> 00:13:13.532
которые работают с данными внутри этой базы данных,
строят модель данных и так далее. Вы видите,

00:13:13.556 --> 00:13:20.873
контроля меньше, но, тем не менее, когда мы говорим
platform as a service, это те сервисы, которые не

00:13:20.897 --> 00:13:28.214
являются конечным продуктом, а в большинстве случаев,
являются частью одной целой IT-инфраструктуры.

00:13:31.034 --> 00:13:39.624
Последняя модель – это SaaS,
software as a service. Отличительной особенностью

00:13:39.648 --> 00:13:47.613
этой модели является то, что сервис предоставляется
как готовый продукт, у вас минимальное количество

00:13:47.637 --> 00:13:55.994
контроля, вы не сможете его как-то модифицировать
 и можете использовать только те настройки,

00:13:56.018 --> 00:14:03.980
которые облачный провайдер для вас вывел наружу.
Самым ярким примером software as a service является

00:14:04.004 --> 00:14:12.262
электронная почта. Например, Gmail или WorkMail, есть
у Amazon такой cервис почты. Фактически, это готовый

00:14:12.286 --> 00:14:20.387
продукт, который могут использовать конечные
потребители. Тем не менее, каждый сервис

00:14:20.411 --> 00:14:28.272
может являться отдельным блоком и даже
сервисы SaaS могут быть частью этой

00:14:28.296 --> 00:14:36.794
инфраструктуры и использоваться как одно целое. Я
надеюсь, вам понятна разница между  моделями.

00:14:37.604 --> 00:14:43.659
Самый основной момент это то, что начиная
от IaaS опускаясь ниже через PaaS до

00:14:43.683 --> 00:14:49.738
SaaS, вы видите, что контроля над
IT ресурсом у вас меньше. То, что контроля

00:14:49.762 --> 00:14:55.732
меньше, не говорит о том, что это плохо.
Это говорит о том, что вам не нужно

00:14:55.756 --> 00:15:02.605
заниматься какой-то частью и в зависимости от
ваших бизнес потребностей, вы выбираете

00:15:02.629 --> 00:15:08.782
тот или иной сервис, например, если
вы какая-то компания, которая занимается

00:15:08.806 --> 00:15:14.959
сложными вычислительными расчётами, например,
научными, то вам, скорее всего,

00:15:14.983 --> 00:15:21.336
нужна не простая база данных, а какая-то
продвинутая с определёнными настройками,

00:15:21.360 --> 00:15:27.314
специально оптимизированными для вашего типа
данных, которые там крутятся.

00:15:27.614 --> 00:15:36.745
В этом случае, обычный PaaS, т.е. сервис AWS RDS
вам не подойдёт, потому что там есть какие-то

00:15:36.769 --> 00:15:41.581
определенные настройки, вы что-то можете
поменять, но полного контроля у вас не будет,

00:15:41.605 --> 00:15:50.605
поэтому ваш вариант – это IaaS. В случае,
когда вам достаточно стандартных настроек или

00:15:50.629 --> 00:15:55.311
нужно в небольшом количестве,
не сильно оптимизировать

00:15:55.335 --> 00:16:00.404
ваш сервис, вашу базу данных,
то вам достаточно использовать

00:16:00.428 --> 00:16:04.722
готовый сервис AWS RDS,
как пример, и не содержать

00:16:04.746 --> 00:16:13.596
целого системного администратора, который занимался
бы узконаправленной работой и обслуживал бы эту базу

00:16:13.620 --> 00:16:22.901
данных, за вас это автоматически делает облачный
провайдер. Там сильные специалисты, которые

00:16:22.925 --> 00:16:32.117
собрались со всего мира и сделали предварительно эту
настройку в лучшем виде для вас – это первое,

00:16:32.141 --> 00:16:36.985
второе – исключается человеческий фактор,
т.е. вряд ли что-то там

00:16:37.009 --> 00:16:41.854
поломается из-за того, что
не такую настройку сделали.

00:16:41.984 --> 00:16:46.274
Она автоматически для вас
развёртывается, т.е. поднимается

00:16:46.298 --> 00:16:49.909
и даётся как сервис.
Когда это у вас локальный,

00:16:49.933 --> 00:16:57.632
живой физически, системный администратор, всегда
есть человеческий фактор, где-то что-то поломалось,

00:16:57.656 --> 00:17:05.694
оно может больно отразиться на вашем бизнесе.
Поэтому, когда вам нужно меньше контроля для базы

00:17:05.718 --> 00:17:09.381
данных, как пример, вы
можете воспользовать PaaS.

00:17:09.405 --> 00:17:17.074
Последний случай, это когда вам нужно что-то максимально
готовое. У вас, например, нет соответствующих

00:17:17.098 --> 00:17:25.591
специалистов для поддержания вот определённого софта, но
при этом этот софт является частью вашей инфраструктуры,

00:17:25.615 --> 00:17:33.689
то вы можете посмотреть в сторону SaaS сервисов, которые
представлены как готовый продукт. Самый популярный

00:17:33.713 --> 00:17:41.290
пример – это веб-почта. Другие примеры, касающиеся
каждого из видов моделей предоставления облачного

00:17:41.314 --> 00:17:45.554
сервиса, мы будем рассматривать
на следующих занятиях.

00:17:47.834 --> 00:17:55.879
Теперь, давайте подробнее поговорим о том, какие
модели развёртывания IT-инфраструктуры существует на

00:17:55.903 --> 00:18:03.947
сегодняшний день. Это: облачная, гибридная и
on-premises, т.е. локальная, или по-другому

00:18:03.971 --> 00:18:08.218
 ещё называют private cloud.
Давайте разберём, чем каждая отличается.

00:18:08.242 --> 00:18:16.169
Когда мы говорим про облачную, cloud deployment
model, это значит вся ваша IT-инфраструктура хостится

00:18:16.193 --> 00:18:25.357
на одном или нескольких из облачных провайдеров.
Далее, когда мы говорим on-premises, это значит

00:18:25.381 --> 00:18:34.972
локальный дата-центр или провайдер дата-центра,
услугами которых вы пользуетесь, но суть в том,

00:18:34.996 --> 00:18:40.082
что вся ваша инфраструктура развёрнута в черте
вашего города, либо региона и не является хостер,

00:18:40.106 --> 00:18:49.789
 будь то вы, либо это локальный провайдер
не является публичным облачным провайдером.

00:18:49.813 --> 00:18:58.724
Есть гибридный вариант, когда вы хостите часть
инфраструктуры в облаке и часть хостите локально.

00:18:59.474 --> 00:19:04.727
Это достаточно не распространённая,
но и не такое редкое явление,

00:19:04.751 --> 00:19:09.510
потому как те компании,
которые изначально были локальные

00:19:09.534 --> 00:19:14.746
начинают переходить в облако.
В процессе перехода они работают

00:19:14.770 --> 00:19:19.982
с гибридной инфраструктурой до того
момента, пока они полностью

00:19:20.006 --> 00:19:25.115
не перейдут в облако, т.е. это может
 быть промежуточным этапом,

00:19:25.139 --> 00:19:29.917
а может быть и конечным состоянием,
когда у вас в облако,

00:19:29.941 --> 00:19:35.467
например, отправляются бэкапы ваших
баз данных и вся инфраструктура

00:19:35.491 --> 00:19:40.514
хостится на локальном дата-центре
по тем или иным причинам.

00:19:42.944 --> 00:19:50.323
У вас может сложиться впечатление, что облачная
IT-инфраструктура и локальная IT инфраструктура

00:19:50.347 --> 00:19:57.175
абсолютно разные вещи, на самом деле
под капотом одно и то же, а именно сервера обычно

00:19:57.199 --> 00:20:04.023
установлены Linux, поверх него устанавливаются
различные приложения, которые составляют

00:20:04.047 --> 00:20:11.824
элементы, блоки одной целой нашей IT-инфраструктуры.
Единственное отличие это то, что в облаке вы

00:20:11.848 --> 00:20:18.849
можете добраться до ваших IT ресурсов на
более высоком абстрактном уровне и они обёрнуты,

00:20:18.873 --> 00:20:26.512
представлены вам в виде AWS сервисов. Когда мы
говорим про локальную IT-инфраструктуру, то вы с

00:20:26.536 --> 00:20:33.936
этими IT ресурсами взаимодействуете напрямую, т.е.
с железом, сами его подключаете к локальной

00:20:33.960 --> 00:20:41.200
сети, дальше устанавливаете операционную
систему, приложения и все делаете самостоятельно.

00:20:41.380 --> 00:20:49.843
Я бы хотел сейчас на этом слайде пройтись
по моментам, что есть в локальной инфраструктуре

00:20:49.867 --> 00:20:58.234
и как это называется на стороне облака. Мы
рассмотрим различные группы IT ресурсов, это

00:20:58.258 --> 00:21:06.763
безопасность, сети, вычислительные ресурсы
и хранение и базы данных. Когда мы говорим про

00:21:06.787 --> 00:21:15.970
безопасность, мы подразумеваем на локальной
IT-инфраструктуре Firewalls, ACLs, Administrators.

00:21:16.330 --> 00:21:23.875
А когда мы говорим про безопасность в облаке, то
примерами из сервисов на стороне облака, связанной с

00:21:23.899 --> 00:21:31.853
безопасностью являются, например, Security groups,
Network ACLs, IAM сервис и так далее.

00:21:32.077 --> 00:21:36.140
Когда мы говорим про сети, например, локально
мы говорим у нас есть роутер, у нас

00:21:36.764 --> 00:21:44.913
есть Network pipeline, есть Switch, то в облаке есть
 аналоги, сервисы, которые позволяют делать то же

00:21:44.937 --> 00:21:49.000
самое, как пример Elastic Load Balancing,
Amazon VPC.

00:21:49.960 --> 00:21:56.324
Следующая группа – это вычислительные
мощности. На локальной IT-инфраструктуре это вот

00:21:56.348 --> 00:22:03.163
ваше железо отдельный сервер, на котором
можно что-то установить, что-то с ним сделать. На

00:22:03.187 --> 00:22:09.777
стороне облака физически до этого сервера,
конечно, вы добраться не сможете, но вы сможете

00:22:09.801 --> 00:22:16.390
его выделить под себя и уже работать с
ней так же как вы работаете с локальным сервером.

00:22:18.211 --> 00:22:23.089
Следующее – это хранение и базы данных,
 т.е. на стороне локальной

00:22:23.113 --> 00:22:28.908
IT-инфраструктуры, вы настраиваете различные
типы хранения данных, как DAS,

00:22:28.932 --> 00:22:34.574
SAN, NAS, также мы работаем напрямую
с системами управления базами данных,

00:22:34.598 --> 00:22:40.164
т.е. RDBMS (relational database
management system). На стороне облака у

00:22:40.188 --> 00:22:45.866
нас есть полные аналоги сервисов, такие
как Amazon EBS (Amazon Elastic block storage)

00:22:45.890 --> 00:22:51.342
 для блочного хранения,
Amazon EFS (Amazon Elastic File System)

00:22:51.366 --> 00:22:56.818
это тоже блочное хранение,
но есть возможность предоставить общий доступ

00:22:56.842 --> 00:23:02.140
нескольким серверам к одному блоку
хранения, тоже блочное хранилище.

00:23:02.350 --> 00:23:09.630
Дальше, мы говорим про Amazon S3, если
нам нужно объектное хранилище. Ну и последняя уже

00:23:09.654 --> 00:23:16.934
знакомая вам, это Amazon RDS, т.е. Amazon
Relational Database Service, для того, чтобы

00:23:16.958 --> 00:23:24.273
работать с базами данных. Это я к тому
говорю, что для любого IT ресурса в традиционной

00:23:24.297 --> 00:23:32.380
локальной IT-инфраструктуре можно подобрать
один или несколько аналогов сервисов в облаке AWS.

00:23:35.560 --> 00:23:44.220
Мы подошли к заключительному слайду первой части
сессии, и я бы хотел пройтись по основным моментам,

00:23:44.244 --> 00:23:52.573
которые вам нужно запомнить и которые вам помогут,
могут прийти в виде вопроса на реальном экзамене.

00:23:52.597 --> 00:24:01.092
Хорошо. Первое – что такое облачные вычисления?
Облачные вычисления – это доставка по требованию

00:24:01.116 --> 00:24:09.610
IT ресурсов через интернет по модели pay-as-you-go
pricing, т.е. плати только за то, что ты используешь.

00:24:10.480 --> 00:24:16.134
Второе – это то, что облачные вычисления
 позволяют нам думать

00:24:16.158 --> 00:24:21.622
об инфраструктуре не как о железе, а как
о software, т.е.

00:24:21.646 --> 00:24:27.489
как о сервисе, либо софте. Далее.
Всего существует три модели

00:24:27.513 --> 00:24:33.356
предоставления облачного сервиса
это: первая – это IaaS, т.е.

00:24:33.380 --> 00:24:39.197
infrastructure as a service.
Вторая – это PaaS, т.е. platform as a service.

00:24:39.221 --> 00:24:47.712
Третья это – SaaS, т.е. software as a service.
Далее, выделяют три варианта развёртывания

00:24:47.736 --> 00:24:57.580
IT-инфраструктуры: это cloud, полностью
инфраструктура хостится у облачного провайдера.

00:24:58.030 --> 00:25:06.180
Гибридная – это когда часть вашей IT инфраструктуры
находится в облаке, а часть локально. И on-premises,

00:25:06.204 --> 00:25:14.353
т.е. вся ваша IT инфраструктура хостится на локальном
дата-центре. Последнее, что следует помнить, что

00:25:14.377 --> 00:25:22.728
существует большое количество сервисов AWS и вы
 на любой IT ресурс, который есть на локальном

00:25:22.752 --> 00:25:30.700
дата-центре, можете найти один или несколько
вариантов сервисов, которые будут делать то же самое.

00:25:34.540 --> 00:25:40.865
Мы переходим ко второй части нашей
сессии и поговорим про преимущества облачных

00:25:40.889 --> 00:25:47.863
технологий. Вы можете остановить это
видео и подумать, почему же большинство компаний

00:25:47.887 --> 00:25:54.537
во всем мире начинают переходить в облако.
Большинство ответов у вас уже есть и на

00:25:54.561 --> 00:26:01.210
следующих слайдах мы рассмотрим шесть
преимуществ, которые дают облачные технологии.

00:26:04.510 --> 00:26:10.060
Первое преимущество облачных технологий –
это вы обмениваете CapEx, т.е. Capital Expenses

00:26:10.084 --> 00:26:18.130
или капитальные расходы на Variable Expenses,
т.е. расходы, которые у вас могут меняться.

00:26:18.154 --> 00:26:26.248
Что это значит? Это значит, что вам нет необходимости
вливать большие вложения для того, чтобы начать ваш

00:26:26.272 --> 00:26:32.963
бизнес. Для того, чтобы построить IT-инфраструктуру,
вам не нужно поднимать дата-центр,

00:26:32.987 --> 00:26:39.610
 вам не нужно покупать это здание, вам
не нужно покупать дорогостоящее оборудование.

00:26:39.970 --> 00:26:44.070
Это все вы обходите стороной
и вы с использованием

00:26:44.094 --> 00:26:48.950
облачных технологии и соответствующих
сервисов, арендуете

00:26:48.974 --> 00:26:53.621
на какое-то время ровно то,
что вам нужно. В тот момент,

00:26:53.645 --> 00:27:01.863
когда это вам становится не нужно, вы её передаёте
обратно облачному провайдеру и за это больше не

00:27:01.887 --> 00:27:07.044
оплачиваете. Таким образом,
вам не нужно, когда вы начинаете

00:27:07.068 --> 00:27:15.710
создавать IT инфраструктуру, нести капитальные
большие расходы, которые вы используете.

00:27:16.330 --> 00:27:23.902
Это очень важно для бизнеса, потому что когда бизнес
только-только начинается, либо начинается какое-то

00:27:23.926 --> 00:27:31.423
новое направление, капитальные расходы это то, что
замораживает финансовые средства, т.е. вы большое

00:27:31.447 --> 00:27:38.577
количество денег потратили на капитальные вложения.
Нужно ещё денег, либо если у вас есть какой-то

00:27:38.601 --> 00:27:46.540
определённый бюджет на ваш проект, то меньше денег
останется на то, чтобы потратить на другие расходы.

00:27:46.990 --> 00:27:54.754
Это может отразиться на скорости, на качестве
продукта, который вы делаете или проекта.

00:27:54.778 --> 00:28:02.542
В облачных технологиях, вы освобождаетесь
от этих капитальных вложений, у вас фактически

00:28:02.566 --> 00:28:10.587
 не замораживаются деньги и тот бюджет, который
 у вас выделен, вы можете потратить больше на другие

00:28:10.611 --> 00:28:14.989
ваши статьи расходов, либо же добиться
абсолютно того же, но с меньшим

00:28:15.013 --> 00:28:19.390
бюджетом, потому что вы не
несёте этих больших расходов.

00:28:21.460 --> 00:28:26.509
Второе преимущество облачных
технологий – это преимущества

00:28:26.533 --> 00:28:35.582
от массовости, масштабов
этих развёртываний дата-центров,

00:28:35.606 --> 00:28:41.830
т.е. AWS экономит на том, что он
открывает большое количество

00:28:41.854 --> 00:28:46.128
дата-центров, очень много
 железа задействовано в этом и

00:28:46.752 --> 00:28:49.844
за счёт того, что это происходит
 массово в большом объёме,

00:28:49.868 --> 00:28:54.961
где-то они получают скидки, где-то
AWS выгоднее, потому что,

00:28:54.985 --> 00:28:59.638
представьте, вот у вас есть
один сервер и вы нанимаете

00:28:59.662 --> 00:29:02.020
целого системного администратора,
чтоб его администрировать.

00:29:02.470 --> 00:29:07.177
Тогда вся ваша зарплата фактически уходит
в один сервер, чтобы поддерживать этот сервер и

00:29:07.201 --> 00:29:13.748
представьте системного администратора, который
поддерживает сто серверов, это значит, его зарплата

00:29:13.772 --> 00:29:21.015
равномерно распределяется по вот этим ста ресурсам,
таким образом, доля зарплаты этого человека

00:29:21.139 --> 00:29:30.973
размывается по вашей IT-инфраструктуре.
Здесь похожий аналог: за счёт того, что они могут

00:29:30.997 --> 00:29:36.972
размазать часть своих расходов, облачный провайдер,
он экономит на этом, а это все отражается

00:29:36.996 --> 00:29:44.894
на том, что он может предоставить для нас
цены за сервисы намного ниже, чем если бы мы это

00:29:44.918 --> 00:29:52.197
делали самостоятельно своими силами. Таким образом,
мы платим меньше и платим ещё меньше, потому

00:29:52.221 --> 00:29:59.500
что мы работаем по модели pay-as-you-go pricing,
т.е. оплачиваем только то, что мы используем.

00:30:02.020 --> 00:30:08.513
Следующее преимущество – это то,
о чем мы с вами уже говорили. С облачными

00:30:08.537 --> 00:30:15.743
технологиями нет необходимости угадывать
какой capacity, какая ёмкость или какие

00:30:15.767 --> 00:30:22.798
серверные мощности нам нужны для
того, чтобы удовлетворять потребности бизнеса.

00:30:22.822 --> 00:30:32.491
Это на самом деле, достаточно серьёзная задача,
с которой по определённым

00:30:32.515 --> 00:30:38.623
причинам не всегда удаётся правильно
совладать. Что я имею в виду?

00:30:38.647 --> 00:30:45.476
 IT департаменты во всех компаниях сталкиваются
с такой проблемой, что им нужно

00:30:45.500 --> 00:30:49.374
рассчитать серверные мощности на текущий
момент сколько нужно и планировать

00:30:49.398 --> 00:30:56.272
на будущее с учётом того, что поставка
оборудования занимает какое-то время.

00:30:56.602 --> 00:31:00.019
Помимо поставки, его нужно принести,
настроить, подготовить

00:31:00.143 --> 00:31:04.695
и подключить к IT-инфраструктуре,
это все время, это

00:31:04.719 --> 00:31:09.011
все занимает несколько дней, недель,
поэтому есть отдельный

00:31:09.035 --> 00:31:12.178
человек, либо штат, несколько людей,
 которые занимаются

00:31:12.202 --> 00:31:16.531
этим планированием и делает прогноз,
что через шесть месяцев

00:31:16.555 --> 00:31:21.516
мы растём такими темпами и
нам нужно такое количество

00:31:21.540 --> 00:31:25.575
оборудования заказать к этому дню,
например, либо через

00:31:25.599 --> 00:31:29.485
год мы вырастем по текущим
метрикам на такой объем,

00:31:29.509 --> 00:31:33.535
либо наоборот, уменьшимся и
 нам нужно столько-то железа

00:31:33.559 --> 00:31:39.584
докупить. Сам бизнес это такой род
деятельности, который

00:31:39.608 --> 00:31:43.372
сложно прогнозировать, вы не знаете вы
через полгода

00:31:43.396 --> 00:31:46.048
вырастите в три раза, в пять раз,
 а может в сто раз или, может

00:31:46.572 --> 00:31:54.367
быть, совсем закроетесь, через год это ещё сложнее
планировать, как-то предугадать, что произойдёт.

00:31:54.391 --> 00:31:57.893
Поэтому всегда будет элемент
такой, что не всегда удаётся точно

00:31:57.917 --> 00:32:02.392
определить, какое количество
серверных мощностей вам нужно.

00:32:02.722 --> 00:32:18.945
Более того, у большинства бизнесов нагрузка на их
IT-инфраструктуру неоднородна в течении дня, это

00:32:18.969 --> 00:32:32.193
тот пример веб-сайта бытовой техники, который мы
ранее обсуждали. И это тот случай, когда нагрузка

00:32:32.217 --> 00:32:38.061
на IT-инфраструктуру меняется в зависимости
от части дня и, например, в ночные часы, когда все

00:32:38.085 --> 00:32:44.405
спят, никто не заказывает, либо в рабочие часы,
когда все работают, все ваши сервера не загружены

00:32:44.429 --> 00:32:52.009
или минимально загружены, фактически часть
серверов простаивает. Другой случай, когда вы не

00:32:52.033 --> 00:32:59.759
рассчитали, либо у вас проводится акция,
либо по тем или иным причинам, пришёл

00:32:59.783 --> 00:33:06.935
большой трафик, большое количество пользователей
и идёт увеличенное количество объема нагрузки на

00:33:06.959 --> 00:33:16.112
ваши сервера, то мы говорим это Underestimated
server capacity, когда у вас сервера перегружены.

00:33:17.182 --> 00:33:21.410
В локальной IT-инфраструктуре
вы с этим постоянно будете

00:33:21.434 --> 00:33:26.125
сталкиваться, и когда у вас нагрузки
 меняются в течение дня,

00:33:26.149 --> 00:33:30.609
то вы где-то упускаете возможную
прибыль, потому что часть

00:33:30.633 --> 00:33:35.092
пользователей, которые хотели
заказать что-то, не смогут заказать,

00:33:35.116 --> 00:33:39.322
потому что инфраструктура
не может обработать этот запрос,

00:33:39.346 --> 00:33:47.132
она и так перегружена. Обратный случай, когда
сервера просто простаивают, вы просто так,

00:33:47.156 --> 00:33:52.795
фактически, впустую оплачиваете за
электричество, за аренду, именно за эти часы,

00:33:52.819 --> 00:33:56.928
 и оборудование
просто простаивает. Такого не

00:33:56.952 --> 00:34:01.527
происходит у нас в облаке и
вы зависимости от требования к

00:34:01.551 --> 00:34:06.205
нагрузке к вашей инфраструктуре,
можете настроить её таким

00:34:06.229 --> 00:34:10.883
образом, чтобы она автоматически
менялась, она увеличивается

00:34:10.907 --> 00:34:15.485
в сто раз, когда это нужно и
уменьшается в десять раз, если

00:34:15.509 --> 00:34:19.928
того требует нагрузка. Таким образом,
вы несёте расходы

00:34:19.952 --> 00:34:24.489
в точности такие, которые вы
используете. Это и есть третье

00:34:24.513 --> 00:34:28.972
преимущество облачных технологий –
вы перестаёте гадать.

00:34:31.702 --> 00:34:37.474
Следующие преимущества облачных
технологий – это увеличенная скорость и

00:34:37.498 --> 00:34:43.270
гибкость. Что под этим имеется в виду?
Мы тоже про это уже проговорили.

00:34:43.294 --> 00:34:48.492
Идея в том, что когда мы работаем
с локальной IT-инфраструктурой

00:34:48.516 --> 00:34:54.210
как железо, мы сами делаем поставку
 оборудования, это может занимать

00:34:54.234 --> 00:34:59.885
дни и недели. Тогда как на стороне облака,
если вам нужен тот или иной

00:34:59.909 --> 00:35:05.560
сервис, либо сервер, то они
находятся у вас на расстоянии нескольких

00:35:05.584 --> 00:35:10.989
кликов, вы прокликаете и в течение
нескольких минут получаете этот

00:35:11.013 --> 00:35:16.335
сервер. Таким образом, все то,
что в обычное время без облачных

00:35:16.359 --> 00:35:21.555
технологий происходило бы недели,
сейчас вы будете проделывать и

00:35:21.579 --> 00:35:27.520
получать за считанные минуты.
Это просто сумасшедшее ускорение, которое

00:35:27.544 --> 00:35:33.112
даёт облачные технологии, позволяет
вам, компаниям, бизнесу уменьшить

00:35:33.136 --> 00:35:38.704
затраты, которые несёт компания
за счёт вот этого ускорения и других

00:35:38.728 --> 00:35:43.804
преимуществ облачных технологий.
Дешевле, эффективнее и быстрее

00:35:43.828 --> 00:35:49.889
проводить различного рода эксперименты,
 например, когда запускается новый

00:35:49.913 --> 00:35:55.066
продукт или, в целом, когда вы
делаете новое что-то, изначально

00:35:55.090 --> 00:36:00.992
основной ваш продукт, это все
будет для вас намного дешевле и быстрее.

00:36:03.082 --> 00:36:12.017
Пятое преимущество – это то, что мы перестаём
напрямую взаимодействовать с железом, дата-центрами

00:36:12.041 --> 00:36:20.790
и не теряем на это ни времени, ни наши деньги.
Поэтому бизнесу легче сконцентрироваться не на

00:36:20.814 --> 00:36:25.653
чем-то косвенном, а именно, на поддержке дата-
центров, которые поддерживают основное решение,

00:36:25.677 --> 00:36:36.175
а сконцентрироваться на основном решении, на своих
клиентах. Самое последнее преимущество, которое так

00:36:36.199 --> 00:36:45.275
или иначе мы затрагивали – это то, что мы можем
стать глобальными за минуты. Имеется в виду, наша

00:36:45.299 --> 00:36:53.374
глобальная инфраструктура AWS, которая находится
в разных частях нашего земного шара, в различных

00:36:53.398 --> 00:37:06.570
локациях и даёт нам возможность строить IT
инфраструктуру, как результат этого распространения

00:37:06.594 --> 00:37:15.292
по всему земному шару становиться ближе к
нашим клиентам и минимально нести за это затраты.

00:37:18.142 --> 00:37:24.982
На этом мы добрались до последнего слайда
второй части нашей сессии. Давайте пройдёмся по

00:37:25.006 --> 00:37:32.624
основным моментам, это шесть преимуществ, которые
мы прошли. Первое – это то, что мы минимизируем

00:37:32.648 --> 00:37:39.486
капитальные расходы, либо совсем исключаем и
переводим в расходы непостоянные, variable,

00:37:39.510 --> 00:37:44.819
которые пропорционально будут расти или уменьшаться
в зависимости от того, как мы используем

00:37:44.843 --> 00:37:50.052
сервисы AWS. Второе – это массовость развёртывания
этого решения, которое позволяет снизить

00:37:50.076 --> 00:37:58.285
цену сервиса для конечных пользователей, т.е.
для нас, как разработчиков бизнеса, компаниям и

00:37:58.309 --> 00:38:06.436
так далее. Третье – это то, что мы перестаём
угадывать ёмкость, т.е. нам не нужно угадывать

00:38:06.460 --> 00:38:16.222
какой объем вычислительных мощностей нам нужно.
Это все делается автоматически на стороне облака.

00:38:17.032 --> 00:38:25.254
Четвёртое – это то, что мы получаем большую
скорость и гибкость за счёт того, что мы не работаем

00:38:25.278 --> 00:38:30.980
с инфраструктурой как с железом, а работаем как
с сервисом и все, что мы хотим запросить

00:38:31.004 --> 00:38:38.054
мы получаем за минуты, а не за неделю. Пятое –
это то, что мы перестаём заниматься косвенными

00:38:38.078 --> 00:38:48.865
работами, а именно обслуживание и все
работы, связанные с поддержкой дата-центров, а эти

00:38:48.889 --> 00:38:57.004
работы отдаём облачному провайдеру, а сами имеем
возможность весь фокус, все внимание обратить

00:38:57.028 --> 00:39:07.968
на основной продукт и на наших клиентов.
Последнее, шестое – это то, что AWS распространён

00:39:07.992 --> 00:39:12.492
по всему земному шару, есть дата-центры
в различных локациях, что даёт нам возможность

00:39:12.516 --> 00:39:20.722
поднять инфраструктуру в любом месте и в итоге,
быть ближе к нашим клиентам и пользователям.

00:39:23.182 --> 00:39:31.784
Мы переходим к следующей части нашей сессии,
это – введение в AWS, в этой главе мы рассмотрим

00:39:31.808 --> 00:39:38.411
его более подробно. В целом, что такое веб-сервис?
Это – такая служба, доступная в интернете

00:39:38.435 --> 00:39:47.715
и даёт возможность вызвать себя через определённый
стандартизированный формат общения, это,

00:39:47.739 --> 00:39:54.664
может быть, XML либо JSON. Таким образом, вы
делаете запрос, получаете ответ и, другими словами,

00:39:54.688 --> 00:40:03.497
веб-сервис это некий API (application programming
interface), с которым вы можете общаться, т.е.

00:40:03.521 --> 00:40:15.145
программы общаются между собой через API.
Теперь, попробуем дать определение, что такое AWS,

00:40:15.169 --> 00:40:21.446
т.е. Amazon Web Services – это безопасная облачная
платформа, которая объединяет все эти веб-сервисы

00:40:21.470 --> 00:40:33.184
в одном месте и даёт вам возможность запрашивать
IT ресурсы по необходимости, по требованию.

00:40:33.834 --> 00:40:40.943
Вы платите только за то, что вы используете.
Только за то время, в которое вы это

00:40:41.067 --> 00:40:48.088
все использовали и самое главное это то,
что вы можете запросить любой ресурс,

00:40:48.112 --> 00:40:55.397
таким образом, вы можете в облаке
с облачным провайдером построить IT-инфраструктуру

00:40:55.421 --> 00:41:02.266
любой сложности, правильно скомпоновав
эти сервисы между собой. Как уже ранее

00:41:02.290 --> 00:41:13.062
упоминалось, у AWS есть более 200 различных
 сервисов. Эти сервисы поделены на

00:41:13.086 --> 00:41:19.840
различные категории, которые вы можете
видеть на слайде. В каждой категории может быть

00:41:19.864 --> 00:41:23.872
от одного до десятка сервисов. В зависимости
 от ваших бизнес потребностей, вы ищете

00:41:24.196 --> 00:41:31.414
соответствующий вам сервис, изучаете её
и используете в вашей IT-инфраструктуре.

00:41:33.544 --> 00:41:40.648
На этом слайде вы можете видеть простейший пример
IT-инфраструктуры в облаке. Здесь представлены

00:41:40.672 --> 00:41:47.101
сервисы из четырёх различных групп сервисов,
это: AWS VPC, т.е. Virtual Private Cloud

00:41:47.125 --> 00:41:52.590
– это сеть в облаке для того, чтобы все ваши
ресурсы хранились в одном месте безопасно.

00:41:52.614 --> 00:42:00.682
Следующее это Amazon EC2 – это фактически
ваш сервер в облаке. Он относится к группе сервисов

00:42:00.706 --> 00:42:07.640
Compute, т.е. вычисление. Представим, что там
у вас крутится какое-то приложение, пользователь

00:42:07.664 --> 00:42:14.076
вызывает это приложение, и вы генерируете
на каждого пользователя какой-то файл. Этот

00:42:14.100 --> 00:42:20.658
файл вам нужно хранить объектно, поэтому вы
 используете следующий сервис Amazon S3 – это

00:42:20.682 --> 00:42:27.844
сервис хранения для того, чтобы вот эти файлы
 в объектном виде сохранить в определённом месте.

00:42:28.564 --> 00:42:36.636
Также, вы можете подключить сюда сервис, например,
Amazon DynamoDB – система управления базами

00:42:36.660 --> 00:42:44.731
данных класса NoSQL из группы сервисов Баз данных.
В нём можете сгенерировать индекс для того,

00:42:44.755 --> 00:42:52.827
чтобы приложение быстрее находило ваши файлы,
загруженные в сервис Amazon S3. Этот слайд был

00:42:52.851 --> 00:43:00.922
специально показан вам как пример того, что вы
можете компоновать между собой эти сервисы, они

00:43:00.946 --> 00:43:09.039
могут между собой работать, и, скорее всего,
ваша архитектура будет намного сложнее. Как я уже

00:43:09.063 --> 00:43:17.156
ранее вам говорил, что, в зависимости от ваших
бизнес требований, либо требований к приложению,

00:43:17.180 --> 00:43:25.230
к IT-инфраструктуре, выбор сервисов в облаке
будет отличаться от случая к случаю, поэтому ваша

00:43:25.254 --> 00:43:33.304
задача понимать, что за сервис, что он даёт,
а дальше уже понимать для чего он используется.

00:43:33.814 --> 00:43:41.275
В тот момент, когда вам нужно для решения
задачи использовать этот сервис, вы изучаете его

00:43:41.299 --> 00:43:48.761
глубже. Здесь вы можете видеть пример сервисов,
которые есть, это далеко не полный список.

00:43:48.785 --> 00:43:56.578
Интересно то, что название сервиса, в большинстве
случаев, начинается либо с Amazon, либо AWS,

00:43:56.602 --> 00:44:00.396
тут нет никакой абсолютной логики, мне интересно
 было как-то с этим разобраться, но никакого

00:44:00.420 --> 00:44:09.193
объяснения этому нет. Я объяснил для себя это тем,
что AWS команда компания очень большая, в

00:44:09.217 --> 00:44:19.990
ней много команд и фактически для каждого сервиса
 выделена своя команда, которая разрабатывает

00:44:20.014 --> 00:44:27.195
и поддерживает. Я так понимаю, что название
сервиса определяется именно этой командой,

00:44:27.219 --> 00:44:35.584
естественно она кем-то утверждается, но как
предложение, она исходит из самой команды.

00:44:35.974 --> 00:44:40.247
Поэтому это такое хаотичное явление,
здесь нет никакой логики и некоторые сервисы

00:44:40.271 --> 00:44:48.095
правильно пишутся, например, Amazon EC2
или, например, Amazon Lightsail, а другие

00:44:48.119 --> 00:44:56.021
сервисы начинаются с AWS, такие AWS Lambda,
AWS Fargate и так далее. Мы сейчас не будем

00:44:56.045 --> 00:45:02.947
останавливаться подробно на каждом из этих
сервисов, потому что у нас будет возможность

00:45:02.971 --> 00:45:09.208
с ними познакомиться на следующих лекциях
более подробно так, чтобы это лучше для

00:45:09.232 --> 00:45:12.937
вас запомнилось. Здесь основная идея была в
том, что опять же, в зависимости от вашей

00:45:12.961 --> 00:45:23.059
необходимости для бизнеса, вы подбираете
нужный для вас сервис. Для успешной сдачи экзамена

00:45:23.083 --> 00:45:29.944
AWS Certified Cloud Practitioner, вам нет
необходимости знать все двести сервисов AWS.

00:45:30.604 --> 00:45:36.438
Для того чтобы успешно сдать экзамен,
вам достаточно знать какую-то

00:45:36.462 --> 00:45:42.031
определённую часть из групп сервисов,
указанных на слайде.

00:45:42.055 --> 00:45:48.066
Это ровно те группы сервисов и сервисы,
которые мы будем рассматривать

00:45:48.090 --> 00:45:55.102
на нашем курсе. Я вам рекомендую это
видео поставить на паузу и этот

00:45:55.126 --> 00:46:00.160
слайд внимательно один два раза прочитать.
Да, вы многое не поймёте,

00:46:00.184 --> 00:46:06.218
но как минимум глаза начнут привыкать
к названиям сервисов и меньше

00:46:06.242 --> 00:46:12.594
уже будет стресса от того, что слишком
много чего нового и на следующей

00:46:12.618 --> 00:46:18.334
лекции, возможно, в каком-то смысле,
будет легче для освоения.

00:46:20.374 --> 00:46:24.950
Давайте остановимся теперь на том,
как же взаимодействовать с этим

00:46:24.974 --> 00:46:30.255
огромным количеством сервисов у облачного
 провайдера. Всего существует три

00:46:30.279 --> 00:46:38.243
варианта: первый – это AWS Management Console.
Второе – это AWS Command Line Interface (AWS CLI)

00:46:38.267 --> 00:46:45.720
или командная строка. Третье – это Software
development kits (SDKs), это библиотека,

00:46:45.744 --> 00:46:52.706
которую вы подключаете, когда вы работаете
с определённым высокоуровневым языком

00:46:52.730 --> 00:46:56.831
программирования и работаете с этой
библиотекой, а эта библиотека делает

00:46:56.855 --> 00:47:00.604
соответствующие вызовы в облако для того,
чтобы выполнить ту или иную операцию.

00:47:01.174 --> 00:47:09.917
Например, если мы хотим поднять один сервер,
чтобы это сделать в AWS Management Console,

00:47:09.941 --> 00:47:17.149
будет отдельное Демо, но я сейчас вкратце расскажу,
чтобы вы поняли различия. Вы открываете,

00:47:17.173 --> 00:47:25.538
логинетесь в веб-сайте, это и есть ваша консоль.
Там находите в списке, либо пишете в поисковой

00:47:25.562 --> 00:47:31.692
строке Amazon EC2. Открывается сервис Amazon EC2,
там нажимаете на кнопку Create instance,

00:47:31.716 --> 00:47:38.828
открывается мастер создания инстанса и вы
вводите необходимые параметры для его создания.

00:47:38.852 --> 00:47:43.963
Проходите через один или несколько шагов, т.е.
страниц, заполняете параметры и в итоге этот

00:47:43.987 --> 00:47:51.099
сервис у вас появляется и там же в сервисе
Amazon EC2, если вы откроете вкладку со списком

00:47:51.123 --> 00:47:58.234
инстансов, серверов, которые у вас есть, вы его
там увидите, т.е. он будет создан, все есть.

00:47:59.284 --> 00:48:06.353
Как это сделать на стороне AWS Command Line
 Interface, командной строки, вы находите

00:48:06.377 --> 00:48:13.105
какая командная строка, какая команда вам
 нужна, в нашем случае это будет AWS,

00:48:13.129 --> 00:48:19.683
это общее название, пробел, EC2, пробел,
 Create instance, и задаёте здесь же,

00:48:19.707 --> 00:48:26.780
либо JSON, либо через аргументы в этой же
строке, те параметры, которые нужны для

00:48:26.804 --> 00:48:33.594
создания инстанса. Нажимаете Enter, эта команда
 уходит и команда вызывает нужный API,

00:48:33.618 --> 00:48:41.010
и этот API создаёт вам инстанс, т.е.
все то, что вы проделываете в консоли и то,

00:48:41.034 --> 00:48:47.821
что вы это написали как одну команду,
что тот, что этот, они идут в одно место,

00:48:47.845 --> 00:48:55.154
они вызывают AWS API конкретного сервиса
 и конкретную операцию по созданию сервера.

00:48:55.714 --> 00:49:02.279
Теперь, когда мы говорим про SDKs – это,
как я ранее сказал, библиотека, например, если

00:49:02.303 --> 00:49:09.788
вы работали с языком программирования Python, то там
есть библиотеки, вы подключаете библиотеки, какие-то

00:49:09.812 --> 00:49:13.405
библиотеки сторонние, какие-то
 уже есть предустановленные,

00:49:13.429 --> 00:49:18.780
и вы можете с ним работать для того,
чтобы, например, работать с датами,

00:49:18.804 --> 00:49:30.287
 с файлами, с операционной системой,
с картинками. Теперь то же самое, есть специально

00:49:30.311 --> 00:49:38.694
разработанная библиотека, Boto3 для языка
Python, чтобы вы могли взаимодействовать

00:49:38.718 --> 00:49:42.812
с облачным провайдером AWS.
Как это происходит: вы подключаете библиотеку,

00:49:42.836 --> 00:49:47.586
например, в Python, это Import Boto3
и дальше вы создаёте

00:49:47.610 --> 00:49:57.828
сессию boto3.client название сервиса и сохраняете
в переменной этот объект, этот объект это и есть ваш

00:49:57.852 --> 00:50:04.804
клиент, через этого клиента вам становятся
доступны в зависимости от выбранного сервиса те

00:50:05.194 --> 00:50:09.655
или иные операции. Фактически, вы пишете код,
какую-то сложную логику, и в

00:50:09.679 --> 00:50:12.719
этой сложной логике вы можете
вызвать, например, то же самое

00:50:12.743 --> 00:50:15.494
создать/поднять инстанс для того,
чтобы с ним потом что-то

00:50:15.518 --> 00:50:21.269
сделать и когда вы запускаете этот код,
он у вас поднимает этот сервер.

00:50:21.293 --> 00:50:30.283
Теперь, ещё один важный момент то, что библиотеки,
т.е. SDK существуют не только для одного языка

00:50:30.307 --> 00:50:33.121
программирования, а для нескольких,
для многих популярных.

00:50:33.145 --> 00:50:38.958
Какие языки поддерживаются, вам
как задание, да вы можете

00:50:38.982 --> 00:50:43.457
сейчас поставить на паузу
это видео и попытаться сделать

00:50:43.481 --> 00:50:48.364
запрос в Гугл, либо в любом другом поисковике,
такой, чтобы вам открылась страница,

00:50:48.388 --> 00:51:00.525
какие языки программирования поддерживаются
в SDK. Окей, я надеюсь у вас получилось это сделать,

00:51:00.549 --> 00:51:08.136
у кого получилось молодцы, у кого не получилось,
то мы ещё подобное будем проделывать на демо-сессиях.

00:51:08.160 --> 00:51:12.649
Хорошо, мы разобрали, я надеюсь,
вам стало понятно, чем

00:51:12.673 --> 00:51:16.746
отличается консоль от командной
строки и чем отличается SDK.

00:51:16.956 --> 00:51:27.694
Вы как начинающие облачные инженеры, облачные
специалисты в определённых пропорциях будете

00:51:27.718 --> 00:51:34.305
использовать каждый из них по мере продвижения
 по карьерной лестнице, например, сейчас

00:51:34.329 --> 00:51:40.216
представьте, что вы Junior специалисты, или даже
 до Junior, стажёры. Как пройдёте этот курс

00:51:40.240 --> 00:51:45.664
можно вас назвать Junior специалистами, после,
получая больше опыта, вы станете Middle, Senior и

00:51:45.688 --> 00:51:59.540
дальше. В зависимости от того, как вы будете расти,
время, проведённое с каждым из вариантов

00:51:59.564 --> 00:52:02.341
взаимодействия с AWS, будет меняться, давайте
я поясню. Когда вы только-только начинаете,

00:52:02.365 --> 00:52:08.835
вам важно понять и представить у себя в голове,
как этот сервис выглядит, какие у него

00:52:08.859 --> 00:52:16.396
возможности есть, и чтобы наглядно это посмотреть,
правильней использовать AWS Management Console.

00:52:16.786 --> 00:52:21.208
Я так предполагаю, что 90% времени,
когда вы будете работать

00:52:21.232 --> 00:52:25.654
с облаком, вначале вы будете
работать в консоли, остальные

00:52:25.678 --> 00:52:30.253
по 5% это командная строка и SDK.
По мере того, как вы будете расти,

00:52:30.277 --> 00:52:39.239
чуть позже, вы потихоньку будете наращивать
долю времени, когда вы взаимодействуете с облаком,

00:52:39.263 --> 00:52:43.702
либо с командной строкой, либо с SDK
для автоматизации вашей работы.

00:52:43.726 --> 00:52:48.280
Таким образом, вам не нужно уже
самостоятельно ходить и вручную по

00:52:48.304 --> 00:52:53.858
одному создавать ресурсы в облаке,
а вы будете использовать,

00:52:53.882 --> 00:53:00.879
либо набор командных строк,
команд в командной строке,

00:53:00.903 --> 00:53:05.580
извиняюсь за тавтологию, и запускать
 их разово, для того чтобы

00:53:05.604 --> 00:53:08.903
сделать какую-то операцию,
не единичную, не атомарный,

00:53:08.927 --> 00:53:12.226
а какую-то более-менее сложную.
Более продвинутый вариант,

00:53:12.250 --> 00:53:17.738
допустим, вы пишете какое-то приложение,
которое использует облако.

00:53:17.762 --> 00:53:23.571
В этом случае, возможностей командной строки может
быть недостаточно, она идеально подходит для

00:53:23.595 --> 00:53:28.276
автоматизации вашей работы,
если вы системный администратор.

00:53:28.726 --> 00:53:35.315
Если же вы больше разработчик, то, скорее
 всего, ваш потенциал умение программировать на

00:53:35.339 --> 00:53:42.308
более высокоуровневом языке программирования
раскроет именно SDK. Как разработчик вы будете

00:53:42.332 --> 00:53:49.452
больше времени проводить с ним, писать более
сложный код и таким образом, взаимодействовать с

00:53:49.476 --> 00:53:56.597
облаком. По ходу количество времени, когда
вы используете консоль максимально минимизируется,

00:53:56.621 --> 00:54:03.266
допустим, я по себе скажу, вначале
использовал консоль очень много, а сейчас я открываю

00:54:03.290 --> 00:54:09.935
консоль только тогда, когда мне нужно
изучить какой-то новый сервис, я открываю, смотрю

00:54:09.959 --> 00:54:16.795
как выглядит, понимаю, что он может делать,
представляю у себя в голове и дальше уже мне

00:54:16.819 --> 00:54:23.656
легче использовать этот сервис в командной
строке или больше там, где я работаю, это SDK.

00:54:26.716 --> 00:54:31.601
Хорошо, мы добрались до конца третьей
секции нашей сегодняшней сессии.

00:54:31.625 --> 00:54:36.510
Давайте пройдёмся по основным моментам.
Первое – это что такое AWS.

00:54:36.534 --> 00:54:41.104
AWS – это безопасная облачная
 платформа, которая

00:54:41.128 --> 00:54:46.251
объединяет большое количество
сервисов, которые, в свою очередь,

00:54:46.275 --> 00:54:51.044
помогают вам создавать и работать
 с IT ресурсами всех возможных видов.

00:54:51.068 --> 00:54:56.223
 Следующее, это то, что у нас
сервисы объединены в различные

00:54:56.247 --> 00:55:01.329
группы и в зависимости от ваших
бизнес потребностей, вы подбираете

00:55:01.353 --> 00:55:05.809
нужную группу, в нужной группе
подходящий сервис и с ним работаете.

00:55:05.833 --> 00:55:10.534
Все сервисы AWS комбинируются
между собой для того,

00:55:10.558 --> 00:55:15.259
чтобы помочь вам построить IT-инфраструктуру
 абсолютно любой сложности.

00:55:15.283 --> 00:55:26.744
Последнее – это то, что у нас есть три варианта
взаимодействия с облаком: это AWS Management Console.

00:55:26.768 --> 00:55:30.559
 Второе – командный интерфейс, командная
строка, AWS Command Line Interface (AWS CLI).

00:55:30.583 --> 00:55:35.556
Третье – это Software development kits (SDKs),
т.е. библиотека,

00:55:35.580 --> 00:55:40.241
которую вы подключаете внутри
вашего языка программирования

00:55:40.265 --> 00:55:44.926
и можете с ним таким образом
взаимодействовать внутри кода.

00:55:48.076 --> 00:55:56.550
Мы добрались до последней части нашей сессии первого
модуля - AWS Cloud Adoption Framework (AWS CAF).

00:55:56.574 --> 00:56:08.784
Для сдачи экзамена подробно знать, что это
такое вам не нужно. Это нужно будет вам в будущем,

00:56:08.808 --> 00:56:15.926
когда вы начнёте работать, также когда вы
 станете архитекторами, либо техническими

00:56:15.950 --> 00:56:20.713
директорами в компаниях,
у которых IT-инфраструктура в

00:56:20.737 --> 00:56:26.220
облаке или если компания сейчас
находится локально и захочет в будущем

00:56:26.244 --> 00:56:35.718
 переместиться в облако. Таким образом, это тот
документ, который вам помогает максимально раскрыть

00:56:35.742 --> 00:56:45.128
те возможные моменты, которые надо учитывать при
переходе с локальной IT-инфраструктуры в облачную.

00:56:45.152 --> 00:56:54.315
Когда мы говорим про переход с локальной
IT-инфраструктуры в облако, мы должны рассмотреть

00:56:54.339 --> 00:57:01.949
весь этот процесс с нескольких сторон.
Выделяют две группы: первая – это

00:57:01.973 --> 00:57:04.036
со стороны бизнеса,
вторая – это со стороны технологии.

00:57:04.456 --> 00:57:12.221
Когда мы говорим про бизнес, она состоит
из трёх частей, это собственно сам бизнес, ваши люди,

00:57:12.245 --> 00:57:20.678
специалисты, которые работают в вашей компании,
и governance, т.е. управление, руководство. Когда мы

00:57:20.702 --> 00:57:25.801
говорим про технологии, мы рассматриваем платформу,
безопасность и operations, т.е. операционную

00:57:25.825 --> 00:57:34.924
деятельность. На следующих слайдах мы поговорим
более подробно о каждой из этой перспективе т.е.

00:57:34.948 --> 00:57:42.629
с определённой стороны и разберём её на более
мелкие части, чтобы вам было понятнее, о чем мы

00:57:42.653 --> 00:57:53.170
говорим. В тот момент, когда команда, компания учтёт
все моменты, которые могут возникнуть со стороны

00:57:53.194 --> 00:58:01.293
шести этих перспектив, можно говорить о том,
что вероятность того, что компания успешно перейдёт

00:58:01.317 --> 00:58:09.416
в облако и максимально получит ту выгоду, те
преимущества, которые облако даёт, будет увеличена.

00:58:12.046 --> 00:58:21.307
Первая перспектива, т.е. взгляд, угол, с которого
мы смотрим, это со стороны самого бизнеса. Здесь

00:58:21.331 --> 00:58:30.591
выделяют четыре части: это финансы, IT стратегия,
потом реализация вот этих преимуществ, которые мы

00:58:30.615 --> 00:58:40.014
получаем и риски, с которыми работает бизнес. Что
здесь важно? Важно то, чтобы сам процесс, инициатива

00:58:40.038 --> 00:58:50.008
перехода в облако, максимально поддерживалась
и поощрялась высшим руководством, т.е. CEO,

00:58:50.032 --> 00:58:59.550
коммерческий директор, технический директор, потом
бизнес менеджера, финансовые менеджера, любые эти

00:58:59.574 --> 00:59:09.092
должности, которые так или иначе влияют на бизнес,
должны принять вот эту инициативу и соответствующе

00:59:09.116 --> 00:59:19.062
приоритезировать у себя, в своих планах эти моменты
и учитывать эти изменения. Таким образом, направление

00:59:19.086 --> 00:59:28.936
самого бизнеса должно быть в одном направлении, куда
смотрят IT, в нашем случае IT переходит в облако.

00:59:31.906 --> 00:59:40.062
Когда мы смотрим на процесс перехода в облако
со стороны People perspective, т.е. со стороны

00:59:40.086 --> 00:59:43.738
людей, специалистов, которые работают
в этой компании, выделяют

00:59:43.762 --> 00:59:49.159
пять подпунктов: это Resource management,
Incentive management – это стимул,

00:59:49.183 --> 00:59:57.092
управление стимулами, мотивации, Career management,
соответственно, при построении карьеры

00:59:57.116 --> 01:00:06.435
 весь этот процесс, тренинги и организационные
изменения. Если говорить, опять же, вкратце,

01:00:06.459 --> 01:00:14.567
большая работа будет проделана со стороны
HR-департамента. Он должен понимать, что мы

01:00:14.591 --> 01:00:23.629
переходим в облако и сделать со своей стороны
определённые действия, а именно, убедиться, что у

01:00:23.653 --> 01:00:31.889
нас есть достаточные навыки у персонала, чтобы
успешно быть в облаке. Если же нет, то подготовить и

01:00:31.913 --> 01:00:40.822
устроить процесс подготовки, тренировки, взращивания
этих специалистов, которые умеют работать с облаком.

01:00:40.846 --> 01:00:47.839
Другой момент, специалисты бывают разные,
например, не все из специалистов захотят, по тем

01:00:47.863 --> 01:00:54.856
или иным причинам, переходить в облако и,
в целом, могут уволиться. Это потери со стороны

01:00:54.880 --> 01:01:04.874
HR-департамента, поэтому они должны эти
моменты проговаривать, учитывать и соответствующе

01:01:04.898 --> 01:01:12.891
обрабатывать, но вся идея в том, что со
стороны HR-департамента должны быть определённые

01:01:12.915 --> 01:01:23.200
задачи, приоритезированные в сторону увеличения,
которые максимально подготавливают как себя,

01:01:23.224 --> 01:01:31.419
сам департамент, так и весь штат, весь
персонал компании, для успешного перехода в облако.

01:01:31.443 --> 01:01:37.183
Если, грубо говоря, люди не будут готовы к
переходу в облако, то ничего не произойдёт.

01:01:37.207 --> 01:01:45.676
Поэтому, с точки зрения людей, специалистов,
нужна проработка и подготовка к этому переходу.

01:01:47.836 --> 01:01:57.860
Следующее - это угол обзора со стороны
управления, руководства. Выделяют

01:01:57.884 --> 01:02:01.646
четыре подпункта, которые вы можете
видеть на слайде. Идея в том,

01:02:01.670 --> 01:02:05.476
что высшее руководство должно учитывать
процесс перехода в облако

01:02:05.500 --> 01:02:11.306
и внести соответствующие правки в
управление портфолио, управление

01:02:11.330 --> 01:02:17.154
программами и проектами внутри компании,
которые на текущий момент есть.

01:02:17.178 --> 01:02:23.002
 Учитывать процесс перехода при
расчёте бизнес метрик, метрик

01:02:23.026 --> 01:02:29.514
производительности и соответствующе делать
 выводы, и, в целом, готовиться

01:02:29.538 --> 01:02:36.026
к этому процессу, учитывать выгоды,
которые они получают в своих планах.

01:02:38.266 --> 01:02:46.586
Мы переходим к следующей части,
это углы обзора к процессу перехода со

01:02:46.610 --> 01:02:53.930
стороны технологии, технические моменты.
В нашем случае, первое – это Platform perspective,

01:02:53.954 --> 01:03:03.619
в котором есть шесть подпунктов. Идея в том, что
IT департамент уже в процессе перехода должен

01:03:03.643 --> 01:03:16.347
понимать как у них будет происходить запрос новых
вычислительных мощностей, как будет организована

01:03:16.371 --> 01:03:25.076
сеть, как будет организовано хранение
базы данных и вот, в целом, изменится

01:03:25.100 --> 01:03:32.990
ли архитектура в облаке. Плюс нужно
учитывать особенности самого приложения,

01:03:33.014 --> 01:03:37.260
которое вы разрабатываете.
Некоторые моменты можно намного улучшить

01:03:37.284 --> 01:03:42.751
в облаке, некоторые моменты просто
 так взять и перенести не получится,

01:03:42.775 --> 01:03:46.243
поэтому эти моменты надо учитывать.
Этот процесс не так вот в один день,

01:03:46.267 --> 01:03:49.643
на следующий день вы на работу пришли
и все, вы все в облаке. На самом

01:03:49.667 --> 01:03:56.043
деле, этот процесс может затягиваться
годами. Поэтому IT департамент

01:03:56.067 --> 01:04:02.489
при планировании будущих задач,
или задач, которые в процессе, должны

01:04:02.513 --> 01:04:08.934
учитывать, что они будут построены и,
в итоге, перенесены, либо сразу в

01:04:08.958 --> 01:04:15.018
облаке разработаны, и должны учитывать
эти моменты и не делать такой

01:04:15.042 --> 01:04:21.826
функционал, который потом самим же
создаст проблемы при переходе в облако.

01:04:25.306 --> 01:04:35.233
Следующий пункт, со стороны технологии –
это Security, безопасность, выделяют

01:04:35.257 --> 01:04:47.642
пять подпунктов, т.е. отдел техподдержки, отдел
администрирования IT-инфраструктурой должны

01:04:47.666 --> 01:04:53.390
проработать моменты с точки зрения
 безопасности и определить, как

01:04:53.414 --> 01:04:59.867
будут выдаваться доступы, доступы к пользователям,
группам, приложениям в облаке,

01:04:59.891 --> 01:05:10.635
как будет происходить определение
каких-то угроз, которые могут поступать, как будет

01:05:10.659 --> 01:05:18.017
обеспечиваться безопасность инфраструктуры,
как будет происходить защита данных и как, в целом,

01:05:18.041 --> 01:05:23.662
будет происходить процесс обработки инцидентов,
т.е. инциденты – это неотъемлемая

01:05:23.686 --> 01:05:32.178
часть жизненного цикла любого IT продукта, проблемы
всегда возникают и задача компании – проработать

01:05:32.202 --> 01:05:35.691
этот процесс максимально гладко,
для того чтобы инциденты быстро

01:05:35.715 --> 01:05:45.616
находили тех специалистов, которые должны разрешить
инцидент и они успешно выполнялись и исправлялись.

01:05:49.816 --> 01:05:58.086
Следующий и последний пункт с точки зрения
технологии – это Operations, т.е. операционная

01:05:58.110 --> 01:06:07.132
деятельность, то что происходит каждый раз,
каждый день. Сюда входят семь различных подпунктов.

01:06:07.156 --> 01:06:15.703
Первое – это как будет происходить в облаке
мониторинг, мониторинг вашей IT-инфраструктуры,

01:06:15.727 --> 01:06:25.225
мониторинг приложений, которые есть в этой
инфраструктуре, как происходит учёт IT ресурсов,

01:06:25.249 --> 01:06:33.681
которые у вас есть, как учитываются изменения этих
IT ресурсов, как будет происходить отчётность и

01:06:33.705 --> 01:06:43.180
аналитика, с точки зрения IT-инфраструктуры и,
в целом, этих инструментов. Также следует определить

01:06:43.204 --> 01:06:55.922
IT сервис каталог, это те сервисы в облаке,
которые допустимы для использования внутри вашей

01:06:55.946 --> 01:07:00.376
компании, почему, в каком объёме и так далее,
эти моменты тоже должны быть проработаны.

01:07:02.746 --> 01:07:10.900
На этом мы завершаем нашу последнюю секцию.
Давайте остановимся на основных моментах.

01:07:10.924 --> 01:07:18.992
В облаке AWS есть специально подготовленный
документ, который позволяет вам учитывать все те

01:07:19.016 --> 01:07:27.596
проблемные моменты, которые могут возникнуть при
переходе в облако. Выделяют два направления, это с

01:07:27.620 --> 01:07:36.199
точки зрения бизнеса и технологии, каждая из них
состоит из трёх частей. Мы, в итоге, разобрали

01:07:36.223 --> 01:07:43.886
шесть углов обзора на процесс перехода более
подробно, что туда входит и что должно быть сделано,

01:07:43.910 --> 01:07:54.596
фактически с каждого департамента, не только IT
департамента внутри компании, для того, чтобы успешно

01:07:54.620 --> 01:08:04.222
перейти в облако. Ещё раз напоминаю, что именно
эта тема AWS Cloud Adoption Framework предоставляется

01:08:04.246 --> 01:08:09.676
вам в ознакомительном виде, вы должны понимать,
что такое, в целом, AWS Cloud Adoption Framework.

01:08:10.006 --> 01:08:16.057
Может простейший вопрос прийти на AWS экзамене,
но более углублённые вопросы вот

01:08:16.081 --> 01:08:22.133
в этом направлении не придут. Поэтому вы
теперь знаете, что есть такой документ,

01:08:22.157 --> 01:08:28.058
в будущем, когда вы начнёте работать как
облачный инженер, впоследствии будете

01:08:28.082 --> 01:08:33.753
расти по карьерной лестнице и когда
станете либо старшим специалистом,

01:08:33.777 --> 01:08:40.114
 IT архитектором, может быть, техническим
директором и вам понадобится перейти в облако,

01:08:40.138 --> 01:08:46.322
то это тот документ, который вам поможет.
Этот документ на самом деле достаточно

01:08:46.346 --> 01:08:52.454
большой, объёмный. Вы его полностью
проработаете, обработаете и соответственно

01:08:52.478 --> 01:08:58.586
всей компанией вместе будете двигаться
для того, чтобы успешно перейти в облако.

01:09:00.466 --> 01:09:09.179
На этом мы завершаем нашу сессию. Давайте пройдёмся
по самым основным моментам. Первое – это то, что мы

01:09:09.203 --> 01:09:18.430
разобрали какие бывают вычислительные модели,
модели предоставления облачного сервиса. Дальше,

01:09:18.454 --> 01:09:27.637
разобрали 6 преимуществ облачных технологий. После
этого мы определили, что такое AWS, какие у него есть

01:09:27.661 --> 01:09:36.845
сервисы, группы сервисов. В самом конце, в
четвёртой секции, мы разобрали что такое

01:09:36.869 --> 01:09:41.847
AWS Cloud Adoption Framework, т.е.
это тот документ, который всячески

01:09:41.871 --> 01:09:46.332
помогает при переходе с локальной
IT-инфраструктуры в облако.

01:09:46.356 --> 01:09:55.561
Здесь представлены все ссылки, которые вам могут
понадобиться. Вы можете получить дополнительную

01:09:55.585 --> 01:10:04.701
более подробную информацию. На этом я завершаю
 эту сессию. Большое вам спасибо, надеюсь, вы

01:10:04.725 --> 01:10:09.489
сегодня узнали что-то новое и вы стали
ещё ближе к успешной сдаче AWS экзамена.

01:10:09.513 --> 01:10:14.276
Увидимся на следующих занятиях. До свидания!