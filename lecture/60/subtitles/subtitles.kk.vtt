WEBVTT

00:00:00.000 --> 00:00:05.240
Қайырлы күн, құрметті студенттер! Сіздерді
бүгінгі дәрісте көргеніме қуаныштымын.

00:00:05.240 --> 00:00:09.520
Бүгін біз Networking пен Content
Delivery туралы сөйлесеміз.

00:00:09.520 --> 00:00:15.880
Сонымен, бастайық.
Бүгінгі дәріс алты бөлімге бөлінген.

00:00:15.880 --> 00:00:21.880
Бірінші бөлімде желілердің негіздерін
және негізгі ұғымдарды қарастырамыз.

00:00:21.880 --> 00:00:28.880
Әрі қарай, келесі үш бөлімде біз Amazon
Virtual Private Cloud сервисі туралы сөйлесеміз,

00:00:28.880 --> 00:00:39.400
көбінесе Amazon VPC деп кездеседі.
VPC networking, VPC security тақырыптарын

00:00:39.400 --> 00:00:44.000
қозғаймыз. Соңғы екі тақырып –
екі бөлек сервис,

00:00:44.000 --> 00:00:52.400
біріншісі – Amazon Route 53 сервисі,
екіншісі – Amazon CloudFront сервисі.

00:00:52.400 --> 00:00:55.400
Біз бірінші бөлімді бастаймыз, бұл желілердің
негіздері, яғни Networking basics.

00:00:55.400 --> 00:01:02.400
Біз сізге келесі бөлімдерді, атап айтқанда AWS
жүйесінде желі құру туралы айтатын бөлімді,

00:01:02.400 --> 00:01:06.512
әсіресе Amazon VPC сервисін түсінуді жеңілдету
үшін желі негіздерін қарастырамыз.

00:01:06.524 --> 00:01:10.400
Желі дегеніміз не?
Желі – бұл ақпарат алмасу үшін

00:01:10.400 --> 00:01:19.400
бір-бірімен байланысқан екі немесе
одан да көп клиенттік машиналар.

00:01:19.400 --> 00:01:28.400
Желіні subnets деп аталатын логикалық
бөліктерге бөлуге болады.

00:01:28.400 --> 00:01:36.400
Машиналарды бір-біріне қосу үшін
бізге желілік жабдық қажет.

00:01:36.400 --> 00:01:41.400
Switch немесе router желілік
жабдық ретінде әрекет ете алады.

00:01:41.400 --> 00:01:52.400
Желідегі әрбір машинаның белгілі бір желідегі
құрылғыны анықтайтын бірегей IP-адрес болады.

00:01:52.400 --> 00:02:03.400
IP-адрес – төрт бөліктен тұратын ондық санақ
жүйесіндегі белгілі бір сандық белгі.

00:02:03.400 --> 00:02:14.400
Содан кейін, сіз көріп отырғандай,
машина екілік санақ жүйесіне түрлендіріледі,

00:02:14.400 --> 00:02:22.400
осылайша, бағдарлама осы IP-адреспен
ең төменгі деңгейде жұмыс істейді.

00:02:22.400 --> 00:02:29.400
Біз оны ондық санақ жүйесінде көреміз, ал
мысал ретінде сіз 192.0.2.0 көріп отырсыз.

00:02:29.400 --> 00:02:42.400
IP-адрес ішіндегі әрбір бөлім 0-ден 255-ке
дейінгі мәндерді қабылдайтын қандай да бір

00:02:42.400 --> 00:02:52.400
сандар, яғни 256 бірегей мән. 256 – 2-нің
8-ші дәрежесі, ендеше екілік

00:02:52.400 --> 00:03:02.400
санақ жүйесінде нөлден 255-ке дейінгі
сандарды белгілеу үшін 8 бит бөлу керек.

00:03:02.400 --> 00:03:10.400
8 рет нөлден (00000000) бастап, 8 рет
бірмен (11111111) аяқталатын сандар.

00:03:10.400 --> 00:03:24.400
Осылайша, бинарлық форматтағы IP-адрес
8-ді 4-ке көбейткенде, яғни 32 битке тең.

00:03:24.400 --> 00:03:36.400
Біз IP-адрес 32 биттен тұрады деп айттық.
Бұл IPv4-адрес деп аталады.

00:03:36.400 --> 00:03:43.400
Сондай-ақ, бізде IP-адрестің тағы бір
түрі – IPv6-адрес бар, ол 128 биттен тұрады,

00:03:43.400 --> 00:03:52.400
және ол белгілі бір желі үшін одан да
көп бірегей IP-адрестер жасай алады.

00:03:52.400 --> 00:04:03.841
IPv6-адресі 8 топ түрінде ұсынылады.
Әр топта әріптер мен сандар болуы мүмкін.

00:04:03.853 --> 00:04:13.184
Біз бұл адресті он алтылық санақ жүйесінде
көреміз және әр топ 16 биттен тұрады

00:04:13.196 --> 00:04:18.400
және нөлден бастап FFFF-ке дейінгі
мәнді қабылдай алады.

00:04:18.400 --> 00:04:22.400
Тағы да айтып өтейін, бұл
он алтылық санақ жүйесіне тән.

00:04:22.400 --> 00:04:31.400
Жұмыс барысында сіз тікелей
IPv6-адрестерді жиі кездестірмейсіз.

00:04:31.400 --> 00:04:37.400
Сіз негізінен IPv4-адреспен жұмыс жасайсыз.
Сондықтан оны толығырақ қарастырайық.

00:04:37.400 --> 00:04:49.400
Жергілікті желіде мүмкін IPv4-адрес мәндерінің
тізімін анықтау үшін біз CIDR деп аталатын

00:04:49.400 --> 00:04:57.400
блокты қолданамыз. CIDR – толығымен
Classless Inter-Domain Routing деп аталады.

00:04:57.400 --> 00:05:09.400
Ол келесі форматта жазылады: бұл бастапқы,
яғни IPv4 форматтағы ең алғашқы IP-адрес,

00:05:09.400 --> 00:05:19.400
содан кейін слэш және 0-ден 32-ге дейінгі
мәнді қабылдай алатын қандай да бір сан.

00:05:19.400 --> 00:05:30.400
Бұл бізде қанша бит бекітілгенін көрсетеді.
IPv4-адресі 32 биттен тұрады. Сондықтан,

00:05:30.400 --> 00:05:39.729
егер CIDR блокта 24 жазылғанын байқасақ,
бұл 32 биттің 24-і бекітілген

00:05:39.741 --> 00:05:44.400
және оны өзгерту мүмкін
емес дегенді білдіреді.

00:05:44.400 --> 00:05:52.400
Осылайша, қалған 8 бит өзгеруі мүмкін.
Бұл 8 бит – бірегей IP-адрестердің

00:05:52.400 --> 00:06:00.400
саны 2-нің 8 дәрежесі
256-ға тең болмақ.

00:06:00.400 --> 00:06:11.400
Осылайша, слайдта көрсетілген біздің CIDR блокта
IP-адрес нақты 256 бірегей мәнді қабылдай алады.

00:06:11.400 --> 00:06:19.400
Бұл желіге тиесілі алғашқы
IP-адрес – 192.0.2.0.

00:06:19.400 --> 00:06:26.400
Осылайша, өзгере алатын соңғы бөлік,
0-ден әрі қарай 0.1.2.3.4

00:06:26.400 --> 00:06:35.400
деп жүре береді, яғни ең соңғы IP-адрес
192.0.2.255 болады. Жақсы.

00:06:35.400 --> 00:06:43.400
Бұл түсінікті деп ойлаймын және материалды
бекіту үшін біз келесі тапсырманы орындайық.

00:06:43.400 --> 00:06:52.400
Бізде бірінші бөлігі сәйкес келетін
CIDR блок бар деп елестетіп көрейік,

00:06:52.400 --> 00:07:02.400
яғни 192.0.2.0, ал 24 орнына /16
болады. Бұл видеоны тоқтатып,

00:07:02.400 --> 00:07:09.400
осындай CIDR блогына сәйкес осы желіде қанша
бірегей адрестер болатынын есептеп көрейік.

00:07:12.400 --> 00:07:23.400
Жарайды, менің ойымша, барлығыңыз жауабын
таптыңыз. Дұрыс жауап – 65536.

00:07:23.400 --> 00:07:36.400
Біз бұл санға қалай жеттік? Біздің
CIDR блогымыз 192.0.2.0/16 екенін айттық.

00:07:36.400 --> 00:07:44.400
Бұл 32 биттік IP-адрестің 16-сы
бекітілгенін білдіреді.

00:07:44.400 --> 00:07:50.400
Бұл дегеніміз, бізде flexible 16 бит
барын, яғни олар өзгере алатынын білдіреді.

00:07:50.400 --> 00:07:59.400
Біздің 16 бит – бұл 2-нің 16 дәрежесіне
тең бірегей IP-адрестер дегенді білдіреді.

00:07:59.400 --> 00:08:12.400
Егер біз 2-нің 16 дәрежесін санасақ, бұл 65536.
Жарайды, менің ойымша, енді сізге түсінікті болды.

00:08:12.400 --> 00:08:17.400
Тағы екі шекаралық
жағдайды қарастырайық.

00:08:17.400 --> 00:08:27.400
Бізде 192.0.2.0/32 типтегі
CIDR блок бар деп елестетіп көрейік.

00:08:27.400 --> 00:08:37.400
Тағы бір тапсырманы орындап, осы CIDR блокта
қанша IP-адрес бар екенін есептеуге тырысайық.

00:08:37.400 --> 00:08:42.400
Сіз видеоны тоқтата тұруыңызға болады.
Ал, мен сіздердің әрқайсыларыңыз

00:08:42.400 --> 00:08:47.400
дұрыс есептеп, дұрыс жауап
ала алдыңыз деп сенемін.

00:08:47.400 --> 00:08:58.400
Дұрыс жауап – 1. Мұнда /32 деп
аяқталатын CIDR блок бір машинаны анықтайды.

00:08:58.400 --> 00:09:06.400
Мұны қалай есептейсіз? /32 деп айтқан кезде,
бұл бізде 32 бит бекітілген дегенді білдіреді.

00:09:06.400 --> 00:09:12.227
Біздің IPv4-адресімізде
тек 32 бит болғандықтан,

00:09:12.239 --> 00:09:19.400
бізде қанша бірегей адрестер
бар екенін есептеу үшін

00:09:19.400 --> 00:09:26.400
біз 32-ден бекітілген
32 битті алып тастаймыз.

00:09:26.400 --> 00:09:32.400
32 - 32 = 0 болып шығады,
ал 2-нің 0 дәрежесі 1-ге тең.

00:09:32.400 --> 00:09:38.400
Осылайша, сіз Amazon-да жұмыс істеген
кезде, AWS Management Console-де

00:09:38.400 --> 00:09:45.400
белгілі бір IP-адресті көрсету
үшін сіз CIDR блок /32 екенін білесіз

00:09:45.400 --> 00:09:49.400
және сіз өзіңіздің IP-адресіңізді
сәйкесінше көрсетесіз.

00:09:49.400 --> 00:09:57.400
Екінші шекаралық жағдай, оны тапсырма
ретінде бермей, бірден жауап беріп көрейік.

00:09:57.400 --> 00:10:04.400
Бізде 0.0.0.0/0 CIDR блогы бар десек,
бұл жағдайда біз ең алғашқы

00:10:04.400 --> 00:10:10.400
IP-адрестен бастайтынымызды көреміз,
өйткені бізде бекітілген биттердің

00:10:10.400 --> 00:10:20.400
саны 0 және барлық биттер өзгеруі мүмкін,
яғни flexible күйінде тұрады.

00:10:20.400 --> 00:10:27.400
Бұл бізге осы желіде 2-нің 32 дәрежесіне
тең бірегей адрестер

00:10:27.400 --> 00:10:32.400
бар екенін көрсетеді және
бұл бүкіл интернетті білдіреді.

00:10:32.400 --> 00:10:39.400
Сондай-ақ, AWS Management Console-де сіз бүкіл
интернетке кіруге рұқсатты немесе интернетке

00:10:39.400 --> 00:10:46.400
дейін route бағыттауды немесе интернетке
кіруге тыйым салуды көрсету қажет болғанда,

00:10:46.400 --> 00:10:50.173
CIDR блогы ретінде сіз
әрқашан нүкте арқылы бөлінген

00:10:50.185 --> 00:10:54.400
барлық нөлдер слэш 0 деп көрсете
аласыз, сонда бұл Интернет болады.

00:10:54.400 --> 00:11:01.400
Келесі қарастырылатын модель,
мүмкін сіз оны өткен де шығарсыз,

00:11:01.400 --> 00:11:06.400
бұл OSI модель, яғни Open Systems
Interconnection Model. Бұл модельдің

00:11:06.400 --> 00:11:15.400
негізгі идеясы – ол деректердің желі арқылы
қалай берілетінін концептуалды түрде сипаттайды,

00:11:15.400 --> 00:11:21.400
яғни application-нан бастап,
бірліктер мен нөлдер тізбегі

00:11:21.400 --> 00:11:25.400
деңгейінде жұмыс істейтін физикалық
деңгейге дейін 7 деңгей бар.

00:11:25.400 --> 00:11:32.400
Application-ның ең жоғарғы деңгейі – HTTP, HTTPS
протоколдарын, т.б. пайдалана отырып жұмыс істеу.

00:11:32.400 --> 00:11:37.400
Осылайша, біз белгілі бір сайтқа
HTTP request сұраныс жасаған кезде,

00:11:37.400 --> 00:11:43.400
ол жоғарғы деңгейден ең төменгі
деңгейге дейін төмендейді,

00:11:43.400 --> 00:11:51.400
нәтижесінде бізден нөлдер мен
бірліктердің тізбегі біздің алушыға өтеді.

00:11:51.400 --> 00:11:59.400
Біздің бірліктер мен нөлдеріміздің тізбегі,
яғни біздің деректеріміз немесе сұранысымыз

00:11:59.400 --> 00:12:06.079
алушыға жеткенде, ол осы тізбектің
шифрын ажыратып, оқу, түсіну және

00:12:06.091 --> 00:12:13.400
қандай да бір хабарламамен жауап беру үшін
application-нің жоғарғы деңгейіне көтеріледі.

00:12:13.400 --> 00:12:17.400
Жауап сонымен қатар жоғарғы
деңгейден төменге қарай түседі

00:12:17.400 --> 00:12:21.400
және сізге келген бойда,
осы тізбекті оқып шығу үшін

00:12:21.400 --> 00:12:27.400
сіз ең төменгі деңгейден
ең жоғары деңгейге өтіп,

00:12:27.400 --> 00:12:31.400
сізге жіберілген жауапты
бастапқы түрінде оқи аласыз.

00:12:31.400 --> 00:12:37.400
Бұл ақпарат желінің қалай жұмыс істейтінін,
деректердің желі арқылы қалай ағып жатқанын

00:12:37.400 --> 00:12:43.400
және жалпы алғанда, Amazon VPC сервисінің
қалай жұмыс істейтінін түсіну үшін жеткілікті.

00:12:43.400 --> 00:12:51.400
Біз дәрістің екінші бөліміне көшеміз және
Amazon VPC сервисі туралы көбірек білетін боламыз.

00:12:51.400 --> 00:12:57.400
Amazon VPC – Amazon Virtual
Private Cloud деп оқылады.

00:12:57.400 --> 00:13:05.400
Бұл – бұлтта логикалық оқшауланған
желіні орнатуға мүмкіндік беретін сервис.

00:13:05.400 --> 00:13:15.400
Сіз осы желіні толығымен басқарып,
осы желіде ресурстар жасай аласыз.

00:13:15.400 --> 00:13:20.400
Сонымен қатар, сіз осы желідегі кез-келген
теңшелетін параметрлерді қолдана аласыз,

00:13:20.400 --> 00:13:24.400
сонымен қатар қауіпсіздіктің
бірнеше деңгейі бар,

00:13:24.400 --> 00:13:28.775
бұл Security Group және
Network Access Control Lists

00:13:28.787 --> 00:13:32.400
немесе жиі сіз Network ACLs
деп кездестіретін боласыз.

00:13:32.400 --> 00:13:42.400
Мұнда сіз VPC бұлтта қалай орналасуы мүмкін
екенін түсіндіретін диаграмманы көре аласыз.

00:13:42.400 --> 00:13:48.400
VPC тек бір AWS аккаунтта
орналаса алады.

00:13:48.400 --> 00:13:54.000
Сонымен қатар, VPC тек бір
аймақта толығымен орналасуы керек.

00:13:54.000 --> 00:14:02.400
Егер сізге бірнеше аймақты пайдалану қажет
болса, сізде әр аймақ үшін өз VPC-і болуы керек.

00:14:02.400 --> 00:14:08.400
Біз аймақ ішінде бірнеше availability
zone болуы мүмкін екенін білеміз.

00:14:08.400 --> 00:14:14.400
Осылайша, бір VPC бірнеше availability
zone-да болуы мүмкін.

00:14:14.400 --> 00:14:20.400
VPC біз бұрын айтқан
CIDR блокпен анықталады.

00:14:20.400 --> 00:14:29.400
Сондай-ақ, VPC ішінде біз бірнеше логикалық
топтарды жасай аламыз, олар subnets деп аталады.

00:14:29.400 --> 00:14:34.400
Subnets-тер де кішігірім
CIDR блокпен анықталады,

00:14:34.400 --> 00:14:47.400
және range, яғни subnet-тің IP-адресінің ықтимал
мәндері VPC-дің мүмкін мәндеріне кіру керек.

00:14:47.400 --> 00:14:56.400
Subnets екі түрлі болуы мүмкін.
Біріншісі – бұл private, екіншісі – public.

00:14:56.400 --> 00:15:04.400
Public – интернеттен қол жетімді subnets, ал
рrivate бұл интернеттен қолжетімсіз subnets.

00:15:04.400 --> 00:15:13.400
Мен VPC-де болуы мүмкін CIDR блоктар
мөлшері туралы бірнеше сөз айтқым келеді.

00:15:13.400 --> 00:15:22.400
Ондағы максималды өлшем – 65536 бірегей
IP-адрес, ол /16 CIDR блокқа тең деген сөз.

00:15:22.400 --> 00:15:32.400
Ең кішкентайлары – 16 IP-адрес.
CIDR блокта ол /28 түрінде жазылады,

00:15:32.400 --> 00:15:38.400
яғни 4 түрі flexible болуы мүмкін,
яғни өзгере алады.

00:15:38.400 --> 00:15:47.400
VPC-ге арналған CIDR блок туралы айтқан
кезде, осы CIDR блоктың өлшеміне,

00:15:47.400 --> 00:15:53.400
сондай-ақ бастапқы IP-адреске мұқият
және жауапкершілікпен қарау қажет.

00:15:53.400 --> 00:16:01.400
Себебі, VPC-де тағайындаған CIDR блокты
кейінірек өзгерту мүмкін емес.

00:16:01.400 --> 00:16:06.400
Сондықтан CIDR блокты өзгерту қажет болса,
жаңа VPC жасау керек болады.

00:16:06.400 --> 00:16:13.326
Егер VPC-де жұмыс істейтін ескі ресурстарыңыз
болса, сіз осы ресурстардың барлығын жаңа VPC-дің

00:16:13.338 --> 00:16:23.400
жаңа CIDR блогына ауыстыруға уақыт, күш,
ақша жұмсайсыз, осыны істейтін адам керек болады.

00:16:23.400 --> 00:16:35.400
Ал бұл өте қымбат болуы мүмкін, сондықтан VPC
өлшемін мейлінше артығымен алуды басты ереже

00:16:35.400 --> 00:16:41.400
деп біліңіз. Сонымен қатар, VPC-лер
бір-бірімен қиылыспайтынын әрқашан ұмытпаңыз.

00:16:41.400 --> 00:16:47.400
Егер VPC әртүрлі AWS аккаунтта
болса да, болашақта бір-біріне

00:16:47.400 --> 00:16:53.400
сәйкес келмейтін CIDR блоктарды жасауды
ұсынамын, өйткені AWS-та әртүрлі

00:16:53.400 --> 00:17:00.400
аккаунтардың VPC-ін бір-бірімен қосуға
көмектесетін сервистер бар.

00:17:00.400 --> 00:17:06.400
Егер бұл VPC-лардың CIDR блоктары қиылысса,
сіз оларды біріктіре алмайсыз,

00:17:06.400 --> 00:17:12.400
сондықтан әрқашан осы тұсқа қатты мән беріңіз.
Келесі мәселе subnet-тер туралы.

00:17:12.400 --> 00:17:21.400
Жоғарыда айтылғандай, subnet-тің CIDR блогы
VPC-дің CIDR блогының бөлігі болуы керек.

00:17:21.400 --> 00:17:27.400
Subnet-тің максималды өлшемі тұтас
VPC-дің өлшеміне тең болуы мүмкін.

00:17:27.400 --> 00:17:31.400
Осылайша, бұл VPC-де
тек бір subnet болады.

00:17:31.400 --> 00:17:37.400
Егер біз VPC ішінде бірнеше
subnet-тер жасасақ, бір VPC ішіндегі

00:17:37.400 --> 00:17:45.400
CIDR блоктар да бір-біріне
сәйкес келмейтініне көз жеткізуіміз керек.

00:17:48.400 --> 00:17:55.400
Үлкен не кіші көлемді болсын, CIDR блокты
жасаған кезде, AWS бұлтындағы VPC не subnet

00:17:55.400 --> 00:18:05.400
үшін бе, маңызды емес, AWS жүйелі түрде
пайдалану үшін 5 IP-адресті резервке қояды.

00:18:05.400 --> 00:18:18.400
Сіз CIDR блоктағы range-те ең бірінші IP-адрес
network address үшін сақталғанын көре аласыз,

00:18:18.400 --> 00:18:25.400
екіншісі internal communication үшін,
үшіншісі DNS resolution үшін,

00:18:25.400 --> 00:18:34.400
төртіншісі – болашақта пайдалану үшін, соңғысы
network broadcast address ретінде пайдаланылады.

00:18:34.400 --> 00:18:46.400
Осылайша, /24 өлшемі бар CIDR блок
үшін, яғни 256 бірегей адрес,

00:18:46.400 --> 00:18:55.400
және сіздің пайдалануыңыз үшін
қол жетімдісі – 256-5 = 251 IP-адрес.

00:18:55.400 --> 00:19:13.400
Тағы бір тапсырма орындайық. Сізде келесідей
CIDR блок бар деп елестетіп көріңіз: 10.0.0.0/28.

00:19:13.400 --> 00:19:20.400
Сұрақ: Сіз пайдалану үшін осы CIDR блок
ішінде қанша IP-адрес қол жетімді?

00:19:20.400 --> 00:19:36.400
Жарайды, менің ойымша, барлығыңыз жауабын
таптыңыз. Бірге есептеп көрейік.

00:19:36.400 --> 00:19:48.400
/28 өлшемі бар CIDR блок 32 биттік IPv4 CIDR
блоктағы 28 биттің бекітілгенін көрсетеді,

00:19:48.400 --> 00:19:58.400
яғни өзгеруі мүмкін биттердің
саны 32 минус 28 – 4-ке тең болады.

00:19:58.400 --> 00:20:10.400
4 бит үшін қанша IP-адрестерді есептей аламыз.
Ол үшін біз шыққан санның дәрежесіне қарай 2-ні

00:20:10.400 --> 00:20:17.400
санаймыз, біздің жағдайда ол 4,
2-нің 4 дәрежесі 16-ға тең.

00:20:17.400 --> 00:20:23.400
Жаңа айтқанымыздай, AWS жүйелі түрде
пайдалану үшін 5 адресті резервке қояды.

00:20:23.400 --> 00:20:28.171
Сонымен, 16-дан 5-ті азайтсақ,
нәтижесі 11-ге тең.

00:20:28.183 --> 00:20:34.400
Сонымен жауабы – /28 CIDR блогы
үшін біздің пайдалануымызға

00:20:34.400 --> 00:20:42.400
қолжетімді бірегей IP-адрестің
саны 16 емес, 11 болмақ.

00:20:42.400 --> 00:20:55.400
Public IP-адрестердің екі түрі бар. Біріншісі –
жалпыға ортақ IPv4-адрес және Elastic IP-адрес.

00:20:55.400 --> 00:21:04.400
Олар қалай ерекшеленеді? AWS бұлтында VPC
жасаған кезде, VPC ішіндегі барлық инстанстар

00:21:04.400 --> 00:21:09.400
автоматты түрде private IP address деп
аталатын ішкі IP-адреске ие болады.

00:21:09.400 --> 00:21:19.400
Бірақ мұнымен қатар, VPC жасау кезінде Auto
assign public IP address пунктіне құсбелгісін

00:21:19.400 --> 00:21:24.400
қоюға болады.Осылайша, private IP address-тен
басқа, барлық инстанстар динамикалық

00:21:24.400 --> 00:21:31.400
public IP address болып табылатын
public IPv4 address-теріне ие болады.

00:21:31.400 --> 00:21:43.400
Статикалық жалпыға ортақ IP-адрес қажет болған
жағдайда Elastic IP address пайдалануға болады.

00:21:43.400 --> 00:21:51.400
Бұл IP-адресті ресурсқа, инстансқа немесе VPC
ішіндегі интерфейске байланыстыра аласыз.

00:21:51.400 --> 00:21:59.400
Elastic IP address қызметі де
ақылы екенін есте ұстаған жөн.

00:21:59.400 --> 00:22:05.400
Осылайша, бекер төлем жасамау
үшін ресурстарға байланбаған

00:22:05.400 --> 00:22:13.400
барлық Elastic IP address-терін босату
ереже болып қалыптасуы керек.

00:22:16.400 --> 00:22:21.400
Ал енді Elastic Network Interface
туралы бірнеше сөз айтқым келеді.

00:22:21.400 --> 00:22:29.400
Бұл сіздің VPC-дің ішіндегі
инстансыңызға тіркеле алатын жеке ресурс,

00:22:29.400 --> 00:22:32.400
ол белгілі бір IPv4-адреске
қызмет ете алады.

00:22:32.400 --> 00:22:40.400
Elastic Network Interface-пен қатар, әр инстанстың
VPC ішінде Default Network Interface болады.

00:22:40.400 --> 00:22:50.400
Бұл Default Network Interface-ке VPC-дің CIDR
блогынан таңдалған Private IPv4-адрес тіркеуге

00:22:53.400 --> 00:23:01.400
болады. Инстансқа Network Interface-тің
белгілі бір санын тіркей аласыз

00:23:01.400 --> 00:23:06.400
және бұл сан инстанстардың түріне
байланысты және ол неғұрлым жоғары болса,

00:23:06.400 --> 00:23:13.400
соғұрлым үлкен, соғұрлым көп Network
Interface-ті белгілі бір инстансқа қоса аласыз.

00:23:14.400 --> 00:23:18.400
Ал енді Route table не екенін
мұқият қарастырайық.

00:23:18.400 --> 00:23:26.400
Route table ережелер, rule немесе routes
жиынтығынан тұратын кесте болып табылады.

00:23:26.400 --> 00:23:32.400
Әрбір ереже жөнелту орны мен
баратын жері бойынша немесе

00:23:32.400 --> 00:23:38.400
ағылшын тілінде айтқанда
destination and target-пен анықталады.

00:23:40.400 --> 00:23:45.400
Бізде destination ретінде CIDR блок
әрекет етеді, ол біздің subnet-ті

00:23:45.400 --> 00:23:50.400
сипаттай алады, ал target ретінде
белгілі бір ресурс көрсетіледі.

00:23:50.400 --> 00:23:58.400
Кез-келген Route table-де бірінші,
ең негізгі rule бар.

00:23:58.400 --> 00:24:04.400
Бұл rule біздің барлық subnet-терден
local-ды target ретінде көрсетеді.

00:24:04.400 --> 00:24:11.400
Бұл subnet-тер арасындағы барлық инстанстар
бір-бірімен өзара әрекеттесуі үшін қажет.

00:24:11.400 --> 00:24:21.400
VPC-де әдепкі бойынша Route table бар,
ол Main Route tablе деп аталады.

00:24:21.400 --> 00:24:26.400
Ол автоматты түрде жасалынып,
біздің VPC-мен байланыстырылады.

00:24:27.400 --> 00:24:35.743
Маңыздысы, барлық subnet-тер бекітілген, яғни
Route table-дің біреуіне байлануы керек.

00:24:35.755 --> 00:24:40.400
Бірақ әр Route Table-дің бірден
көп subnet-і болуы мүмкін.

00:24:40.400 --> 00:24:46.400
Сонымен қатар, әр VPC-де бірнеше
Route table болуы мүмкін.

00:24:46.400 --> 00:24:53.400
Осылайша сіз subnet-тер арасындағы барлық
routes-теріңізді икемді түрде баптай аласыз.

00:24:55.400 --> 00:25:01.400
Біз екінші бөлімді аяқтаймыз. Есте сақтау
керек негізгі ойларға шолып өтейік.

00:25:01.400 --> 00:25:11.400
VPC – AWS бұлтының логикалық түрде оқшауланған
бөлігі, онда қажетті ресурстарды жасай аламыз.

00:25:11.400 --> 00:25:16.400
VPC тек бір аккаунтқа және бір
нақты аймаққа қолданылады.

00:25:16.400 --> 00:25:23.400
Бірақ VPC бір аймақтың ішіндегі бірнеше
availability zones-тарда орналасуы мүмкін.

00:25:24.400 --> 00:25:32.400
VPC бір нақты CIDR блокпен анықталады. Алдыңғы
бөлімде CIDR блоктың не екенін талқыладық.

00:25:32.400 --> 00:25:38.400
Барлық VPC-ді subnet-тер деп аталатын
логикалық топтарға бөлуге болады.

00:25:38.400 --> 00:25:45.400
Әр subnet VPC-дің CIDR блогы болуы
тиіс CIDR блокпен анықталады.

00:25:46.400 --> 00:25:50.400
Сонымен қатар Route table
деген ұғым бар,

00:25:50.400 --> 00:25:57.400
бұл біздің VPC ішіндегі subnet-теріміздің
арасындағы трафикті басқаратын ресурс.

00:25:57.400 --> 00:26:04.400
Әр Route table ішіне кірістірілген
Local Route жолы бар,

00:26:04.400 --> 00:26:10.400
оны жою мүмкін емес және әртүрлі
subnet-тердегі барлық инстанстардың

00:26:12.400 --> 00:26:19.400
VPC ішінде бір-бірімен байланысуға
мүмкіндігін қамтамасыз етуге көмектеседі.

00:26:20.400 --> 00:26:25.400
VPC ішіндегі желілік ағындарды
икемді баптау үшін

00:26:25.400 --> 00:26:31.400
Route table-ге қосымша routes,
rules немесе ережелер қосуға болады.

00:26:31.400 --> 00:26:38.400
Сонымен біз үшінші
бөлімге де келіп қалдық.

00:26:38.400 --> 00:26:46.400
Үшінші бөлімде VPC ішінде ішкі трафикті
бағыттауды баптау ерекшеліктері туралы айтамыз.

00:26:48.400 --> 00:26:52.400
VPC-дің маңызды компоненттерінің бірі
Internet gateway болып табылады.

00:26:52.400 --> 00:26:59.400
Internet gateway интернетті сіздің VPC ішіндегі
инстанстарыңызға қосу үшін қолданылады.

00:27:01.400 --> 00:27:11.080
Сіздің public subnet көпшілікке, яғни
интернеттен қол жетімді ету үшін Internet gateway

00:27:11.092 --> 00:27:20.400
қосып, Route Table-ге destination ретінде
интернет жүретін бір route қосуымыз

00:27:20.400 --> 00:27:29.400
керек, яғни 0.0.0.0/0, target ретінде
Internet gateway әрекет етеді.

00:27:29.400 --> 00:27:35.400
Тағы бір жиі кездесетін жағдай – private subnet
ішіндегі инстанстардың интернетке өту қажеттілігі.

00:27:35.400 --> 00:27:38.888
Сонымен қатар, біз private
subnet ішіндегі инстанстарға

00:27:38.900 --> 00:27:42.400
интернеттен қол жетімділікті
болдырмауымыз керек.

00:27:42.400 --> 00:27:48.400
Ол үшін Network Address
Translation gateway қолданылады,

00:27:48.400 --> 00:27:51.400
сіз оны NAT gateway деп жиі
кездестіресіз. Gateway-ді

00:27:51.400 --> 00:27:59.400
дұрыс орнату үшін алдымен public
subnet-ті дұрыс күйге келтіру керек.

00:27:59.400 --> 00:28:05.400
Біз Public subnet-ті қалай орнату
керектігін білеміз. Қайталап өтейін.

00:28:05.400 --> 00:28:09.400
Сізде public subnet үшін арнайы
route table бар деп елестетіп көріңіз

00:28:09.400 --> 00:28:12.807
және онда сіз бүкіл интернетті
destination ретінде және

00:28:12.819 --> 00:28:19.513
Internet gateway-ді target-і ретінде көрсетесіз.
Осылайша subnet-іңіз public болады.

00:28:19.525 --> 00:28:24.400
Әрі қарай, public subnet
ішінде біз NAT gateway жасаймыз.

00:28:24.400 --> 00:28:35.400
Енді private subnet-ке арналған route
table-ге интернеттен route қосу керек,

00:28:35.400 --> 00:28:42.400
яғни destination – Интернет,
ал target – NAT gateway.

00:28:42.400 --> 00:28:46.936
Осыдан кейін private subnet-тегі
барлық инстанстар

00:28:46.948 --> 00:28:51.400
NAT gateway арқылы интернетке
қол жеткізе алады.

00:28:51.400 --> 00:28:55.512
Сонымен қатар, NAT gateway
интернеттен сұрауларды

00:28:55.524 --> 00:28:59.400
private subnet-ке қайтаруға
мүмкіндік бермейді.

00:28:59.400 --> 00:29:05.400
NAT gateway-ден басқа, NAT instance-ты
баптайтын тағы бір мүмкіндігі бар,

00:29:05.400 --> 00:29:12.400
яғни бөлек EC2 инстансын баптап,
онда NAT gateway теңшеледі.

00:29:12.400 --> 00:29:16.419
Айырмашылығы мынада, егер инстанс
істен шықса, оған бірдеңе болса,

00:29:16.431 --> 00:29:21.400
онда сіздің интернет жоғалады
және оны ауыстыру қажет болады.

00:29:21.400 --> 00:29:29.400
Егер біз NAT gateway туралы айтатын болсақ,
бұл Amazon-ның managed service-і, сондықтан

00:29:29.400 --> 00:29:40.400
барлық ықтимал қателерді, қол жетімсіздікті
Amazon қамтамасыз етеді және қандай да бір

00:29:40.400 --> 00:29:47.400
ресурс істен шыққан жағдайда ол сіз үшін жаңа
жұмыс ресурсымен анық түрде ауыстырылады.

00:29:47.400 --> 00:29:58.400
Осылайша, Amazon NAT instance-ы орнына NAT
gateway-ді пайдалану best practice ретінде ұсынады.

00:29:58.400 --> 00:30:05.400
Сіз AWS ішінде жүзеге асыра
алатын бір қызықты тәсіл – VPC sharing.

00:30:05.400 --> 00:30:12.400
Бұндағы идея, сіз өзіңіздің VPC ішіндегі
subnet-теріңізді басқа VPC аккаунттарымен

00:30:12.400 --> 00:30:19.599
бөлісе аласыз. Бірақ бұл аккаунт жалпыға ортақ
AWS Organizations-ке кіруі керек.

00:30:19.611 --> 00:30:25.400
Айта кететін бірнеше
нюанстар да бар.

00:30:25.400 --> 00:30:32.400
Бұл сіз shared subnet ішіндегі осы ресурстардың
барлығын көре аласыз және өзгерте аласыз,

00:30:32.400 --> 00:30:40.400
бірақ сіз осы subnet-те орналасқан басқа
аккаунттардың ресурстарын көре алмайсыз немесе

00:30:40.400 --> 00:30:46.400
өзгерте алмайсыз. Және бұл осы shared subnet
аясында бірге жұмыс істейтін барлық қатысушылар

00:30:46.400 --> 00:30:56.400
үшін де солай болады. Бұл тәсіл қосымшалары
өзара тығыз байланысты IT-инфрақұрылымдарда

00:30:56.400 --> 00:31:04.853
өте жақсы қолданыла алады. Осылайша қосымшалар
арасындағы байланысты жеңілдетумен қатар,

00:31:04.865 --> 00:31:15.400
кейбір ортақ ресурстарды үнемдеуге болады,
NAT gateway, VPC Interface Endpoints және т.б.

00:31:15.400 --> 00:31:22.400
AWS ішінде жүзеге асыра алатын тағы
бір қызықты тәсіл – VPC peering.

00:31:22.400 --> 00:31:29.400
Бұл әртүрлі VPC-лерді бір-бірімен
байланыстыруға мүмкіндік береді.

00:31:29.400 --> 00:31:36.400
Бұл VPC-лер бір аккаунтта немесе бірнеше
әртүрлі аккаунтарда болуы мүмкін.

00:31:36.400 --> 00:31:42.090
Екі VPC арасында байланыс,
яғни peering connection орнату үшін,

00:31:42.114 --> 00:31:48.400
бірінші – peering connection
ресурсын жасау керек,

00:31:48.400 --> 00:31:54.210
ортасында көріп отырғаныңыздай
pcx-id, сонымен қатар

00:31:54.222 --> 00:32:00.400
сәйкес route tables-терде әр
VPC үшін route-терді қосыңыз.

00:32:00.400 --> 00:32:06.671
Дәлірек айтсақ, VPC A route
table-ына біз route қосуымыз керек,

00:32:06.695 --> 00:32:14.400
онда destination VPC B
CIDR блогы болып табылады және

00:32:14.400 --> 00:32:18.721
target ретінде біздің peering
connection ресурсын көрсетесіз,

00:32:18.733 --> 00:32:27.130
яғни біз VPC B-ге сол арқылы жетеміз.
Ал VPC B route table-ында керісінше,

00:32:27.142 --> 00:32:38.010
destination VPC A CIDR блогын және target –
peering connection ресурсын көрсетесіз.

00:32:38.034 --> 00:32:48.959
VPC peering-тің бірнеше шектеулері бар.
Бірінші және ең бастысы – IP-адрестер,

00:32:48.971 --> 00:32:52.400
яғни CIDR блоктардың
қиылысуы мүмкін емес.

00:32:52.400 --> 00:32:56.400
Егер олар қабаттасса, сіз peering
connection-ді орната алмайсыз.

00:32:56.400 --> 00:33:07.400
Бұл менің сізге алдыңғы слайдтарда айтқаным,
және сіз VPC-ді бір-бірімен

00:33:07.400 --> 00:33:17.436
қосуды жоспарламасаңыз да, қабаттасуды
алдын алу үшін барлық CIDR блоктары

00:33:17.460 --> 00:33:26.400
бар орталық тізім болуы керек
екенін есте ұстауыңыз керек.

00:33:26.400 --> 00:33:31.400
Тағы бір мәселе, VPC peering-інің
өтпелі емес екендігі.

00:33:31.400 --> 00:33:40.400
Яғни, VPC A және VPC B арасында, содан кейін
VPC B және VPC C арасында байланыс орнатсақ,

00:33:40.400 --> 00:33:46.400
VPC A және VPC C арасындағы байланыс
пайда болмайтынын көрсетеді.

00:33:46.400 --> 00:33:58.400
VPC A-ның VPC C-ге де қосылуын қаласаңыз,
бөлек peering connection орнату керек. Сондай-ақ

00:33:58.400 --> 00:34:12.400
тағы бір маңызды мәселе – екі VPC арасында
тек бір peering connection орнатуға болады.

00:34:12.400 --> 00:34:18.400
Осы уақытқа дейін біз бұлт ішіндегі желілерді
қалай қосуға болатындығы туралы айттық.

00:34:18.400 --> 00:34:23.388
Егер бізге бұлтқа жергілікті
кеңседен немесе жергілікті

00:34:23.412 --> 00:34:28.400
дата-центрден қосылуымыз керек
болса, бұл опция да қолжетімді.

00:34:28.400 --> 00:34:36.400
Осы мақсатта осының барлығын баптауға мүмкіндік
беретін AWS Site-to-Site VPN сервисі бар.

00:34:36.400 --> 00:34:41.425
Жергілікті кеңседен бұлттағы
VPC-ге кіруді қамтамасыз ету үшін

00:34:41.449 --> 00:34:46.400
сізге қажет ең негізгі
қадамдарды қарастырайық.

00:34:46.400 --> 00:34:54.400
Ең бірінші қадам – Virtual Private Network
Gateway немесе Virtual Gateway құру керек.

00:34:54.400 --> 00:34:59.400
Сіз экранның ортасынан Virtual Gateway ID
көре аласыз. Ол біздің VPC-ге байланады.

00:34:59.400 --> 00:35:05.400
Әрі қарай, біз Customer Gateway-ді
конфигурациялауымыз керек.

00:35:05.400 --> 00:35:12.010
Customer Gateway жай ғана
ресурс емес, бұл AWS-ке сіздің

00:35:12.034 --> 00:35:19.400
VPN құрылғыңыз туралы ақпарат беретін
AWS ресурсы, яғни жабдық.

00:35:19.400 --> 00:35:26.073
Үшіншіден, Private Subnet үшін route
table-ді баптау керек, мысалы

00:35:26.097 --> 00:35:30.213
route-ті қосуымыз керек, мұнда destination
біздің жергілікті кеңсеміз, яғни жергілікті

00:35:30.225 --> 00:35:39.400
кеңсеміздің CIDR блогы, ал target – vgw-id
болып табылады, яғни бұл Virtual Gateway ID.

00:35:39.400 --> 00:35:51.400
Енді екі жүйені бір-бірімен байланыстыру үшін
AWS Site-to-Site VPN сервисін пайдаланамыз.

00:35:51.400 --> 00:35:56.388
Бұл жергілікті инфрақұрылымды
AWS бұлтындағы инфрақұрылыммен

00:35:56.412 --> 00:36:01.400
байланыстыру үшін жасалуы
керек негізгі қадамдар.

00:36:01.400 --> 00:36:07.428
Біздің бұлттағы инфрақұрылымымызды
жергілікті инфрақұрылыммен байланыстыруға

00:36:07.452 --> 00:36:13.400
мүмкіндік беретін келесі ұқсас
сервис – бұл AWS Direct Connect сервисі.

00:36:13.400 --> 00:36:26.400
Айырмашылығы – AWS Site-to-Site VPN сервисімен
біз VPN-қосылымды интернет арқылы баптаймыз.

00:36:26.400 --> 00:36:32.388
Осылайша, бізде байланыс бар, бірақ
деректерді жіберу жылдамдығы мен

00:36:32.412 --> 00:36:38.400
желілік арна интернет арнасының
мөлшерімен анықталады.

00:36:38.400 --> 00:36:42.977
Егер сізде интернет байланысы әлсіз
болса, бұл сіздің бұлтқа

00:36:43.001 --> 00:36:48.400
AWS Site-to-Site VPN сервисі арқылы
қосылуыңыз да әлсіз болады дегенді білдіреді.

00:36:48.400 --> 00:36:56.388
Егер сізге үлкен көлемді деректерді
жіберу немесе оны жылдамырақ тасымалдау

00:36:56.412 --> 00:37:04.400
қажет болса, онда интернетті айналып
өтіп, тікелей DX-locations-ке,

00:37:04.400 --> 00:37:12.400
яғни AWS жаһандық инфрақұрылымға
қосылу мүмкіндігі бар.

00:37:12.400 --> 00:37:17.555
Бұл жағдайда интернетке шығудың
қажеті жоқ, біздің жергілікті

00:37:17.579 --> 00:37:23.400
инфрақұрылымды бұлттағы инфрақұрылыммен
тікелей байланысасыз.

00:37:23.400 --> 00:37:32.400
Көбінесе VPC-ден қандай да бір
AWS сервисін шақыру қажет болады,

00:37:32.400 --> 00:37:38.888
яғни барлық AWS сервистері VPC ішінде жұмыс
істей алмайды, бірақ соған қарамастан

00:37:38.912 --> 00:37:45.400
бізге VPC-ден AWS ішкі желісінен
шықпай-ақ, интернетке

00:37:45.400 --> 00:37:52.400
қосылмай-ақ қажет AWS сервисіне
өтуге мүмкіндік беретін шешім бар.

00:37:52.400 --> 00:37:58.138
Бұл VPC endpoints, оның екі
түрі бар, Interface VPC endpoint

00:37:58.162 --> 00:38:04.400
немесе AWS Private Link
қолдайтын Interface endpoint.

00:38:04.400 --> 00:38:13.481
Екіншісі – Gateway endpoint. Сізге қандай сервис
қажет екеніне байланысты, endpoint опцияларының

00:38:13.505 --> 00:38:18.400
қайсысына қолдау көрсетілетінін құжаттамадан
қарап, сәйкесінше пайдалануға болады.

00:38:18.400 --> 00:38:24.388
VPC жүйесінен Amazon S3 сервисімен
жұмыс істеу үшін не баптау

00:38:24.412 --> 00:38:30.400
керек екенін Amazon S3 сервисінің
мысалында қарастырайық.

00:38:30.400 --> 00:38:36.388
Ол үшін бізге VPC Endpoint ресурсын
құру керек, сонымен қатар

00:38:36.412 --> 00:38:42.400
subnet-ке арналған route table-де
қосымша route тіркеу керек,

00:38:42.400 --> 00:38:50.400
мұнда destination – Amazon S3 ID,
ал target – біздің VPC endpoint ресурсы.

00:38:50.400 --> 00:38:58.384
Алдында біз VPC peering туралы,
яғни екі бөлек VPC-ді әртүрлі AWS

00:38:58.708 --> 00:39:06.400
аккаунтарында болса да бір-бірімен
байланыстыру екенін айттық.

00:39:06.400 --> 00:39:12.388
Бұл тәсілдің шектеулерінің бірі
транзитивтіліктің жоқтығы болды,

00:39:12.412 --> 00:39:18.400
яғни сіз бірінші VPC-ді екіншісіне қосасыз,
екіншісін үшіншіге қосасыз және

00:39:18.400 --> 00:39:22.400
бұл біріншіден үшіншіге байланыс
бар дегенді білдірмейді.

00:39:22.400 --> 00:39:27.050
Егер сізге бірінші VPC-ді
үшіншіге қосу қажет болса,

00:39:27.074 --> 00:39:32.400
қосылым пайда болуы үшін бөлек
VPC peering connection баптау қажет.

00:39:32.400 --> 00:39:39.381
Енді слайдтың сол жағында бірнеше түрлі VPC
бар, сонымен қатар VPN қосылымдары бар

00:39:39.405 --> 00:39:47.400
және олардың барлығы бір-бірімен байланысты
болатын жағдайды елестетіп көріңіз.

00:39:47.400 --> 00:39:52.745
Барлық VPC-лерді бір-бірімен байланыстыру
үшін, айта кетейін бұл сіздің бизнес

00:39:52.757 --> 00:39:58.400
қажеттіліктеріңізге байланысты, сізге VPC
peering-інің осы санын жасау керек. Мұны

00:39:58.400 --> 00:40:15.300
қолдау өте ыңғайсыз болуы мүмкін және келесі
уақыттарда көптеген VPC peering-тер жасалады.

00:40:15.400 --> 00:40:21.031
олданыстағы IT-инфрақұрылымдарда
осындай мәселені шешу үшін

00:40:21.043 --> 00:40:28.400
AWS Transit Gateway сервисін
пайдалану ұсынылады.

00:40:28.400 --> 00:40:33.303
Оның идеясы – бұл Hub and Spoke Model
принципі бойынша жұмыс істейді,

00:40:33.315 --> 00:40:38.400
яғни AWS Transit Gateway орталық
хаб ретінде әрекет етеді және

00:40:38.400 --> 00:40:43.249
Transit Gateway-ге қосылатын барлық
VPC-лер AWS Transit Gateway-ге

00:40:43.261 --> 00:40:48.400
қосылған барлық VPC-ге автоматты
түрде қол жеткізе алады.

00:40:48.400 --> 00:40:55.800
Осылайша, сіз AWS Transit Gateway
көмегімен өзіңіздің инфрақұрылымыңыздың

00:40:55.812 --> 00:41:02.400
көрінісін қалай жеңілдетуге
болатындығын оң жақта көре аласыз.

00:41:02.400 --> 00:41:11.400
Сонымен біз үшінші бөлімнің соңына жеттік.
Өтілген материалға қысқаша тоқталайық.

00:41:11.400 --> 00:41:17.267
Бірінші VPC компонент – Internet Gateway
болып табылады, ол интернетті

00:41:17.279 --> 00:41:22.400
public subnet-тегі ресурстарымызға
байланыстыруға көмектеседі.

00:41:22.400 --> 00:41:27.191
Содан кейін private subnet ішіндегі
инстанстарға қосылу арқылы интернетке

00:41:27.203 --> 00:41:32.400
кіруге тыйым салу кезінде Private
Subnet-тегі инстанстарға интернетке

00:41:32.400 --> 00:41:40.400
кіруге мүмкіндік беретін NAT Gateway
немесе NAT Instance компоненті бар.

00:41:40.400 --> 00:41:47.235
Әрі қарай, біз VPC Endpoint туралы айттық.
Бұндағы идея, барлық сервистер

00:41:47.247 --> 00:41:53.400
VPC ішінде бола бермейді, және сіздің
бизнес талаптарыңызға байланысты,

00:41:53.400 --> 00:42:02.400
егер сізге AWS сервисін пайдалану қажет болса,
интернетке қосылмай-ақ, AWS желісінің ішінде,

00:42:02.400 --> 00:42:11.400
жергілікті түрде, яғни бұл сервистен VPC-ге
қосылған жағдайда, қауіпсіз, тез

00:42:11.400 --> 00:42:16.400
және тұтастай алғанда VPC-ден сізге
қажетті сервиске қол жеткізе аласыз.

00:42:16.400 --> 00:42:27.400
Келесі – VPC peering, бұл VPC-леріңіз әр түрлі
AWS аккаунттарында болса да, жұппен байланыстыру.

00:42:27.400 --> 00:42:34.765
Келесі компонент – бұл VPC sharing.
Мұндағы идея – сіз subnet-теріңізді

00:42:34.777 --> 00:42:42.400
басқа VPC-лермен, басқа AWS
аккаунттарындағы VPC-лермен бөлісе аласыз.

00:42:42.400 --> 00:42:50.400
Ең бастысы, барлық аккаунттардың бір AWS
Organizations-те болуын ескеру қажет.

00:42:50.400 --> 00:42:56.843
Әрі қарай, біз AWS Site-to-Site VPN
жайлы сөйлестік. Идея мынада:

00:42:56.855 --> 00:43:03.400
бұлтты инфрақұрылымды жергілікті
инфрақұрылыммен интернет арқылы

00:43:03.400 --> 00:43:08.400
арнайы VPN-қосылымы
арқылы байланыстыруға болады.

00:43:08.400 --> 00:43:14.400
Бұл тәсілдің оң және теріс жақтары бар.
Басқа нұсқа – AWS Direct Connect.

00:43:14.400 --> 00:43:21.400
Идеясы – сіз бұлтқа интернет арқылы емес,
AWS ғаламдық инфрақұрылымына қосыласыз.

00:43:21.400 --> 00:43:30.400
Осылайша, сізге интернетке кірудің қажеті жоқ,
сонымен бірге сіз кеңірек арнаға ие боласыз.

00:43:30.400 --> 00:43:36.682
Және бұл опция жергілікті кеңседен
бұлтқа немесе керісінше үлкен

00:43:36.694 --> 00:43:43.400
көлемдегі ақпаратты
тасымалдау қажет болса тиімді.

00:43:43.400 --> 00:43:50.039
Біз атап өткен соңғы сервис –
AWS Transit Gateway. Идея мынада:

00:43:50.051 --> 00:43:56.400
егер сіздің VPC-леріңіз өзара
тығыз байланысты болуы керек болса және

00:43:56.400 --> 00:44:01.847
VPC peering-ті пайдаланған кезде,
сіз осы VPC peering-терді көп мөлшерде

00:44:01.859 --> 00:44:07.400
жасайсыз, бұл жағдайда барлық
VPC қосылатын орталық ресурс

00:44:07.400 --> 00:44:15.400
болатын AWS Transit Gateway
шешім бола алады.

00:44:15.400 --> 00:44:19.388
Осылайша, барлық қосылған VPC-лер
осы Transit Gateway-ге қосылған

00:44:19.400 --> 00:44:23.400
барлық басқа VPC-лерге
қол жеткізе алатын болады.

00:44:23.400 --> 00:44:32.400
Ал енді төртінші бөлімді бастайық. Бұл бөлімде
біз VPC-дегі қауіпсіздік туралы сөйлесеміз.

00:44:32.400 --> 00:44:41.400
Біз Security Groups-тан бастаймыз. Security
Groups сіздің инстанстарыңыз үшін кіріс және

00:44:41.400 --> 00:44:45.782
шығыс трафикті басқаруға мүмкіндік беретін
виртуалды firewall болып табылады.

00:44:45.794 --> 00:44:50.400
Security Groups инстанс деңгейінде жұмыс
істейтінін есте сақтау маңызды.

00:44:50.400 --> 00:44:56.198
Осылайша, бір subnet-те оның
ішіндегі әрбір инстансқа

00:44:56.210 --> 00:45:02.400
Security Groups-тың арнайы
жинағын орнатуға болады.

00:45:02.400 --> 00:45:12.400
Security Groups кіріс және шығыс трафикті
басқаратын ережелер жиынтығы деп түсіну керек.

00:45:12.400 --> 00:45:21.400
Жаңадан құрылған Security Groups-та сізде
Inbound Rules, яғни кіріс трафигі болмайды.

00:45:21.400 --> 00:45:31.400
Осылайша, үшінші тараптағы хост жаңадан құрылған
Security Group-пен байланысып, инстансқа жете

00:45:31.400 --> 00:45:35.888
алмайды. Егер біз Outbound Rules, яғни
шығыс трафигі туралы айтатын болсақ,

00:45:35.900 --> 00:45:40.400
онда әдепкі бойынша ол толығымен рұқсат
етілген және ешқандай жолмен шектелмейді.

00:45:40.400 --> 00:45:50.400
Егер шығыс трафикті шектеу қажет болса, онда сіз
әдепкі бойынша жасалған ережені rule-ді жойып,

00:45:50.400 --> 00:45:58.400
белгілі бір дәрежеде шектелген өзіңіздің
ережелеріңізді орната аласыз.

00:45:58.400 --> 00:46:03.400
Айта кету керек, Security Groups
stateful болып келеді,

00:46:03.400 --> 00:46:11.045
яғни сіз инстансыңыздан басқа
ресурсқа сұраныс жасаған кезде,

00:46:11.057 --> 00:46:19.400
егер сізде Outbound traffic болса,
сұраныс рұқсат етіледі.

00:46:19.400 --> 00:46:24.932
Содан кейін, сіз сұранысыңызға жауап алған
кезде, оған Inbound Rule рұқсат

00:46:24.944 --> 00:46:34.400
етілгеніне немесе тыйым салынғанына қарамастан,
сіз оны аласыз, яғни күйі сақталып қалады.

00:46:34.400 --> 00:46:42.567
Керісінше, яғни егер сыртқы ресурстардан
Inbound Rule рұқсат етілсе,

00:46:42.579 --> 00:46:48.400
онда ол бұрыннан рұқсат етілгендіктен
сырттан келген күйі сақталынады.

00:46:48.400 --> 00:46:53.850
Біз бұл күйді сақтап, шығыс трафиктің
рұқсат етілгеніне қарамастан,

00:46:53.862 --> 00:46:59.400
ол бәрібір рұқсат етіледі
және жауапты кері жібереді.

00:46:59.400 --> 00:47:04.400
Security Groups туралы
мысалды қарастырайық.

00:47:04.400 --> 00:47:10.400
Мұнда шығыс және кіріс трафиктері үшін
бапталған rules бар екенін көруге болады.

00:47:10.400 --> 00:47:17.559
Егер біз шығыс rules-терге назар
аударсақ, біз 80 және 443 порттарына

00:47:17.571 --> 00:47:24.400
рұқсат етілгенін көреміз, яғни бүкіл
интернеттен HTTP мен HTTPS қол жетімділік,

00:47:24.400 --> 00:47:30.400
яғни интернеттегі кез келген IPv4-адрес
біздің инстансқа қосыла алады.

00:47:30.400 --> 00:47:39.400
Келесі, source ретінде біздің
желілік CIDR блок көрсетілген,

00:47:39.400 --> 00:47:44.845
осылайша біз осы жергілікті желіден
22 порт арқылы, яғни SSH арқылы,

00:47:44.857 --> 00:47:50.400
Security Group-қа байланысқан
инстансқа қосыла аламыз.

00:47:50.400 --> 00:47:59.768
Егер біз шығыс трафигі туралы
айтатын болсақ, біз дерекқорларымыздың

00:47:59.780 --> 00:48:08.400
Security Group ID-ін destination ретінде көрсете
аламыз және 1433 портына рұқсат бере аламыз.

00:48:08.400 --> 00:48:19.400
Осылайша Security Group инстансы 1433 порты
арқылы дерекқорларға қосыла алады.

00:48:19.400 --> 00:48:27.400
Бұл Microsoft SQL Server дерекқорлары үшін
әдепкі бойынша орнатылған порт.

00:48:27.400 --> 00:48:31.240
VPC-дің қауіпсіздігін қамтамасыз етуге
көмектесетін келесі компонент –

00:48:31.252 --> 00:48:39.400
Network Access Control Lists. Сіз оны
Network ACLs деп жиі кездестіресіз.

00:48:39.400 --> 00:48:48.400
Ол firewall ретінде әрекет етіп, кіріс және
шығыс трафикті subnet деңгейінде басқарады.

00:48:48.400 --> 00:48:57.400
Бұл міндетті емес, сондықтан оны пайдалану
не пайдаланбауды өзіңіз білесіз.

00:48:57.400 --> 00:49:02.084
Amazon өз тарапынан оны пайдаланып,
сіздің барлық VPC-леріңіз

00:49:02.096 --> 00:49:07.400
үшін кіріс және шығыс
rules-терін қайталауды ұсынады.

00:49:07.400 --> 00:49:16.400
Біз Network ACLs туралы айтқан кезде, әр subnet
Network ACLs-тің біреуіне байланысуы керек.

00:49:16.400 --> 00:49:26.400
Егер байланысты нақты көрсетпесеңіз, subnet-тер
дефолтты Network ACLs-ке байланыстырылады.

00:49:26.400 --> 00:49:33.400
Мұндағы маңызды мәселе – әр subnet тек
бір Network ACL-ге байланыса алады,

00:49:33.400 --> 00:49:39.400
ал бірнеше subnet-тер бір
Network ACL-мен байланыса алады.

00:49:39.400 --> 00:49:49.400
Бір subnet-ті басқа Network ACL-ге
байланыстырған кезде, алдыңғы байланыс үзіледі.

00:49:54.400 --> 00:50:02.400
Network ACLs келесідей бейнеленеді. Бұл Network
ACLs-тің әдепкі бойынша құрылған мысалы.

00:50:02.400 --> 00:50:08.400
Әдепкі бойынша, барлық кіріс және шығыс
IPv4 traffic рұқсат етілген.

00:50:08.400 --> 00:50:13.400
Қажет болса, IPv6 traffic-іне
де рұқсат етіледі.

00:50:13.400 --> 00:50:20.400
Бұл жерде айта кету керек, Network ACLs –
stateless, яғни күйі сақталмайды.

00:50:20.400 --> 00:50:26.131
Осылайша, белгілі бір ресурсқа
шығыс сұранысты жасаған кезде,

00:50:26.143 --> 00:50:31.400
егер сізде outbound traffic
рұқсат болса, сұраныс орындалады.

00:50:31.400 --> 00:50:39.173
Сонымен қатар, Network ACLs-тер stateless
болғандықтан, жауапты қайтарған кезде,

00:50:39.185 --> 00:50:46.400
ол кіріс трафигі арқылы рұқсат етілгенін де
тексереді, содан кейін сіз жауап аласыз.

00:50:46.400 --> 00:50:52.266
Егер inbound traffic-те бұл кіріс
трафикке рұқсат бермейтіні жазылса,

00:50:52.278 --> 00:50:58.400
алушыға жауап жетсе де,
жауапты көре алмайсыз.

00:50:58.400 --> 00:51:03.970
Керісіншесі де дұрыс, яғни сыртқы
ресурс сізден жауап алуы үшін

00:51:03.982 --> 00:51:09.400
outbound және inbound traffic-ке
рұқсат етілуі керек.

00:51:09.400 --> 00:51:17.992
Әйтпесе, сіз ресурстан сұрау аласыз,
бірақ бұл ресурсқа жауап бере алмайсыз,

00:51:18.004 --> 00:51:26.400
себебі оны Network ACLs өткізбейді және
outbound traffic ішінде сәйкес rule жоқ.

00:51:26.400 --> 00:51:32.400
Мұнда сіз толтырылған Network ACLs
мысалын көре аласыз.

00:51:32.400 --> 00:51:39.400
Кастомды Network ACLs жасағанда, барлық кіріс
және шығыс трафиктер қабылданбайды.

00:51:39.400 --> 00:51:43.318
Сондықтан, қажет болса, rules қосу керек,
яғни кіріс немесе шығыс трафикке

00:51:43.330 --> 00:51:52.499
рұқсат беретін ережелер. Мұнда HTTPS
және SSH қосылымдары үшін

00:51:52.511 --> 00:51:58.400
кіріс және шығыс трафикке
рұқсат етілгенін көре аласыз.

00:51:58.400 --> 00:52:05.400
Сонымен қатар, HTTPS арқылы кез келген
IPv4-адресін қосуға болады, яғни интернеттен

00:52:05.400 --> 00:52:16.400
кіру мүмкіндігі бар, ал SSH арқылы тек CIDR
блогы 192.0.2.0/24 бар IP-адрестер ғана қосыла

00:52:16.400 --> 00:52:23.711
алады, яғни мұнда сіз жергілікті желіні
көрсете аласыз. Security groups

00:52:23.723 --> 00:52:33.400
Network ACLs-тен қалай ерекшеленетіні
сізге кішкене түсініксіз болуы мүмкін,

00:52:33.400 --> 00:52:39.400
сондықтан олардың ерекшеліктерін
кесте түрінде салыстырайық.

00:52:39.400 --> 00:52:44.400
Security groups туралы айтатын болсақ,
Security groups инстанс деңгейінде жұмыс істейді,

00:52:44.400 --> 00:52:49.400
ал Network ACLs subnet деңгейінде жұмыс істейді,
яғни subnet-ке байланыстырылады.

00:52:49.400 --> 00:52:53.705
Ережелер туралы айтатын болсақ,
Security groups рұқсат беретін

00:52:53.717 --> 00:52:58.400
ережелерді ғана қолдайды,
яғни трафикке рұқсат береді.

00:52:58.400 --> 00:53:03.400
Network ACLs туралы айтатын болсақ,
рұқсат беретін ережелер ғана емес,

00:53:03.400 --> 00:53:10.344
сонымен қатар трафикке тыйым
салатын ережелерді орнатуға болады.

00:53:10.356 --> 00:53:20.617
Security groups – stateful, яғни күйін еске
сақтайды. Бұл Outbound rules-ке қарамастан

00:53:20.629 --> 00:53:29.400
кіруге болатын трафик міндетті түрде шығады
дегенді білдіреді. Және керісінше де дұрыс.

00:53:29.400 --> 00:53:37.400
Егер сізде кірген Outbound traffic болса, онда
қандай Inbound rules болса да, ол қайта оралады.

00:53:37.400 --> 00:53:43.400
Network ACLs – stateless, яғни ол
күйді есіне сақтамайды және

00:53:43.400 --> 00:53:51.229
сұраныс Network ACLs арқылы өтуі
үшін оған Inbound rules-те де,

00:53:51.241 --> 00:53:58.400
Outbound rules-те де рұқсат етілуі керек,
әйтпесе сұраныс өтпейді.

00:53:58.400 --> 00:54:07.400
Төртінші ерекшелік, Security groups трафикке
рұқсат беру немесе бермеу туралы шешім қабылдау

00:54:07.400 --> 00:54:13.400
үшін барлық қол жетімді rules-терді
қарап, содан кейін шешім қабылдайды.

00:54:13.400 --> 00:54:21.400
Ал Network ACLs жоғарыдан төменге
дейін барлық rules-терді қарап шығады.

00:54:21.400 --> 00:54:24.640
Трафикке рұқсат беретін
ережелерді тапқан сәтте,

00:54:24.652 --> 00:54:30.400
қалған ережелер қарастырылмайды
және трафикке рұқсат етіледі.

00:54:30.400 --> 00:54:39.306
Осымен біз төртінші бөлімді аяқтаймыз. Мұнда біз
Security groups және Network ACLs не екенін

00:54:39.318 --> 00:54:47.400
егжей-тегжейлі талқыладық. Бұл компоненттердің
екеуі де біздің VPC-ді қорғауға көмектеседі.

00:54:47.400 --> 00:54:55.400
Ал енді бесінші бөлімге келдік. Мұнда біз
Amazon Route 53 сервисі туралы сөйлесеміз.

00:54:55.400 --> 00:55:05.715
Бұл бізге DNS сервисін ұсынатын сервис.
Қарапайым тілмен айтқанда, бұл пайдаланушылар

00:55:05.727 --> 00:55:16.820
www.example.com сайтын ашқан сәтте бұл сервис
трафикті тиісті IP-адрестерге, атап айтқанда,

00:55:16.832 --> 00:55:22.400
инфрақұрылымымыздың IP-адрестеріне,
инстанстарымызға бағыттайды дегенді білдіреді.

00:55:22.400 --> 00:55:27.400
Amazon Route 53 AWS сервистерінің
кең ауқымын қолдайды.

00:55:27.400 --> 00:55:30.832
Бұл тек Amazon EC2 инстанстары
ғана емес, сонымен қатар

00:55:30.844 --> 00:55:34.400
Amazon S3 buckets, Elastic Load Balancing
сияқты басқа да сервистер болуы мүмкін.

00:55:34.400 --> 00:55:41.956
Amazon Route 53 ішінде трафик таргет
IP-адрестердің күйіне жауап беру үшін

00:55:41.968 --> 00:55:49.400
икемді түрде бапталуы мүмкін,
яғни бұл сервис қайта

00:55:49.400 --> 00:55:54.400
бағыттайтын IP-адрестер және
сәйкес әрекет етеді, яғни осылайша

00:55:54.400 --> 00:56:01.400
қабылдаушы тарапынан ақаулар туындаған жағдайда
трафикті қайта бағыттауды баптауға болады.

00:56:01.400 --> 00:56:10.400
Amazon Route 53 арқылы біз домендерді
сатып ала алатынымызды да айта кеткен жөн.

00:56:10.400 --> 00:56:22.400
Сервистің парақшасында қолжетімді жоғары
деңгейлі домендермен танысуға болады.

00:56:22.400 --> 00:56:31.400
Бұл слайдта пайдаланушының сұранысы белгілі бір
сайтты ашқан кезде қалай өңделетінін көре аласыз.

00:56:31.400 --> 00:56:40.400
Пайдаланушы, мысалы, www.example.com сайтының
атауын енгізгенде, сұрау DNS resolver-ге өтеді.

00:56:40.400 --> 00:56:48.400
Бұл домен атауын және оған қандай IP-адрес
қызмет ететінін байламдарын немесе

00:56:48.400 --> 00:56:53.400
осы IP-адресін қайдан алуға болатыны
туралы ақпаратты сақтайтын серверлер.

00:56:53.400 --> 00:56:57.351
Егер DNS resolver-де бұл
ақпарат болмаса, бірақ

00:56:57.363 --> 00:57:01.400
қайда бару керектігін білсе,
ол Amazon Route 53 сервисіне барады,

00:57:01.400 --> 00:57:09.400
ол өз параметрлерін қарап, сәйкесінше осы
DNS resolver-ге IP-адресін қайтарады.

00:57:09.400 --> 00:57:17.400
Ол бұл IP адресті пайдаланушыға қайтарады және
бұл пайдаланушыға ашық түрде көрсетіледі.

00:57:17.400 --> 00:57:23.400
Ол браузер жолағында терген кезде,
ол ашылған сайтты көреді.

00:57:23.400 --> 00:57:27.400
Бірақ мұнда екі қадам бар.
Біз бірінші қадамды қарастырдық.

00:57:27.400 --> 00:57:35.400
Екінші қадам, браузер IP-адресті алғаннан кейін,
ол осы сұранысты тиісті IP-адреске жібереді

00:57:35.400 --> 00:57:44.443
және сол жерден жауап алып,
оны пайдаланушыға көрсетеді.

00:57:44.455 --> 00:57:50.400
Іздеу жолағында пайдаланушы
басында енгізген домен атауы тұрады.

00:57:53.400 --> 00:57:58.613
Amazon Route 53 трафикті бағыттауға
және икемді баптауға көмектесетін бірнеше

00:57:58.625 --> 00:58:09.284
түрлі policy-лерді қолдайды. Біріншісі – Simple
routing. Идеясы – сіздің домендік атауыңызға

00:58:09.296 --> 00:58:16.779
қызмет ететін Amazon Route 53 параметрлерінде
бір немесе бірнеше IP-адрестерін көрсету.

00:58:16.791 --> 00:58:25.647
Сұраныс түскен сәтте бұл сервис кездейсоқ
IP-адрестерінің бірін береді,

00:58:25.659 --> 00:58:34.809
ал пайдаланушы жағындағы браузер пайдаланушының
сұрауына жауап алу үшін осы IP-адреске барады.

00:58:34.821 --> 00:58:39.400
Келесі жетілдірілген policy –
бұл Weighted round robin routing.

00:58:39.400 --> 00:58:46.269
Оның идеясы – сіз өзіңіздің
IP-адрестеріңіздің, трафикке қызмет

00:58:46.281 --> 00:58:53.400
ететін серверлердің тізімі
үшін белгілі бір салмақ орната аласыз.

00:58:53.400 --> 00:58:59.429
Сізде екі сервер бар делік, біреуі қуатты,
екіншісінің қуаттылығы төменірек.

00:58:59.441 --> 00:59:05.400
Бұл жағдайда сіз, мысалы, трафиктің
75%-ын үлкен серверге, ал қалған 25%-ын

00:59:05.400 --> 00:59:11.888
қуаттылығы төменірегіне жібере аласыз.
Үшінші нұсқа – бұл Latency routing.

00:59:11.900 --> 00:59:18.400
Бұл алдыңғы екеуіне қарағанда
күрделірек келеді. Оның идеясы – бұл

00:59:18.400 --> 00:59:30.400
нақты IP-адрестерден жауап беру жылдамдығын
өлшеп, ең жылдам жауап беретінін таңдайды.

00:59:30.400 --> 00:59:36.400
Бір мысал келтірейін. Біздің инфрақұрылым екі AWS
аймағында орналастырылғанын елестетіп көрейік.

00:59:36.400 --> 00:59:43.806
Біраз уақыттан кейін және қажетті ақпарат
жиналғаннан кейін, Amazon Route 53

00:59:43.818 --> 00:59:51.400
пайдаланушыларға осы пайдаланушы үшін
жылдамырақ жұмыс істейтін аймақты ұсынады.

00:59:51.400 --> 00:59:59.515
Келесі – бұл Geolocation routing. Идея мынада,
біз белгілі бір аймақтан пайдаланушыларды

00:59:59.527 --> 01:00:07.400
осы трафикке қызмет ететін серверлерге
немесе IP-адрестерге бағыттай аламыз.

01:00:07.400 --> 01:00:16.400
Бұл әдетте трафикті қажет тілдегі
сайтқа бағыттау үшін қолданылады.

01:00:16.400 --> 01:00:29.400
Біз, пайдаланушы ретінде, Орталық Азия елінен
қосыламыз деп елестетейік, біз орыс тілін білеміз,

01:00:29.400 --> 01:00:39.400
бұл жағдайда сайтты сайттың орыс тіліндегі
нұсқасына бағыттайтын етіп бапатуға болады.

01:00:39.400 --> 01:00:46.278
Егер пайдаланушы ағылшын тілінде
сөйлейтін елден қосылса, бұл жағдайда

01:00:46.290 --> 01:00:54.400
пайдаланушы ағылшын тіліндегі трафикке
қызмет ететін серверлерге бағытталады.

01:00:54.400 --> 01:01:04.340
Келесі policy – бұл Geoproximity routing. Идея
мынада, Geolocation routing-тен айырмашылығы

01:01:04.352 --> 01:01:14.400
біз пайдаланушылардың орналасқан жерін қарасақ,
Geoproximity routing біз инфрақұрылымның

01:01:14.400 --> 01:01:19.618
орналасқан жерін қарастырамыз және тиісінше,
жауапты ұсынамыз. Келесі – бұл Failover routing.

01:01:19.630 --> 01:01:25.400
Идея – біз IP-адресті active
және passive ретінде жібереміз.

01:01:25.400 --> 01:01:30.266
Егер трафикті өңдейтін active
IP-адрес немесе ресурспен бәрі

01:01:30.278 --> 01:01:35.400
жақсы болса, барлық
трафик сонда бағытталады.

01:01:35.400 --> 01:01:42.048
Кейбір проблемалар туындаған жағдайда,
трафик әр сұрақты жіберіп алмай,

01:01:42.060 --> 01:01:48.400
өңдеу үшін автоматты түрде
резервтік IP-адреске бағытталады.

01:01:48.400 --> 01:01:54.768
Ал active қайтадан қол жетімді
болған кезде, ауыстырып қосқыш

01:01:54.780 --> 01:02:00.400
іске қосылады және барлық трафик active
IP-адрестерге қайта бағытталады.

01:02:00.400 --> 01:02:05.558
Ең соңғысы – бұл Multivalue answer routing.
Идеясы – барлық алдыңғы

01:02:05.570 --> 01:02:10.400
жағдайларда біз пайдаланушыға бір
нақты IP-адресті қайтаратынбыз.

01:02:10.400 --> 01:02:18.477
Ал Multivalue answer routing-та біз бірнеше
IP-адрестерді жібереміз, содан кейін браузер

01:02:18.489 --> 01:02:26.400
параметрлерге немесе алгоритмге байланысты қай
IP-адреске бару керектігін анықтайды. Мұнда

01:02:26.400 --> 01:02:35.400
Amazon Route 53 сервисін пайдаланудың мысалын,
оның қандай артықшылықтары бар екенін көре

01:02:35.400 --> 01:02:40.400
аласыз. Мысалы, біздің инфрақұрылымымыз
бірнеше аймақта орналастырылған.

01:02:40.400 --> 01:02:45.382
Егер бірінші аймаққа жақын
аймақтан келген пайдаланушы қосылса,

01:02:45.406 --> 01:02:54.774
ал Amazon Route 53 тарапынан Latency-based
routing орнатылып тұрса,

01:02:54.798 --> 01:03:00.400
бұл жағдайда пайдаланушы өзіне
жақын аймаққа бағытталады және

01:03:00.400 --> 01:03:10.400
бұл сұраныс сәл алысырақ аймаққа
барғаннан гөрі тезірек жауап алады.

01:03:10.400 --> 01:03:20.400
Бұл слайдта Failover routing policy бапталынатын
AWS парақшасының мысалын көре аласыз.

01:03:20.400 --> 01:03:25.871
Бұл мысал біздің трафикті
бағыттау ережелерін икемді

01:03:25.883 --> 01:03:32.400
түрде реттеуге болатындығын
көрсету үшін келтірілген.

01:03:32.400 --> 01:03:37.727
Егер біз белгілі бір нақты мысал туралы айтатын
болсақ, онда бізде Failure threshold 3 бар

01:03:37.751 --> 01:03:43.604
екенін көреміз, яғни егер 3
дәйекті сұрау сәтсіз болса,

01:03:43.616 --> 01:03:49.170
онда бізде ауысу болады және
барлық трафик осы трафикке

01:03:49.194 --> 01:03:54.400
қызмет ететін резервтік
IP-адресімізге өтеді.

01:03:54.400 --> 01:04:00.388
Содан кейін әр 30 секунд немесе 10 секунд
сайын, Request interval,

01:04:00.400 --> 01:04:06.400
біз негізгі болып табылатын active IP-адреске
оралу мүмкіндігімізді тексереміз.

01:04:06.400 --> 01:04:16.400
Бұл слайдта Failover routing policy-ді
баптаудың тағы бір мысалы көрсетілген.

01:04:16.400 --> 01:04:22.845
Бізде негізгі трафикке қызмет көрсететін
инфрақұрылым бар делік

01:04:22.857 --> 01:04:29.400
және Amazon Route 53-те бұл инфрақұрылым
негізгі, яғни Active Route болып табылады.

01:04:29.400 --> 01:04:34.255
Тиісінше, сұрау қандай да бір
динамикалық жауапты қайтару

01:04:34.267 --> 01:04:39.400
үшін дерекқорға жүгінетін
Amazon EC2 инстанстарына жетеді.

01:04:39.400 --> 01:04:49.037
Ал Amazon Route 53 жағында Failover орнатылған,
егер инстанстар қолжетімсіз болса, онда

01:04:49.049 --> 01:04:58.400
Failover policy жұмыс істей бастайды және біз
Secondary, яғни Passive IP-адрестерге ауысамыз.

01:04:58.400 --> 01:05:05.400
Бұл жағдайда трафикті Amazon S3 сервисінде
орналасқан статикалық веб-сайтымызға бағыттай

01:05:05.400 --> 01:05:09.348
аламыз. Осылайша біз барлық
пайдаланушыларды дұрыс өңдей алмаймыз,

01:05:09.372 --> 01:05:16.960
бірақ кем дегенде біз оларды тиісті
веб-сайтқа бағыттай аламыз,

01:05:16.984 --> 01:05:21.400
ол жерде олар азды-көпті түсінікті жауап ала
алады және сіз тұтынушыларыңызды жоғалтпайсыз.

01:05:21.400 --> 01:05:29.317
Amazon EC2 инстанстары сұрауларды сәтті қабылдай
алатынын мезгіл-мезгіл тексеріп, Amazon Route 53

01:05:29.329 --> 01:05:37.400
жауап алған сәтте ол кері ауысады және барлық
трафик Amazon EC2 инстанстарына бағытталады.

01:05:37.400 --> 01:05:42.400
Біз осымен бесінші бөлімді аяқтаймыз.
Басты тақырыптарды шолып өтейік.

01:05:42.400 --> 01:05:51.400
Біріншісі, Amazon Route 53 – бұл DNS ұсынатын
жоғары деңгейде қолжетімді ауқымды сервис.

01:05:51.400 --> 01:05:57.642
Қарапайым сөзбен айтқанда, бұл
біздің трафикті домендік атаудан

01:05:57.654 --> 01:06:03.400
осы сұрауды өңдейтін инстанстарға
бағыттайтын сервис.

01:06:03.400 --> 01:06:10.187
Amazon Route 53 сервисі арқылы біз домен
атауларын да сатып ала аламыз. Біз үшін

01:06:10.199 --> 01:06:16.400
қандай жоғары деңгейлі домендер бар екенін біз
осы сервистің ресми парақшасынан көре аламыз.

01:06:16.400 --> 01:06:21.665
Содан кейін, маңызды нәрсе және нақты
AWS емтиханында келуі мүмкін

01:06:21.677 --> 01:06:27.400
Amazon Route 53 сервисінде
қандай Routing policy-лер бар.

01:06:27.400 --> 01:06:34.681
Шындығында, бұл сұрақтар ең қарапайым
сұрақтардың бірі болып табылады. Сізге әрбір

01:06:34.693 --> 01:06:42.400
Routing policy не екенін түсіну сұраққа
дұрыс жауап беру үшін жеткілікті.

01:06:42.400 --> 01:06:49.400
Сіз біздің Practice test-терімізде осыған
ұқсас сұрақтарды кездестіресіз. Осыдан

01:06:49.400 --> 01:06:59.400
кейін біз Amazon Route 53-ті AWS нфрақұрылымымен
пайдаланудың мысалдарын қарастырдық.

01:06:59.400 --> 01:07:08.400
Біз дәрісіміздің соңғы бөліміне жеттік. Бұл
бөлімде Amazon CloudFront сервисі туралы айтамыз.

01:07:08.400 --> 01:07:19.400
Бұл интернет-трафикті өңдейтін барлық
IT-инфрақұрылымдарда қолданылатын негізгі

01:07:19.400 --> 01:07:24.400
сервистердің бірі. Бұл Content Delivery
Network сервисі, яғни CDN.

01:07:24.400 --> 01:07:34.504
Қарапайым тілмен айтқанда, бұл сіздің барлық
медиаңызды пайдаланушыларыңызға жақындататын

01:07:34.516 --> 01:07:44.400
сервис, осылайша ол жылдамырақ, арзанырақ және
жалпы алғанда қауіпсіз жұмыс істейді.

01:07:44.400 --> 01:07:50.042
CDN неліктен маңызды екенін және ол
бізге пайдаланушы тәжірибесін

01:07:50.054 --> 01:07:56.400
жақсартуға қалай көмектесетінінің
мысалын қарастырайық.

01:07:56.400 --> 01:08:02.135
Пайдаланушы сұрау жасағанда, ол бастапқы
серверге өту және сіздің кейбір деректеріңізді,

01:08:02.147 --> 01:08:08.400
медиа деректеріңізді серверден сұрау үшін
бірнеше аралық сервер арқылы өтуі мүмкін.

01:08:08.400 --> 01:08:15.282
Пайдаланушыдан серверлерімізге дейінгі
қашықтық өте үлкен болуы мүмкін

01:08:15.294 --> 01:08:23.400
және бұл сіздің қосымшаңыздың жылдамдығына әсер
етеді. Бұл пайдаланушы тәжірибесін нашарлатады.

01:08:23.400 --> 01:08:32.760
Сондықтан CDN, Content Delivery Network деген
тәсіл бар. Идеясы – кейбір аралық серверлерде

01:08:32.772 --> 01:08:42.400
медиа деректеріңіз немесе кез
келген басқа деректер кэштеледі.

01:08:42.400 --> 01:08:51.582
Осылайша, пайдаланушы серверлердің түпнұсқалық
көздеріне қол жеткізбестен, қажетті контентті

01:08:51.594 --> 01:09:00.400
ертерек ала алады және бұл әрбір пайдаланушының
әрбір сұранысын өңдеу уақытын жылдамдатады.

01:09:00.400 --> 01:09:10.400
Осылайша, Content Delivery Network,
яғни CDN, біз үшін шешім болып табылады.

01:09:10.400 --> 01:09:19.400
Content Delivery Network – бұл Amazon-ға
тікелей қатысы жоқ IT ұғым.

01:09:19.400 --> 01:09:25.400
Демек, бұл бұрыннан келе
жатқан технология, тәсіл.

01:09:25.400 --> 01:09:31.400
Идея мынада: бұл кейбір контентті (мазмұнды)
кэштейтін өзара байланысты серверлер желісі.

01:09:31.400 --> 01:09:35.773
Контент ретінде HTML парақшалары,
CSS парақшалары, JavaScript файлдары,

01:09:35.785 --> 01:09:42.400
уреттер, видеолар, аудио және т.б. болуы
мүмкін, яғни кез келген медиафайл.

01:09:42.400 --> 01:09:47.400
Сонымен қатар, жетілдірілген CDN
динамикалық мазмұнды өңдеп, кэштей алады.

01:09:47.400 --> 01:10:01.400
Осылайша, пайдаланушыларға бастапқы сервиске
жету үшін олардың сұрауын күтудің қажеті жоқ.

01:10:01.400 --> 01:10:09.400
Шын мәнінде, кэште сақталатын немесе осы
пайдаланушы қабылдайтын дайын жауап бар.

01:10:09.400 --> 01:10:18.931
Осылайша, пайдаланушы тәжірибесі жақсарады.
Егер біз AWS туралы айтатын болсақ, онда CDN,

01:10:18.943 --> 01:10:27.400
яғни Content Delivery Network болып табылатын
арнайы сервис бар, Amazon CloudFront деп аталады.

01:10:27.400 --> 01:10:32.400
Біз AWS жаһандық инфрақұрылымының
не екендігі туралы бұрын айтқанбыз.

01:10:32.400 --> 01:10:38.400
Бұл AWS аймақтары, әрбір
аймақта availability zone болады,

01:10:38.400 --> 01:10:44.400
әрбір availability zone-да дата-центр бар және
біз дата-центрдің не екенін де айттық.

01:10:44.400 --> 01:10:49.400
Сондай-ақ Amazon CloudFront Infrastructure
деп аталатын CloudFront-қа

01:10:49.400 --> 01:10:54.400
тиесілі параллельді AWS инфрақұрылымы бар.
Ол екі компоненттен тұрады.

01:10:54.400 --> 01:10:59.400
Бұл Edge locations және Regional edge
caches. Айырмашылықтары қандай?

01:10:59.400 --> 01:11:09.400
Edge locations – бұл соңғы пайдаланушыларға
ең жақын орналасқан серверлер.

01:11:09.400 --> 01:11:17.400
Осылайша, ол ең танымал, ең қажетті және
жиі сұралатын мазмұнды сақтайды.

01:11:17.400 --> 01:11:27.400
Regional edge cache – біраз алысырақ орналасқан,
ол сәл үлкенірек аймақтың ақпаратын сақтайды.

01:11:27.400 --> 01:11:31.542
Сондай-ақ онда танымал деректер
сақталынады, бірақ

01:11:31.554 --> 01:11:36.400
Edge locations-та орналасқан деректерге
қарағанда танымал емес. Сондай-ақ,

01:11:36.400 --> 01:11:41.400
бұл Edge locations-те қандай да бір себептермен
сәйкес келмейтін деректер болуы мүмкін.

01:11:41.400 --> 01:11:45.400
Олар Regional Edge cache-інде тасымалданады және
сақталады. Regional Edge cache-інен

01:11:48.400 --> 01:11:59.400
кейін бізде ең алыс қашықтық – бұл бастапқы
серверлерге тікелей қол жеткізу.

01:11:59.400 --> 01:12:07.400
Сонымен, қайталайын,
бізде үш аралық сервер бар.

01:12:07.400 --> 01:12:12.400
Ең алысы – бастапқы серверлерге
тікелей қол жеткізу.

01:12:12.400 --> 01:12:17.400
Мазмұнды Regional Edge cache-інен
алатын болсақ, сәл жылдамырақ.

01:12:17.400 --> 01:12:21.400
Ал Edge locations-тен
ең жылдам мазмұнды аламыз.

01:12:23.400 --> 01:12:28.400
Amazon CloudFront сервисін пайдаланудың
негізгі артықшылықтарын қарастырайық.

01:12:28.400 --> 01:12:35.288
Біріншісі – бұл сервис жылдам және жаһандық.
Келесі – біз соңғы кэштеу

01:12:35.300 --> 01:12:40.400
серверлерінде қауіпсіздікті баптай аламыз.
Біз Amazon CloudFront

01:12:42.400 --> 01:12:48.400
сервисінің әрекетін AWS Lambda Edge
арқылы қосымша бағдарламалай аламыз.

01:12:50.400 --> 01:12:56.400
Бұл сервис AWS сервистерімен барынша
біріктірілген CDN болып табылады.

01:12:56.400 --> 01:13:02.400
Бұл, сонымен қатар, интернет
пайдаланушыларымызға тікелей серверлерімізден

01:13:02.400 --> 01:13:08.400
қызмет көрсеткеннен гөрі әлдеқайда
тиімді және жылдамырақ шешім.

01:13:10.400 --> 01:13:16.400
Amazon CloudFront – ақылы ресурс,
бірақ кез келген басқа AWS

01:13:16.400 --> 01:13:21.400
сервисі сияқты біз тек пайдаланғанымыз үшін
төлейміз. Amazon CloudFront сервисінің

01:13:21.400 --> 01:13:27.400
бөлігі ретінде біз кэш-серверлеріне
тасымалдаған деректер көлемі үшін төлейміз.

01:13:28.400 --> 01:13:35.400
Біз, сондай-ақ, осы кэш-серверлеріне HTTP
мен HTTPS сұрауларының саны үшін төлейміз.

01:13:36.400 --> 01:13:39.400
Invalidation Requests сұраулары
үшін қосымша ақы алынады.

01:13:39.400 --> 01:13:45.400
Бұл сұраныс бойынша барлық кэш-серверлерді
деректерімізден тазарту қажет болған кезде.

01:13:45.400 --> 01:13:50.400
Бұл әдетте қандай да бір қатені тауып,
оны тез түзеткенде қажет,

01:13:50.400 --> 01:13:57.400
сонда біздің пайдаланушыларымыз қосымшаның
немесе деректердің жаңартылған нұсқасын алады.

01:13:57.400 --> 01:14:03.400
Бұл жағдайда біз Invalidation Requests жасаймыз.
Тағы бір нұсқа – бізде үлкен жаңарту болған кезде

01:14:03.400 --> 01:14:08.400
және біз бұл үлкен жаңарту пайдаланушыларымызға
жылдамырақ жеткенін қалаймыз.

01:14:08.400 --> 01:14:16.290
Бұл жағдайда кэшті тазартуымыз керек және
сұрауды бастаған барлық пайдаланушылардың

01:14:16.302 --> 01:14:21.400
бірінші пайдаланушысы CloudFront арқылы сұрау
жасайды, ал бұл деректер қол жетімсіз

01:14:21.400 --> 01:14:30.400
болғандықтан, бастапқы серверлерге сұраныс
жасап, деректерді қабылдаған соң, кэштейді.

01:14:30.400 --> 01:14:34.400
Осы деректерді сұрайтын барлық
кейінгі пайдаланушылар енді

01:14:34.400 --> 01:14:42.400
бастапқы серверлерден емес,
біздің Edge серверлерімізден алады.

01:14:44.400 --> 01:14:51.400
Тағы бір мәселе – Dedicated IP custom SSL
деп аталатын опцияны баптауға болады.

01:14:51.400 --> 01:15:01.400
Бұл AWS пайдаланушылары жиі пайдаланбайтын
опция, бірақ оның бар екенін есте сақтау керек.

01:15:01.400 --> 01:15:07.400
Қосымша мәліметтерді Amazon CloudFront
сервисінің ресми құжаттамасынан қарауға болады.

01:15:09.400 --> 01:15:14.400
Біз дәрістің алтыншы және
қорытынды бөлімін аяқтадық.

01:15:14.400 --> 01:15:20.400
Amazon CloudFront сервисі туралы
егжей-тегжейлі талқыладық,

01:15:20.400 --> 01:15:24.400
сонымен қатар CDN не екенін,
не үшін қолданылатынын білдік,

01:15:24.400 --> 01:15:32.400
сондай-ақ бізге CDN ұсынатын AWS
сервисі бар екенін білдік.

01:15:33.400 --> 01:15:37.400
CloudFront сервисін пайдаланудың
артықшылықтары – бұл сервис жаһандық,

01:15:37.400 --> 01:15:41.400
сіз оны икемді түрде теңшей аласыз,
оның күй-өзгерісін бағдарламалай

01:15:41.400 --> 01:15:48.400
аласыз, сонымен қатар қажетті қауіпсіздік
параметрлерін орната аласыз.

01:15:48.400 --> 01:15:58.400
Бұл AWS сервисі, демек, басқа
сервистермен жақсы біріктірілген және

01:15:58.400 --> 01:16:03.400
сіз өзіңіздің қосымшаларыңыздың
пайдаланушыларына үлкен

01:16:03.400 --> 01:16:09.400
ауқымды ақпарат жіберген кезде
өте үнемді шешім болып табылады.

01:16:11.400 --> 01:16:19.400
Осымен біз дәрісімізді аяқтаймыз. Бүгінгі өткен
маңызды мәліметтерге шолу жасап шығайық.

01:16:19.400 --> 01:16:27.400
Бұл біз AWS-ке тікелей байланысты емес желі
негіздерін, бірақ бұл AWS ішіндегі

01:16:27.613 --> 01:16:34.400
Networking-ке қатысты сервистерді түсінуге
көмектесетін ақпаратты қарастырдық.

01:16:35.400 --> 01:16:42.425
Әрі қарай, біз Amazon VPC сервисімен таныстық,
қосымша құрамдастарын, соның ішінде қауіпсіздікті

01:16:42.437 --> 01:16:49.400
қамтамасыз етуге көмектесетін компоненттерін
қарастырдық, Security groups және NetworkACLs.

01:16:51.400 --> 01:16:58.400
Осыдан кейін біз Amazon CloudFront және
Amazon Route 53 сервистерімен таныстық,

01:16:58.400 --> 01:17:01.400
осы сервистерді пайдалану мысалдарын
және бұл сервистердің

01:17:01.400 --> 01:17:08.400
бұлтта инфрақұрылымымызды жақсартуға
қалай көмектесетінін қарастырдық.

01:17:09.400 --> 01:17:20.400
Бүгінгі өткен сервистер жайлы толығырақ
ақпаратты мына сілтемелерден таба аласыз.

01:17:21.400 --> 01:17:29.400
Осымен дәрісіміз аяқталды. Сіз бүгін жаңа
ақпарат білдіңіз деп үміттенемін.

01:17:29.400 --> 01:17:32.400
Келесі белсенділіктерде кездескенше,
сау болыңыздар!