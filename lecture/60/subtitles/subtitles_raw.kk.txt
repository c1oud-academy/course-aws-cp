Қайырлы күн, құрметті студенттер! Сізді келесі дәрісте көруге қуаныштымын. Бүгін біз туралы Networking сөйлесеміз Content Delivery. Сонымен, бастайық.
Бүгінгі дәріс алты бөлікке бөлінген. Бірінші бөлімде біз желілердің негіздері туралы сөйлесеміз және негізгі ұғымдарды қарастырамыз, яғни Networking basics. Әрі қарай, келесі үш бөлікте біз қызмет туралы сөйлесеміз Amazon Virtual Private Cloud немесе сіз қалай таба аласыз Amazon VPC. Біз тақырыптарды қозғаймыз VPC networking және VPC security. Соңғы екі тақырып - екі бөлек қызмет, біріншісі - Amazon Route 53-қызмет, екіншісі - қызмет Amazon CloudFront.
Біз бірінші бөлімді бастаймыз, бұл желілердің негіздері. Біз сізге келесі бөлімдерді, атап айтқанда, қызметтерді желілер туралы сөйлескенде, атап айтқанда бөлімдерді түсінуді жеңілдету үшін желінің негіздерін қарастырамыз Amazon VPC. AWS Желі дегеніміз не? Желі - бұл ақпарат алмасу үшін бір-бірімен байланысқан екі немесе одан да көп клиенттік машиналар. Желіні логикалық бөліктерге бөлуге болады, олар деп аталады subnets. Машиналарды бір-біріне қосу үшін бізге желілік жабдық қажет. Желілік жабдық қалай әрекет ете алады switch немесе router. Желі ішіндегі әрбір машинада IP белгілі бір желі ішінде осы құрылғыны анықтайтын бірегей мекен-жайы бар.
IP -адрес - ондық жүйедегі сандық белгі, ол төрт бөліктен тұрады. Содан кейін машина сіз көріп отырғандай, екілік жүйеге түрлендіріледі, және, осылайша, бағдарлама осы IP мекен-жайы бар ең төменгі деңгейде жұмыс істейді. Біз оны ондық жүйеде көреміз, ал мысал ретінде сіз 192.0.2.0 көресіз. Әрбір бөлім, IP мекен-жай ішіндегі бөлім - бұл нөлден 255-ке дейінгі мәндерді қабылдай алатын сан, яғни 256 бірегей мәндер. 256 - 8 қуатына 2, яғни екілік жүйеде нөлден 255-ке дейінгі сандарды белгілеу үшін 8 бит бөлу керек дегенді білдіреді. Нөлдерден бастап 8 рет (00000000), аяқталатындар 8 рет (11111111). Осылайша, IP екілік форматтағы мекен-жай 8 есе 4 = 32 бит.
Біз сізбен IP мекен-жай 32 биттен тұрады деп сөйлестік. Бұл мекен-жай IPv4 деп аталады -мекен-жайы. Сондай-ақ, бізде IP мекен-жайдың тағы бір түрі бар IPv6, оның ұзындығы 128 бит, және ол белгілі бір желі үшін одан да ерекше IP мекенжайлар жасай алады. Мекенжай туралы IPv6 сөйлескен кезде, ол 8 топ түрінде ұсынылған. Әр топта әріптер мен сандар болуы мүмкін. Біз бұл мекенжайды он алтылық белгілерде көреміз және әр топ 16 битті білдіреді және нөлден бастап өзгеруі мүмкін FFFF. Мен мұны он алтылық белгілерде қайталаймын. Жұмыста сіз тікелей IPv6 мекен-жайларды жиі кездестірмейсіз. Сіз негізінен IPv4 -мекенжайлармен жұмыс жасайсыз. Сонымен, оны толығырақ қарастырайық.
Жергілікті желіде мүмкін IPv4 мекен-жай мәндерінің тізімін анықтау үшін біз CIDR блокты қолданамыз. CIDR ретінде шешіледі болады Classless Inter-Domain Routing. Ол келесі форматта жазылған: бұл бастапқы мекен-жай, яғни. форматтағы ең алғашқы IP мекен-жай IPv4, содан кейін 0-ден 32-ге дейінгі мәнді қабылдай алатын қиғаш сызық және сан. Бұл біз қанша бит жазғанымызды білдіреді. Біз бәріміз есімізде, IPv4 мекен-жайы 32 биттен тұрады. Сондықтан, егер CIDR блоктың 24 дейтінін байқасақ, бұл 32 биттің 24-і бекітілген және оны өзгерту мүмкін емес дегенді білдіреді. Осылайша, 8 бит өзгеруі мүмкін. Біз 8 бит айтқан кезде, бұл бірегей IP мекенжайлардың саны 2-ден 8-ге дейін, 2-ден 8-ге дейін 256. Осылайша, біздің CIDR слайдта көрсетілген нақты блок 256 бірегей IP мекенжайды ала алады. Бұл желіге тиесілі алғашқы IP мекен-жай - 192.0.2.0. Осылайша, біз өзгерте алатын соңғы бөлік, 0.1.2.3.4, 0-ден келесі келеді. Сонымен, 192.0.2.255 мекен-жайы IP болатын ең соңғысына дейін. Бұл жақсы. Бұл түсінікті деп үміттенемін және материалды шоғырландыру үшін біз келесі іс-шараларды жасаймыз.
Бізде бірінші бөлік сәйкес келетін CIDR блок бар деп елестетіп көрейік, яғни 192.0.2.0 24 орнына қиғаш сызық 16 болады. Бұл бейнені тоқтатып, осы CIDR блокпен осы желінің қанша ерекше мекен-жайы болатынын есептеуге тырысайық. Жарайды, менің ойымша, барлығыңыз мұны жасадыңыз. Дұрыс жауап - 65536. Біз бұл нөмірге қалай жеттік? Біздің CIDR блогымыз 192.0.2.0/16 екенін айттық. Бұл 32 биттік IP мекенжайлардың 16-сы жазылғанын білдіреді. Бұл дегеніміз, бізде дәл 16 бит бар flexible, сондықтан олар өзгеруі мүмкін. Біз 16 бит айтқан кезде, бұл 16 бірегей IP мекен-жайдың қуатына 2 дегенді білдіреді. Егер біз 2-ді 16-ға дейін санасақ, бұл 65536. Жарайды, менің ойымша, бұл жерде айқынырақ.
Тағы екі шекаралық жағдайды қарастырайық. Бізде келесі типтегі CIDR блок бар деп елестетіп көрейік 192.0.2.0/32. Тағы бір әрекетті жасайық және осы CIDR блокта қанша IP мекен-жай бар екенін есептеуге тырысайық. Сіз бейнені тоқтата аласыз. Ал, мен сіздердің әрқайсыларыңыз дұрыс есептеп, дұрыс жауап ала алды деп сенемін. Дұрыс жауап - 1. CIDR /32 аяқталатын блок бір машинаны анықтайды. Мұны қалай есептейсіз? /32 деп айтқан кезде, бұл бізде 32 бит бекітілген дегенді білдіреді. Біздің IPv4 мекен-жайымызда тек 32 бит болғандықтан, бізде қанша бірегей мекен-жай бар екенін есептеу үшін біз 32-ден 32 битті алып тастаймыз, сонымен қатар бізде 32 бит бар. 32-32 0 болып шығады, ал 0 қуатына 2 бізге 1 береді. Осылайша, сіз жұмыс істеген кезде AWS Management Console, белгілі бір IP мекенжайды көрсету үшін сіз CIDR блок/32 екенін білесіз және сіз өзіңіздің IP мекен-жайыңызды сәйкесінше көрсетесіз. Amazon
Екінші шекаралық жағдай, мен оны әрекет ретінде сұрамаймын, бірден жауап берейік. Бізде 0.0.0.0/0 CIDR блогы бар деп айтқан кезде, бұл жағдайда біз ең алғашқы IP мекен-жайдан бастайтынымызды түсінеміз, өйткені бізде 0 биттердің саны жазылған, барлық биттер өзгеруі мүмкін, яғни, flexible бұл дегеніміз, біз осы желіде 32 қуатына 2 бірегей мекен-жайы бар және бұл бүкіл Интернет. Сондай-ақ AWS Management Console, сіз бүкіл Интернетке кіруді ашқаныңызды немесе Интернетке route жол ашқаныңызды немесе Интернетке кіруге тыйым салғаныңызды немесе Интернетке кіруге тыйым салғаныңызды көрсетуіңіз керек болған кезде, содан кейін CIDR блок ретінде сіз әрқашан көрсете аласыз барлық нөлдер 0 қиғаш сызық нүктесі арқылы, бұл Интернет болады.
Келесі модельмен танысуымыз керек, мүмкін сіз оны өткен шығарсыз, бұл OSI модель, Open Systems Interconnection Model яғни. Бұл модельдің негізгі идеясы - ол деректердің желі бойынша қалай тасымалданатынын тұжырымдамалық түрде сипаттайды, яғни бізде 7 деңгейлер, физикалық деңгейге дейін, біз бірізділігі мен нөлдер деңгейінде жұмыс істеген кезде. application Ең жоғары деңгей application - біз HTTP протоколға HTTPS және басқаларға сәйкес жұмыс істеген кезде. Осылайша, біз HTTP request сайтқа сұраныс жасаған кезде, ол жоғарғы деңгейден ең төменгі деңгейге дейін төмендейді, нәтижесінде бізден нөлдер мен олардың тізбегі біздің алушыға өтеді. Біздің бірізділігіміз бен нөлдеріміз, яғни біздің деректеріміз немесе сұрауымыз алушыға жеткенде, ол осы тізбекті шешіп, оқу, түсіну және мүмкін хабарламамен жауап беру application үшін жоғарғы деңгейге шығады. Жауап сонымен қатар жоғарғы деңгейден төменге қарай төмен түседі және сізге келген бойда, осы тізбекті оқып шығу үшін сіз ең төменгі деңгейден ең жоғары деңгейге өтіп, жауапты бастапқы түрінде аласыз сізге жіберілген. Бұл ақпарат желінің қалай жұмыс істейтінін, деректердің желі арқылы қалай ағып жатқанын және жалпы алғанда, қызметтің қалай жұмыс істейтінін түсіну оңайырақ Amazon VPC.
Біз дәрістің екінші бөлігіне көшеміз және қызмет туралы көбірек білетін боламыз Amazon VPC. Amazon VPC жақтайды Amazon Virtual Private Cloud. Бұл бұлтта логикалық оқшауланған желіні орнатуға мүмкіндік беретін қызмет. Сізде осы желіні толық бақылау бар, және сіз осы желіде ресурстар жасай аласыз. Сонымен қатар, сіз осы желідегі кез-келген теңшелетін параметрлерді қолдана аласыз, сонымен қатар қауіпсіздіктің бірнеше деңгейі бар, бұл Security Group және Network Access Control Lists немесе жиі, сіз қалай көресіз Network ACLs.
Мұнда сіз бұлтта қалай орналасуы VPC мүмкін екенін түсіндіретін диаграмманы көре аласыз. Біз сөйлескен кезде VPC, бұл тек бір AWS шотта. Ол сонымен қатар сол аймақта VPC толығымен орналасуы керек. Егер сізге бірнеше аймақты пайдалану қажет болса, сізде әр аймақ VPC үшін біреу болады. Бізде аймақ ішінде бірнеше болуы мүмкін екендігі бәріміздің есімізде availability zone. Осылайша, біреуі availability zone бірнеше болуы VPC мүмкін.
VPC біз бұрын айтқан блокпен CIDR анықталады. VPC Сондай-ақ, біз бірнеше логикалық топтарды жасай аламыз, олар деп аталады subnets. Subnets сонымен қатар CIDR кішігірім блокпен анықталады. Және range, яғни, IP -address үшін мүмкін мәндер subnet, олар мүмкін мәндерге қосылуы керек VPC. subnets Салыстырмалы түрде олар екі түрі болуы мүмкін. Біріншісі - бұл private, екіншісі - бұл public. Public бұл Интернеттен қол жетімді. subnets private Бұл Интернеттен қол жетімді емес. subnets
Мен CIDR блоктар болуы мүмкін мөлшері туралы бірнеше сөз айтқым VPC келеді. Максималды өлшем - 65536 бірегей IP мекен-жай, ол/16 CIDR блокқа тең. Ең кішкентайлары - 16 IP мекен-жай. CIDR Блокта ол/28 түрінде жазылған, яғни бізде 4 түрі болуы мүмкін flexible, яғни. Өзгерту. Блок туралы сөйлескен кезде VPC, осы CIDR CIDR блоктың өлшеміне, сондай-ақ бастапқы IP мекен-жайға мұқият және жауапкершілікпен қарау өте қажет. Бұл сіз тағайындаған CIDR блокты кейінірек өзгерту VPC мүмкін емес екендігіне байланысты. Сондықтан CIDR блокты өзгерту қажет болса, жаңасын жасау керек VPC. Егер VPC сізде жұмыс істейтін ескі ресурстарыңыз болса, сіз осы ресурстардың барлығын жаңа CIDR блокпен жаңасына ауыстыру үшін уақыт, күш, ақша және адамдарды бөлуіңіз керек. VPC Бұл өте қымбат және қайғылы болуы мүмкін, сондықтан ереже сіз жеткілікті маржамен өлшемді таңдайсыз VPC. Сонымен қатар, олар бір-бірімен VPC қиылыспайтынын әрқашан ұмытпаңыз. Егер VPC сізде әртүрлі AWS есептік жазбалар болса да, болашаққа арналған бұл ұсыныс бір-біріне сәйкес келмейтін CIDR блоктарды жасау болып табылады, өйткені қосылуға AWS көмектесетін әртүрлі қызметтер бар VPC әр түрлі шоттардан бір-біріне. Егер бұл CIDR блоктар VPC қиылысса, сіз оларды біріктіре алмайсыз, сондықтан әрқашан осы нүктені қарастырыңыз.
Басқа нәрсе subnet біз туралы. Жоғарыда айтылғандай, CIDR блок subnet -a CIDR блоктың бөлігі болуы керек VPC. Максималды өлшем subnet -a өзі өлшеміне тең болуы мүмкін VPC. Сондықтан бұл жерде тек VPC біреу болады subnet. Егер біз VPC ішіне бірнеше subnet с жасасақ, біреуінің ішіндегі CIDR блоктар да бір-біріне сәйкес VPC келмейтініне көз жеткізуіміз керек.
Үлкен немесе кіші емес CIDR блокты жасаған кезде, бұлтты AWS есептеулер үшін VPC немесе маңызды емес subnet сияқты AWS, ол 5 IP жүйені пайдалану үшін мекенжайлар. Сіз range CIDR блоктағы ең бірінші IP мекен-жай үшін сақталғанын көре аласыз, екіншісі үшін network address, үшіншісі үшін internal communication DNS resolution, блоктағы төртінші мекен-жай болашақта пайдалану үшін сақталған, ал соңғысы ретінде пайдаланылады network broadcast address. Осылайша, /24 өлшемі бар CIDR блок үшін, яғни 256 бірегей мекен-жай, минус 5 сіздің пайдалануыңыз үшін қол жетімді, бұл 251 IP мекенжайды білдіреді.
Мұнда тағы бір әрекетті жасайық. Ал мәселе келесі болып табылады. Келесі CIDR блокты елестетіп көріңіз: 10.0.0.0/28. Сұрақ. Сіз пайдалану үшін осы CIDR блок ішінде қанша IP -address қол жетімді? Жарайды, менің ойымша, сіз бәрін жасадыңыз. Математиканы бірге жасауға тырысайық. CIDR /28 өлшемі бар блок 30 биттік IPv4 CIDR блоктағы 28 биттің бекітілгенін көрсетеді, яғни өзгеруі мүмкін биттердің саны 32 минус 28 - 4. 4 бит үшін қанша IP -мекен-жайлар келесідей есептей аламыз. Мұны істеу үшін біз 2-ді шыққан қуатқа санаймыз, біздің жағдайда 4, 2-ден 4-ке дейін 16. Жаңа ғана айтқанымыздай, жүйені пайдалану үшін 5 мекен-жай AWS сақталған. Сондықтан 16 минус 5 - 11. /28 өлшемі бар CIDR блоктың жауабы 16 емес, бірақ біздің пайдалануымыз үшін қол жетімді 11 бірегей IP мекен-жай.
Қоғамдық IP мекенжайлар туралы сөйлескен кезде екі түрі бар. Біріншісі - жалпыға ортақ IPv4 мекен-жай және ElasticIP -мекен-жай. Олар қалай ерекшеленеді? Бұлт VPC ішінде жасаған кезде AWS, сол бұлттағы барлық даналар VPC автоматты түрде шақырылған ішкі IP мекенжайды алады private IP address. Бірақ сонымен бірге, сіз жасау Auto assign public IP address кезінде құсбелгіні тексере аласыз VPC. Сонымен қатар private IP address, барлық даналар динамикалық public IPv4 address алады public IP address. Егер сізге статикалық қоғамдық IP мекен-жай қажет болса, онда сіз осы мүмкіндікті қамтамасыз Elastic IP address ететін функционалдылықты пайдалана аласыз. Сіз бұл IP мекенжайды ресурсқа, атап айтқанда данаға немесе сіздің ішіндегі интерфейске байланыстыра аласыз VPC. c Назар аударыңыз, бұл қызмет, Elastic IP address сондай-ақ ақылы болып табылады. Осылайша, ештеңе төлемеу үшін ресурстарға байланбаған барлық нәрсені босату туралы ереже жасау Elastic IP address керек.
Мен туралы бірнеше сөз айтқым келеді Elastic Network Interface. Бұл c сіздің данаңызға сілтеме жасай алатын жеке ресурс VPC, ол белгілі IPv4 бір мекен-жайға қызмет ете алады. Сонымен қатар Elastic Network Interface, әр c дананың ішінде біреуі VPC бар Default Network Interface. Default Network Interface Бұл сіздің CIDR блогыңыздан таңдалған Private IPv4 мекен-жаймен байланысты VPC. Сіз данаға белгілі бір Network Interface даналарды қоса аласыз және бұл сан c дананың түріне байланысты c және ол неғұрлым жоғары болса, соғұрлым үлкен болса, соғұрлым көп Network Interface белгілі c бір данаға қосыла алады.
Оның не екенін мұқият қарастырайық Route table. Route table ережелер жиынтығынан тұратын кесте болып табылады, rule немесе routes. Әрбір ереже жөнелту орны мен баратын жері бойынша немесе ағылшын тілінде анықталады destination and target. Біздің елімізде destination белгілі бір CIDR блок қалай әрекет етеді, ол біздікін subnet сипаттай алады және target көрсетілгендей, белгілі бір ресурс. Route table Әркімнің бірінші, ең негізгісі бар rule. Бұл rule біздің барлығымыздан, subnets target көрсетілгендей local. Бұл біздің арамыздағы барлық жағдайлар subnet бір-бірімен өзара әрекеттесуі үшін қажет.
VPC Route table Әдепкі деп аталады Main Route table. Ол автоматты түрде жасалады және біздікімен байланыстырылады VPC. Маңыздысы, барлығы байланысты болуы subnet керек, Route table яғни. олардың біреуіне байланған. Бірақ әркімнің subnet біреуден көп болуы Route Table мүмкін. Сонымен қатар, әркімнің біреуден көп болуы VPC мүмкін Route table. Осылайша сіз өзіңіздің routes барлығыңызды икемді түрде конфигурациялай аласыз subnet.
Біз екінші бөлімді аяқтаймыз. Есте сақтау үшін негізгі ойлардан өтейік. VPC бұлттың логикалық оқшауланған бөлігі AWS, онда біз қажетті ресурстарды жасай аламыз. VPC тек бір шотқа және бір нақты аймаққа қолданылады. Бірақ ол бір аймақтағы бірнеше availability аймақта орналасуы VPC мүмкін. VPC бір нақты CIDR блокпен анықталады. Біз алдыңғы бөлімде CIDR блоктың не екенін талқыладық. Барлығын subnet -s деп аталатын логикалық топтарға бөлуге VPC болады. Әрқайсысы subnet CIDR блоктың бөлігі болуы керек CIDR блокпен анықталады VPC. Бізде де осындай нәрсе бар Route table, өйткені бұл біздің subnet ішіміздегі трафикті басқаратын ресурс VPC. Бізде әрқайсысының Local Route ішіне Route table кірістірілген жол бар, оны жою мүмкін емес және әр түрлі даналардағы барлық subnet даналарды бір-бірімен байланысуға мүмкіндік VPC береді. routes rules Желілік ағындарды икемді конфигурациялау Route table үшін сізге қосымша немесе ережелер қосуға болады VPC.
Сіз және мен оны үшінші бөлімге айналдырдық. Үшінші бөлімде ішкі трафикті бағыттауды конфигурациялау ерекшеліктері туралы сөйлесеміз VPC. Маңызды компоненттердің бірі VPC болып табылады Internet gateway. Internet gateway Интернетті сіздің даналарыңызға қосу үшін қолданылады VPC. Сізді public subnet көпшілікке, яғни Интернеттен қол жетімді ету үшін біз өзімізге Internet gateway қосып, route қосуымыз керек Route Table, онда Интернет  межелі актілер, яғни 0.0.0.0/0, біздікі сияқты target әрекет етеді Internet gateway.
Тағы бір жиі кездесетін жағдай - бұл инстанциялардың онлайн режимінде өтуі private subnet керек. Сонымен қатар, біз Интернетке қол жетімділіктің инстанцияларға жетуіне жол бермеуіміз керек private subnet. Осы мақсаттар үшін, деп аталады Network Address Translation gateway, сіз оны жиі кездестіресіз NAT gateway. Оны дұрыс gateway орнату үшін алдымен оны орнату керек public subnet. public subnet Біз бәріміз оны қалай орнату керектігін білеміз. Мен оны қайтадан айтамын. Сізде өзіңіз үшін public subnet, және сіз өзіңіз үшін, сіз өзіңіз көрсеткендей, сіз бүкіл Интернетті көрсеткенде, destination сіз өзіңіз үшін бар деп target елестетіп көрейік route table Internet gateway . Сіздікі осылай subnet болады public. Әрі қарай, ішінде public subnet біз жасаймыз NAT gateway. Енді біз route Интернеттен route table private subnet қосуымыз керек, destination яғни Интернет, бірақ ол target NAT gateway. Осыдан кейін, ішіндегі private subnet барлық даналар Интернетке арқылы қол жеткізе алады NAT gateway. Сонымен бірге NAT gateway, Интернеттен сұраулар private subnet қайтарылмайды. Сонымен қатар, теңшеудің тағы бір нұсқасы NAT gateway бар NAT instance, яғни жеке EC2 данасы көтеріліп, оған конфигурацияланған NAT gateway. Айырмашылық, егер данасы бұзылса, оған бір нәрсе болады, сіз Интернет қосылымын жоғалтасыз және оны ауыстыру қажет болады. Егер біз туралы айтатын болсақ NAT gateway, бұл managed service Amazon, сондықтан барлық ықтимал бұзылулар, қол жетімсіздік сырттан Amazon және кез-келген жағдайда беріледі бұзылулар, олар сіз үшін жаңа жұмыс ресурстарымен ашық түрде ауыстырылады. Сондықтан оны NAT gateway орнына Amazon қалай best practice пайдалану керектігі туралы ұсыныс бар NAT instance.
Сіз іштей жүзеге асыра алатын бір қызықты AWS тәсіл VPC sharing. Идея, сіз өзіңіздің subnets бөлісіңіз ретінде басқа есептік VPC жазбадан бөлісе аласыз. VPC Бірақ бұл шот қоғамдық шотта болуы керек AWS Organizations. Бірнеше нюанстар бар. Бұл сіз осы ресурстардың барлығын көре аласыз және өзгерте аласыз shared subnet, бірақ сіз осы жерде орналасқан басқа есептік жазбалардың ресурстарын көре алмайсыз немесе өзгерте алмайсыз subnet. Осы аясында бірге жұмыс істейтін барлық қатысушылар үшін де солай shared subnet. Бұл тәсіл осы инфрақұрылымның қосымшалары өзара байланысты IT IT инфрақұрылымдарға өте жақсы қолданылатын болады. Сонымен, қолданбалар арасындағы байланысты жеңілдетумен қатар, кейбір ортақ ресурстарды үнемдеуге болады, мысалы NAT gateway, VPC Interface Endpoints және т.б.
Ішінде қабылдауға болатын тағы бір қызықты AWS тәсіл VPC peering. Бұл әртүрлі адамдарды қосуға мүмкіндік беретін мүмкіндік VPC. Олар бір шотта немесе бірнеше түрлі шоттарда болуы VPC мүмкін. Қосылым жасау үшін, яғни екеуінің peering connection арасында VPC, алдымен, орталықта көріп отырғаныңыздай, peering connection ресурс жасау керек pcx-id, сонымен қатар оларды қосыңыз VPC route әрқайсысы үшін сәйкес route tables келеді.
route table Толығырақ, VPC A біз CIDR блоктың route қай жерде destination VPC B екенін және қалай қосуымыз керек target біздің peering connection ресурсымызды көрсетіңіз, яғни біз ол арқылы бізге жетеміз VPC B. Және route table -e route, CIDR блок destination көрсетілген кезде керісінше VPC B жасаңыз VPC A, target бірақ а peering connection ресурс.
Біз туралы VPC peering сөйлескен кезде бізде бірнеше шектеулер бар. Бірінші және ең бастысы - IP мекен-жайлар, яғни CIDR блоктар қиылысуы мүмкін емес. Егер олар қабаттасса, сіз теңшей алмайсыз peering connection. Мен сізге алдыңғы слайдтарда айттым, және сіз әрқашан қосылуды VPC жоспарламасаңыз да, барлық CIDR блоктары бар орталық тізім болуы керек екенін есте ұстауыңыз керек, сондықтан оларды жасауға болатындай етіп жасау керек қиылыстар. Екінші мәселе - бұл өтпелі VPC peering емес. Бұл дегеніміз, егер біз және арасында байланыс орнатсақ VPC B VPC C, VPC A VPC B онда <span translate="no">VPC A арасында VPC C ешқандай байланыс болмайды </span>және. Егер сізге VPC A қосылу қажет болса VPC C, бөлек орнату керек peering connection. Есте сақтау керек тағы бір мәселе - VPC сіз тек екеуінің арасында біреуін орната аласыз peering connection.
Осы уақыт ішінде біз сіздермен бұлт ішіндегі желілерді қалай қосуға болатындығы туралы сөйлестік. Егер біз бұлтқа жергілікті кеңседен немесе жергілікті деректер орталығынан қосылуымыз керек болса, бұл опция да қол жетімді. Осы мақсатта AWS Site-to-Site VPN мұның бәрін конфигурациялауға мүмкіндік беретін қызмет бар. Жергілікті кеңседен бұлтқа кіруді қамтамасыз ету үшін сізге қажет ең негізгі нәрселерден VPC өтейік. Біз жасауымыз керек ең бірінші нәрсе - деп аталатын Virtual Private Network Gateway немесе Virtual Gateway. Сіз экранның ортасында көре аласыз Virtual Gateway ID. Ол біздікіне бекініп жатыр VPC. Әрі қарай, біз оны конфигурациялауымыз керек Customer Gateway. Customer Gateway ресурс емес, бұл AWS сіздің VPN құрылғыңыз AWS туралы ақпарат беретін ресурс, яғни. жабдық. Үшіншіден, біз конфигурациялауымыз керек Private Subnet route table, мысалы route, жергілікті кеңсеміздің қай жерде екенін, destination яғни біздің жергілікті кеңсе CIDR блогын қосуымыз керек vgw-id, және target бұл Virtual Gateway ID. Осыдан кейін біз екі жүйені бірге қосу үшін қызметті пайдалануымыз керек AWS Site-to-Site VPN. Бұл жергілікті инфрақұрылымды бұлттағы инфрақұрылыммен байланыстыру үшін жасалуы керек негізгі мәселелер AWS.
Біздің бұлтты инфрақұрылымымызды жергілікті инфрақұрылыммен байланыстыруға мүмкіндік беретін келесі ұқсас қызмет - бұл қызмет AWS Direct Connect. Оның айырмашылығы - алдыңғы қызмет жағдайында AWS Site-to-Site VPN біз VPN қосылымды Интернет арқылы конфигурациялаймыз. Осылайша, бізде байланыс бар, бірақ деректерді беру жылдамдығы мен желілік арна Интернет арнасының мөлшерімен анықталады, егер сізде Интернет байланысы әлсіз болса, бұл сіздің бұлтқа қызмет арқылы қосылуыңыз да аз AWS Site-to-Site VPN болады дегенді білдіреді. Егер сізге көп мөлшерде деректерді беру немесе оны тезірек беру қажет болса, онда Интернетті айналып өту мүмкіндігі бар, басқаша айтқанда DX-locations, жаһандық AWS инфрақұрылымға қосылу мүмкіндігі бар және біз оған тікелей қосыламыз. Бұл жағдайда онлайн режимінде жүрудің қажеті жоқ, бірақ біздің жергілікті инфрақұрылымды бұлттағы инфрақұрылыммен тікелей байланыстырыңыз.
Көбінесе сіз AWS қызметке қоңырау шалуыңыз керек VPC, яғни. барлық қызметтер ішінде жұмыс AWS істей алмайды VPC, бірақ соған қарамастан, бізге VPC қол жеткізуге мүмкіндік беретін шешім бар ішкі желіден шықпай AWS немесе онлайн режимінде жүрместен бізге қажет қызметтен AWS. Бұл деп аталады VPC endpoints, екі түрі бар Interface VPC endpoint, Interface endpoint бұл немесе қолдайды AWS Private Link. Басқа нұсқа - бұл Gateway endpoint. Сізге қандай қызметке байланысты, сіз қандай опцияға қолдау көрсетілетінін endpoint және оны сәйкесінше пайдалану үшін құжаттаманы тексере аласыз.
Қызметпен жұмыс істеу үшін конфигурациялануы керек қызметтің мысалын қарастырайық Amazon S3. Amazon S3 VPC Мұны істеу үшін біз ресурс жасауымыз керек VPC Endpoint, сонымен қатар біз route table үшін қосымша subnet тағайындауымыз керек route, онда Amazon S3 ID ол  межелі болып табылады, және біздің VPC endpoint ресурс target болып табылады.
Біраз ертерек VPC peering, біз әр түрлі AWS шоттарда болса да VPC, екі бөлек есептік жазбаны қосу керек болған кезде айттық. Бұл тәсілдің шектеулерінің бірі - өтпелі жоқ, яғни. біріншіден екіншісіне, екіншісін үшіншіге VPC қосасыз және бұл біріншіден үшіншіге дейін байланыс бар дегенді білдірмейді. Егер біріншісін үшіншіге VPC қосу қажет болса, қосылым пайда болуы VPC peering connection үшін бөлек орнату керек.
Енді слайдтың сол жағында бірнеше түрлі болатын жағдайды елестетіп көріңіз VPC, сонымен қатар VPN қосылымдар бар және олардың барлығы бір-бірімен байланысты. Барлығын VPC қосу үшін, қайтадан, бұл сіздің бизнес қажеттіліктеріңізге байланысты, содан кейін сіз осы нөмірді жасауыңыз керек VPC peering. Мұны сақтау өте ыңғайсыз болуы мүмкін, және әр уақытта үлкен сан VPC peering жасалады. Қолданыстағы IT инфрақұрылымдарда ұқсас мәселені шешу үшін қызметті пайдалану ұсынылады AWS Transit Gateway. Оның идеясы - бұл принцип бойынша жұмыс істейді Hub and Spoke Model, яғни ол орталық хаб VPC ретінде AWS Transit Gateway әрекет етеді және бұған қосылғандардың барлығы Transit Gateway автоматты түрде қол жеткізе алады қазірдің VPC өзінде қосылған әркім AWS Transit Gateway. Сонымен, сіз өзіңіздің инфрақұрылымыңыздың көрінісін қалай жеңілдетуге болатындығын оң жақта көре аласыз AWS Transit Gateway.
Сіз және мен оны 3-бөлімнің соңына дейін жасадық. Біз не болғанымызды жылдам қарастырайық. Бірінші VPC компонент - Internet Gateway Интернетті біздің ресурстарымызға қосуға көмектеседі, содан кейін компонент бар NAT Gateway немесе public subnet NAT Instance бұл c пайдаланушыларға Интернетке Private Subnet кіруге тыйым салып, Интернетке кіруге және ішіндегі c даналарға қосылуға мүмкіндік береді private subnet. Әрі қарай, біз туралы әңгімелестік VPC Endpoint. Идея, барлық қызметтер ішкі емес VPC, және сіздің бизнес талаптарыңызға байланысты, егер сізге осы қызметті пайдалану қажет болса AWS, сіз осы қызметтен өзіңізге қосыла аласыз AWS, бірақ желіде, яғни. бұл қызметтен сіздікіне қосылыңыз, VPC сонда ол қауіпсіз, тезірек және тұтастай алғанда сізге қажетті қызметке қол жеткізе аласыз. VPC Келесі нәрсе - сіздің жұптарыңызды жұппен VPC байланыстыру қажет VPC peering болған кезде және VPC олар әр түрлі AWS шоттарда болуы мүмкін. Келесі нәрсе - бұл VPC sharing. Идея - сіз өзіңіздің басқаларыңызбен VPC, басқа VPC AWS шоттардан subnets бөлісе аласыз. Қарастырудың негізгі нүктесі - барлық шоттар бірдей AWS O rganizations. Әрі қарай, біз сізбен сөйлестік AWS Site-to-Site VPN. Идея мынада, сіз өзіңіздің бұлтты инфрақұрылымыңызды Интернет арқылы жергілікті инфрақұрылымға арнайы байланыс VPN жасау арқылы қосуға болады. Бұл тәсілдің артықшылықтары мен кемшіліктері бар. Басқа нұсқа - бұл AWS Direct Connect. Идея, сіз бұлтқа Интернет арқылы қосылмайсыз, бірақ жаһандық инфрақұрылымға қосыласыз AWS. Осылайша, сізге онлайн режимінде жүрудің қажеті жоқ, сонымен бірге сіз үлкен арнаны аласыз. Егер сізге жергілікті кеңседен бұлтқа немесе артқа көп ақпарат беру қажет болса, бұл опция жақсы. Біз сөйлескен соңғы нәрсе осы болды AWS Transit Gateway. Идея, егер сіздікі тығыз байланыста болуы VPC керек болса және оларды VPC peering қолданған кезде сіз VPC peering олардың көп санын жасайсыз, содан кейін шешім қалай болуы AWS Transit Gateway мүмкін барлығыңыз байланыстыратын орталық ресурсқа Transit Gateway ие болыңыз VPC. Осылайша, қосылған барлық адамдар оған қосылған барлық VPC адамдарға қол жеткізе VPC алады Transit Gateway.
Біз оны төртінші бөлімге жасадық. Бұл бөлімде біз қауіпсіздік туралы сөйлесеміз VPC. Бастайық. Біз бастайық Security Groups. Security Groups кіріс және шығыс трафикті басқаруға мүмкіндік беретін сіздің даналарыңыз firewall үшін виртуалды болып табылады. Security Groups Олар сатыдағы деңгейде жұмыс істейтінін есте ұстаған жөн. Осылайша, сіз оның ішінде әрбір данасы үшін теңшелетін subnet жиынтығын орнатуға болады Security Groups. Біз туралы айтатын болсақ Security Groups, мұны кіріс және шығыс трафикті басқаратын ережелер жиынтығы деп түсінуіміз керек. Security Groups Жаңадан құрылғанда сізде Inbound Rules, яғни кіріс трафигі болмайды. Осылайша, үшінші тарап хосты жаңадан жасалған данамен байланыса алмайды және данаға жете алмайды Security Group. Егер біз айтып отырсақ Outbound Rules, яғни шығыс трафик, содан кейін әдепкі бойынша ол толығымен рұқсат етілген және ештеңемен шектелмейді. Егер сізге шығыс трафикті шектеу қажет болса, әдепкі бойынша жасалған ережені жойып rule, белгілі бір дәрежеде шектелген өз ережелеріңізді орната аласыз.
Айта кету керек stateful, Security Groups олар сіздің данаңыздан басқа ресурсқа сұраныс жасаған кезде, егер сізде болса Outbound traffic, сұрауға рұқсат етіледі. Содан кейін, сіздің сұранысыңызға жауап алған кезде, оған Inbound Rule рұқсат етілгеніне немесе бас тартылғанына қарамастан, сіз оны аласыз, яғни. мәртебе есте қалады. Керісінше де дұрыс, яғни. егер сыртқы Inbound Rule ресурстардан рұқсат етілсе, онда ол сырттан келген мемлекет есте қалады, өйткені ол қазірдің өзінде шешілді. Біз бұл күйді есімізде сақтаймыз және шығыс трафиктің рұқсат етілгеніне қарамастан, оған бәрібір рұқсат етіледі және жауапты артқа жібереді.
Мысалды қарастырайық Security Groups. Мұнда шығыс және кіріс трафик rules үшін конфигурацияланғанын көруге болады. Егер біз шығатындарға қарасақ rules, 80 және 443 порттарына рұқсат етілгенін көреміз, яғни. барлық Интернеттен HTTPS қол жетімділік, яғни. кез келген Интернет IPv4 мекен-жайы біздің данаға қосыла алады. HTTP Тағы бір, үшіншіден, біздің желілік CIDR блок source көрсетілген кезде, біз осы желі байланыстырылған данаға қосыла аламыз Security Group. SSH Егер біз шығыс трафик туралы айтатын болсақ, біз Security Group ID дерекқорларымызды destination көрсете аламыз және 1433 портына рұқсат бере аламыз, сондықтан бұл мысал дерекқорларға қосыла Security Group алады портында 1433. Бұл Microsoft SQL Server дерекқорлар үшін әдепкі порт.
Қауіпсіздікті қамтамасыз етуге көмектесетін келесі VPC компонент Network Access Control Lists. Сіз оны жиі кездестіресіз Network ACLs. Network ACLs әрекет етеді, firewall сонымен қатар кіріс және шығыс трафикті subnet -деңгейде басқарады. Бұл міндетті емес, сондықтан оны пайдалану сізге байланысты немесе жоқ. Amazon өз тарапымнан оны пайдалануды және барлық сіздікі rules үшін кіріс және шығыс қоңырауларын қайталауды ұсынады VPC.
Біз туралы сөйлескен кезде Network ACLs, барлығы олардың біреуіне қосылуы subnet керек Network ACLs. Егер сіз сілтемені нақты көрсетпесеңіз, сілтемелер әдепкіге subnet байланысты Network ACLs. Мұндағы маңызды мәселе - барлығына subnet тек біреуіне қосылуға болады Network ACL, ал subnet бірнеше адамға қосылуға болады Network ACL. Біреуін екіншісіне subnet байланыстырған кезде Network ACL, алдыңғы байланыстыру алынып тасталады.
Network ACLs осы сияқты көрінеді. Network ACLs Бұл әдепкі мысал. Әдепкі бойынша, кіріс және шығыс бәріне рұқсат етіледі IPv4 traffic. Егер қолданылса, оған IPv6 traffic да рұқсат етіледі. Айта кету керек stateless, бұл мемлекет, яғни сақталмайды. Network ACLs Осылайша, сіз жасаған кезде, ресурс үшін шығыс сұранысын елестетіп көрейік, егер сізге рұқсат етілсе outbound traffic, сұрау өтеді. Содан кейін, сіз жауап қайтарған кезде, inbound traffic ол рұқсат етілгенін тексереді, содан кейін сіз жауап аласыз. Network ACLs stateless Егер ол бұл кіріс трафиктің өтуіне жол inbound traffic бермейтінін айтса, сіз өзіңіздің алушыңызға жетсе де, жауап алмайсыз. Кері де дұрыс, яғни. сыртқы ресурс сізден жауап алу үшін екеуіне outbound де рұқсат етілуі керек inbound traffic. Әйтпесе, сіз ресурстан сұраныс аласыз, бірақ сіз осы ресурсқа жауап бере алмайсыз, өйткені ол оны жіберіп алмайды Network ACLs және rule ішінде сәйкес келмейді outbound traffic.
Мұнда сіз қазірдің Network ACLs өзінде аяқталған мысалды көре аласыз. Біз тапсырыс жасаған кезде барлық кіріс және шығыс трафикке тыйым салынады. Network ACLs Сондықтан, қажет болған жағдайда rules, қосу керек, яғни. кіріс немесе шығыс трафикке мүмкіндік беретін ережелер. Мұнда сіз кіріс және шығыс трафиктің SSH қосылыстарға рұқсат HTTPS етілгенін көре аласыз. Сонымен бірге, кез-келген IPv4 мекен-жайды бағдарламалық жасақтамаға қосуға HTTPS болады, яғни. Интернеттен SSH қол жетімділік бар және тек 192.0.2.0/24 CIDR блогынан IP мекенжайлар қосуға болады, яғни. мұнда сіз жергілікті желіні көрсете аласыз.
Мүмкін, енді сіз не ерекшеленетіні туралы аздап шатасқан Security groups шығарсыз Network ACLs, сондықтан олардың қалай ерекшеленетінін кестелік түрде салыстырайық. Біз туралы айтатын болсақ Security groups, Security groups олар сатыдағы деңгейде жұмыс істейді, ал Network ACLs олар деңгейде жұмыс істейді subnet, яғни. олар байланған subnet. Ережелер туралы сөйлескен кезде, тек бір нәрсеге мүмкіндік беретін ережелер, яғни. трафикке рұқсат етіңіз, оларды Security groups қолдаңыз. Біз сөйлескен кезде Network ACLs, бір нәрсеге мүмкіндік беретін ережелер ғана емес, сонымен қатар сіз трафикке тыйым салатын ережелерді орната аласыз. Біз туралы сөйлескен кезде Security groups, ол stateful, яғни мемлекетті есіне алады. Бұл дегеніміз, кіре алатын трафик міндетті түрде шығады Outbound rules. Кері де дұрыс. Егер сізде өткен біреу Outbound traffic болса, онда сіз қайсысын Inbound rules тіркегеніңізге қарамастан, ол қайтып келеді. Біз туралы Network ACLs сөйлескен кезде stateless, ол, яғни, ол мемлекетті есіне түсірмейді және сұраныстың сәтті Network ACLs өтуі Inbound rules үшін оны екеуінде де шешу керек және жылы Outbound rules, әйтпесе кейбір нүктесінде ол өтпейді. Төртінші мәселе - трафикке рұқсат Security groups беру немесе бермеу туралы шешім қабылдау үшін ол барлық қол жетімді адамдарға қарайды rules, содан кейін шешім қабылдайды. Біз туралы сөйлескен кезде Network ACLs, ол жоғарыдан төменге дейін бәріне басымдық rules береді. Біз трафикке мүмкіндік беретін ережелерді тапқан сәтте, қалған ережелер қарастырылмайды және трафикке рұқсат етіледі. Біз төрт бөлімді аяқтаймыз. Мұнда біз оның не екенін Security groups және не екенін егжей-тегжейлі талқыладық Network ACLs. Бұл компоненттердің екеуі де бізді қорғауға көмектеседі VPC.
Сіз және мен оны бесінші бөлімге айналдырдық. Міне, біз Amazon Route 53 қызметі туралы сөйлесеміз. Бұл бізге қызмет көрсететін DNS қызмет. Қарапайым тілмен айтқанда, бұл пайдаланушылар сайтты ашқан сәтте дегенді білдіреді www. example. com, содан кейін бұл қызмет трафикті тиісті IP мекенжайларға, атап айтқанда, біздің инфрақұрылымдық IP мекенжайларымызға, біздің инстанцияларымызға бағыттайды. Amazon Route 53 қызметтердің кең спектрін қолдайды AWS. Бұл тек c даналар Amazon EC2 ғана емес, сонымен қатар Amazon S3 buckets Elastic Load Balancing басқа қызметтер болуы мүмкін. Amazon Route 53 ішінде сіз мақсатты IP мекенжайлардың күйіне жауап беру үшін трафикті икемді түрде теңшей аласыз, яғни. осы қызмет қайта бағытталатын IP мекенжайлар және сәйкесінше әрекет етіңіз, яғни трафикті осылай теңшей аласыз қабылдаушы тараппен проблемалар туындаған жағдайда қайта бағытталуы тиіс. Айта кету керек, Amazon Route 53 арқылы біз домендерді сатып ала аламыз. Қызмет парағында қай жоғарғы деңгейлі домендер бар екенін көруге және қарауға болады Amazon Route 53.
Бұл слайдта сіз пайдаланушының сұранысы белгілі бір сайтты ашқан кезде қалай өңделетінін көре аласыз. Пайдаланушы кірген кезде, мысалы, www. example. com, сайт атауы, содан кейін бұл сұрау барады DNS resolver. Бұл домендік атаудың байламдарын сақтайтын серверлер және ол қандай IP мекен-жайға қызмет етеді немесе бұл IP мекенжайды қайдан және қандай көзден алуға болатындығы туралы ақпарат. Егер ол DNS resolver бұл ақпарат болмаса, бірақ ол қайда бару керектігін білсе, ол Amazon Route 53-қызметке барады, ол оның параметрлеріне қарайды және мекенжайды сәйкесінше сол IP мекен-жайға қайтарады DNS шешгіші . DNS resolver содан кейін бұл IP мекенжайды пайдаланушыға қайтарады және бұл пайдаланушыға мөлдір. Ол браузер сызығында терген кезде, ол қазірдің өзінде ашық сайтты көреді. Бірақ мұнда екі қадам бар. Сіз және мен алғашқы қадамды көрдік. Екінші қадам, браузер IP -мекен-жайын алғаннан кейін, ол осы сұранысты тиісті IP мекен-жайға жасайды және сол жерден жауап алады және оны пайдаланушыға көрсетеді. Кіріс жолында іздеу жолағында пайдаланушы әлі де басында енгізген домен атауына ие болады.
Amazon Route 53 біздің трафикті бағыттауға және икемді реттеуге policy көмектесетін бірнеше түрлі адамдарды қолдайды. Бұл бірінші болып табылады Simple routing. Идея - Amazon Route 53 параметрлерінде домен атауына қызмет ететін бір немесе бірнеше IP мекенжайды көрсетесіз. Сұрау келген сәтте бұл қызмет кездейсоқ, кездейсоқ түрде IP мекен-жайлардың біреуін береді, ал пайдаланушының жағындағы браузер пайдаланушының сұранысына жауап алу үшін осы IP мекен-жайға барады.
Келесі жетілдірілген policy нәрсе - бұл Weighted round robin routing. Оның идеясы - сіз өзіңіздің IP мекен-жайларыңыздың, трафикке қызмет ететін серверлердің тізімі үшін бірнеше салмақ орната аласыз. Сізде екі сервер бар делік, біреуі қуатты, екіншісі аз қуатты. Бұл жағдайда сіз, мысалы, трафиктің 75% -ын үлкен серверге, ал қалған 25% -ын кішірек жібере аласыз.
Үшінші нұсқа - бұл Latency routing. Бұл алдыңғы екіге қарағанда күрделі. Оның идеясы - бұл нақты IP мекен-жайлардан жауап беру жылдамдығын өлшейді және ең жылдам жауап беретінді таңдайды. Сізге мысал келтірейін. Біздің инфрақұрылымымыз екі AWS аймақта орналастырылғанын елестетіп көрейік. Біраз уақыттан кейін және қажетті ақпаратты жинағаннан кейін, Amazon Route 53 пайдаланушыларға осы пайдаланушы үшін тезірек жұмыс істейтін аймақты береді.
Келесі нәрсе - бұл Geolocation routing. Идея мынада, біз белгілі бір аймақтан пайдаланушыларды осы трафикке қызмет ететін серверлерге немесе IP мекен-жайларға бағыттай аламыз. Бұл әдетте трафикті тиісті сайтқа дұрыс тілде бағыттау үшін қолданылады. Біз, пайдаланушы ретінде, Орталық Азия елінен қосыламыз деп елестетіп көрейік, біз орыс тілін білеміз, бұл жағдайда сайтты сайттың орыс тіліндегі нұсқасына бағыттайтын етіп конфигурациялауға болады. Егер пайдаланушы ағылшын тілінде сөйлейтін елден қосылса, бұл жағдайда пайдаланушы ағылшын тіліндегі трафикке қызмет ететін серверлерге бағытталады.
Келесі policy - бұл Geoproximity routing. Идея мынада, біз пайдаланушылардың орналасқан жеріне Geolocation routing қарағанымыздан айырмашылығы, Geoproximity routing біз инфрақұрылымның орналасқан жерін қарастырамыз. Тиісінше, біз жауап береміз.
Келесі - бұл Failover routing. Идея - біз бөлісеміз IP -address active және passive. Және трафикті өңдейтін active IP мекен-жай немесе ресурспен бәрі жақсы болған кезде, барлық трафик сонда жүреді. Кейбір проблемалар туындаған жағдайда, трафик әр сұрақты өңдеу және жіберіп алмау үшін автоматты түрде резервтік IP мекен-жайға бағытталады. active Ол қайтадан қол жетімді болған кезде, коммутатор іске қосылады және барлық трафик active IP -мекен-жайларға қайта бағытталады.
Ең соңғысы - бұл Multivalue answer routing. Идея, барлық алдыңғы жағдайларда біз пайдаланушыға бір нақты IP мекенжайды қайтардық. Біз болған жағдайда Multivalue answer routing біз бірнеше IP мекен-жайларды жібереміз, содан кейін параметрлерге немесе алгоритмге байланысты браузер қай IP мекен-жайға бару керектігін анықтайды.
Мұнда сіз Amazon Route 53 қызметін пайдаланудың мысалын және оның қандай артықшылықтарын көре аласыз. Мысалы, біздің инфрақұрылымымыз бірнеше өңірлерде орналастырылған. Егер бірінші аймаққа жақын аймақтан келген пайдаланушы қосылса және біз оны Amazon Route 53-жақта орнатқан болсақ Latency-based routing, бұл жағдайда пайдаланушы өзіне жақын аймаққа бағытталады. Тұтастай алғанда, бұл сұрау сәл алыс аймаққа барғаннан гөрі тезірек жауап алады.
Бұл слайдта сіз теңшеу орын AWS алатын беттің мысалын көре аласыз Failover routing policy. Бұл мысал біздің трафикті бағыттау ережелерін икемді түрде реттеуге болатындығын көрсету үшін келтірілген. Егер біз белгілі бір мысал туралы айтатын болсақ, онда бізде Failure threshold 3 бар екенін көреміз, яғни егер 3 дәйекті сұрау сәтсіз болса, онда біз ауысамыз және барлық трафик осы трафикке қызмет ететін резервтік IP мекен-жайымызға өтеді. Содан кейін әр 30 секунд немесе 10 секунд Request interval сайын біз негізгі active IP мекен-жайға орала алатынымызды тексереміз.
Бұл слайд теңшеудің тағы бір мысалын ұсынады Failover routing policy. Бізде негізгі трафикке қызмет көрсететін инфрақұрылым бар деп елестетіп көрейік, ал Amazon Route 53-те бұл инфрақұрылым негізгі болып табылады, яғни Active Route. Нәтижесінде сұрау динамикалық жауап қайтару үшін дерекқорға қол жеткізетін біздің Amazon EC2 даналарымызға жетеді. Ал Amazon Route Failover 53-жағында ол конфигурацияланған, егер даналар қол жетімді болмаса, біз жұмыс Failover policy істейміз және біз Secondary, яғни Passive IP мекен-жайларға ауысамыз. Бұл жағдайда біз трафикті қызметке орналастырылған статикалық веб-сайтымызға бағыттай аламыз Amazon S3. Осылайша біз барлық пайдаланушыларды дұрыс емдей алмаймыз, бірақ кем дегенде біз оларды тиісті веб-сайтқа бағыттай аламыз, онда олар көп немесе аз нақты жауап ала алады және сіз өз клиенттеріңізді жоғалтпайсыз. Amazon Route 53 сәт жауап алады, мезгіл-мезгіл біздің Amazon EC2 даналарымыз сұрауларды сәтті қабылдап жатқанын тексереді, олар кері ауысады және барлық трафик біздің Amazon EC2 даналарымызға барады.
Біз бесінші бөлімді аяқтаймыз. Біз не болғанымызды жылдам қарастырайық. Біріншісі - Amazon Route 53 - бұл бізді ұсынатын жоғары қол жетімді және масштабталатын қызмет DNS. Қарапайым тілмен айтқанда, бұл біздің трафикті біздің домендік атауымыздан осы сұранысты өңдейтін даналарымызға бағыттайтын қызмет. Amazon Route 53-қызмет арқылы біз домендік атауларды да сатып ала аламыз. Сіз осы қызметтің ресми бетінде бізге қандай жоғары деңгейлі домендер қол жетімді екенін көре аласыз. Әрі қарай, не атап өту керек және не келуі мүмкін және нақты емтиханға AWS келуі Routing policy мүмкін Amazon Route 53. Шын мәнінде, бұл сұрақтар ең оңай. Әрқайсысының не екенін түсіну жеткілікті Routing policy, және бұл сұраққа дұрыс жауап беру үшін жеткілікті болады. Сіз бұл сұрақтарды біздің сайтта кездестіресіз Practice test және сіз оларды қолдана аласыз. Осыдан кейін біз Amazon Route 53 қызметін инфрақұрылыммен пайдаланудың бірнеше мысалын қарастырдық AWS.
Біз оны дәрістің соңғы бөліміне айналдырдық және қызмет туралы сөйлесеміз Amazon CloudFront. Бұл Интернет-трафикті бір жолмен өңдейтін барлық IT инфрақұрылымдарда қолданылатын негізгі қызметтердің бірі. Бұл қызмет Content Delivery Network, яғни CDN. Қарапайым тілмен айтқанда, бұл сіздің барлық медиа файлдарыңызды пайдаланушыларға жақындататын қызмет, осылайша ол тезірек, арзан және сіз үшін қауіпсіз.
Неліктен маңызды және пайдаланушы тәжірибесін CDN жақсартуға қалай көмектесетіні туралы мысалды қарастырайық. Пайдаланушы сұрау жасағанда, олар бастапқы серверге жету үшін бірнеше түйіндерден өтіп, кейбір деректеріңізді, медиа деректерін серверден сұрай алады. Пайдаланушыдан біздің серверлерге дейінгі қашықтық өте үлкен болуы мүмкін және бұл сіздің қосымшаңыздың жылдамдығына әсер етеді. Бұл пайдаланушы тәжірибесін нашарлатады. Сондықтан, мұндай тәсіл бар Content Delivery Network. CDN Идея - кейбір түйіндер сіздің медиаңызды немесе басқа деректерді кэштейді. Осылайша, бастапқы, бастапқы сервер көздеріне жетпестен, пайдаланушы қажетті мазмұнды ертерек ала алады және бұл әр пайдаланушының сұранысы үшін өңдеу уақытын тездетеді. Осылайша Content Delivery Network, CDN бұл біз үшін шешім. Content Delivery Network бұл байланысты емес IT өрістегі тұжырымдама Amazon. Сондықтан, бұл өте ұзақ мерзімді технология мен тәсіл. Идея мынада, бұл кейбір мазмұнды кэштейтін өзара байланысты серверлер желісі. Мазмұн HTML беттер, CSS беттер, JavaScript файлдар, суреттер, бейнелер, бейнелер, аудио тректер және т.б. болуы мүмкін, яғни. кез-келген медиа файлдар. Сонымен қатар, жетілдірілген пайдаланушылар динамикалық мазмұнды өңдей және кэштей SDN алады. Осылайша, пайдаланушыларға сұраныстың бастапқы қызметке жетуін күтудің қажеті жоқ. Шын мәнінде, ортасында бір жерде кэште осы пайдаланушы үшін дайын жауап бар немесе бар. Бұл пайдаланушы тәжірибесін жақсартады. Егер біз туралы айтатын болсақ AWS, онда арнайы қызмет бар CDN, яғни, Content Delivery Network деп аталады Amazon CloudFront.
Біз бұған дейін жаһандық инфрақұрылымның не екенін талқыладық AWS. Бұл кезде бізде AWS өңірлер бар, әр аймақта availability zone деректер орталықтары availability zone бар және біз қандай деректер орталықтары бар екенін талқыладық. Сондай-ақ, параллель инфрақұрылым бар AWS, ол CloudFront деп аталады Amazon CloudFront Infrastructure. Ол екі компоненттен тұрады. Бұл Edge locations да Regional edge caches. Бұл қалай ерекшеленеді? Edge locations — бұл соңғы пайдаланушыларға ең жақын серверлер. Осылайша, ол ең танымал, ең қажетті және жиі сұралатын мазмұнды сақтайды. Біраз қашықтықта орналасқан Regional edge cache, ол сәл үлкенірек аймақтан ақпаратты сақтайды. Оның деректеріне қарағанда танымал, бірақ танымал емес деректер бар Edge locations. Бұл сонымен қатар, бір себептермен немесе басқа себептермен сәйкес келмейтін мәліметтер болуы мүмкін Edge locations. Олар кэште беріледі және сақталады Regional Edge cache. Regional Edge cache Осыдан кейін, бізде ең алыс қашықтық - бастапқы көздерге тікелей өту. Сонымен, бізде үш қадам, үш түйін бар. Ең алыс әдіс - бастапқы серверлерге тікелей кіру. Егер біз мазмұнды алсақ, сәл жылдамырақ Regional Edge cache. Біз ең жылдам мазмұнды аламыз Edge locations.
Қызметті пайдаланудың негізгі артықшылықтарын қарастырайық Amazon CloudFront. Біріншісі - бұл қызмет жылдам және жаһандық. Әрі қарай, біз кэштелген соңғы серверлерде қауіпсіздікті теңшей аламыз. Біз қызметтің әрекетін одан әрі бағдарламалай аламыз AWS Lambda Edge. Amazon CloudFront Бұл қызмет қызметтермен CDN мүмкіндігінше біріктірілген AWS. Бұл сонымен қатар біздің Интернет пайдаланушыларына тікелей серверлерден қызмет еткеннен гөрі әлдеқайда тиімді және жылдам шешім.
Amazon CloudFront ақылы ресурс болып табылады, бірақ кез-келген басқа қызмет сияқты AWS, біз тек қолданғанымыз үшін төлейміз. Қызмет аясында Amazon CloudFront біз кэш серверлеріне берген деректердің көлемін төлейміз. Сондай-ақ, біз осы кэш серверлеріне сұраныстар HTTP мен HTTPS сұраныстар саны үшін төлейміз. Олар қосымша төленеді Invalidation requests. Бұл сұраныс бойынша барлық кэш серверлерін біздің деректерімізден тазарту қажет болған кезде. Бұл әдетте қатені тауып, оны тез түзеткен кезде қажет. Біз пайдаланушыларға қолданбаның немесе деректердің жаңартылған нұсқасын алғымыз келеді. Бұл жағдайда біз жасаймыз Invalidation Requests. Басқа нұсқа - бізде үлкен жаңарту болған кезде және біз бұл үлкен жаңартудың біздің пайдаланушыларға тезірек жетуін қалаймыз. Бұл жағдайда біз кэшті тазалауымыз керек, ал сұрау салуды бастайтын барлық пайдаланушылар бірінші пайдаланушы арқылы сұрау жасайды CloudFront CloudFront, содан кейін бұл деректер қол жетімді емес болғандықтан, бастапқы серверлерді сұрайды және осы деректерді алады, содан кейін оны кэштейді . Және бірдей деректерді сұрайтын барлық кейінгі пайдаланушылар енді бастапқы серверлерден алмайды, бірақ біздің Edge серверлерден тезірек.
Тағы бір нәрсе - бұл деп аталатындарды орнатуға болады Dedicated IP custom SSL. Бұл пайдаланушылар жиі пайдаланбайтын опция AWS, бірақ сіз мұндай опция бар екенін есте сақтауыңыз керек. Сіз ресми қызмет құжаттамасы туралы қосымша мәліметтерді таба аласыз Amazon CloudFront.
Біз дәрістің алтыншы және қорытынды бөлімін аяқтадық. Біз қызметті егжей-тегжейлі білдік Amazon CloudFront, сонымен қатар оның не екенін CDN, не үшін қолданылатынын білдік, сондай-ақ бізге ұсынатын AWS аутсорсингтік қызмет бар екенін білдік CDN. Оны CloudFront пайдаланудың артықшылықтары - бұл қызмет жаһандық, сіз оны икемді түрде конфигурациялай аласыз, оның мінез-құлқын бағдарламалай аласыз, сонымен қатар қажетті қауіпсіздік параметрлерін жасай аласыз. Бұл AWS, демек, басқа қызметтермен жақсы біріктірілген және сіз өзіңіздің қосымшаларыңыздың пайдаланушыларына көп мөлшерде ақпарат берген кезде өте үнемді шешім болып табылады.
Бұл біздің дәріс сессиямызды аяқтайды. Бүгінгі бастан өткерген маңызды сәттерден өтейік. Бұл біз байланыстырылмаған желілердің негіздерін қарастырдық AWS, бірақ бұл ішкі байланысты қызметтерді түсінуді жеңілдететін Networking ақпарат AWS. Содан кейін біз қызметпен таныстық Amazon VPC, оның қосымша компоненттерін, соның ішінде қауіпсіздікті қамтамасыз етуге көмектесетін компоненттерді қарастырдық Security groups және бұл NetworkACLs. Осыдан кейін біз Amazon Route 53 қызметтерімен таныстық, осы қызметтерді Amazon CloudFront пайдалану мысалдарын және бұл қызметтер бұлтта біздің инфрақұрылымымызды қалай құруға көмектесетінін қарастырдық.
Мұнда сіз бүгін өткеніміз туралы көбірек білгіңіз келсе, сізге қажет болуы мүмкін сілтемелерді таба аласыз.
Бұл біздің дәріс сессиямызды аяқтайды. Сіз бүгін өзіңіз үшін жаңа нәрсе білдіңіз деп үміттенемін. Біз сізді келесі іс-шараларымызда көреміз.
